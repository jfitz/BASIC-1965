INITIAL CONFIGURATION:

PILE  1  10
PILE  2  13
PILE  3  6


PILE, NUMBER TAKEN? 1,3

MY MOVE: 2 , 12

NEW CONFIGURATION:

PILE  1  7
PILE  2  1
PILE  3  6


PILE, NUMBER TAKEN? 1,3

MY MOVE: 3 , 1

NEW CONFIGURATION:

PILE  1  4
PILE  2  1
PILE  3  5


PILE, NUMBER TAKEN? 1,3

MY MOVE: 3 , 5

NEW CONFIGURATION:

PILE  1  1
PILE  2  1
PILE  3  0


PILE, NUMBER TAKEN? 2,1

MY MOVE: 1 , 1

I WIN *****


INITIAL CONFIGURATION:

PILE  1  9
PILE  2  7
PILE  3  6


PILE, NUMBER TAKEN? 3,3

MY MOVE: 1 , 5

NEW CONFIGURATION:

PILE  1  4
PILE  2  7
PILE  3  3


PILE, NUMBER TAKEN? 3,3

MY MOVE: 2 , 3

NEW CONFIGURATION:

PILE  1  4
PILE  2  4
PILE  3  0


PILE, NUMBER TAKEN? 2,3

MY MOVE: 1 , 3

NEW CONFIGURATION:

PILE  1  1
PILE  2  1
PILE  3  0


PILE, NUMBER TAKEN? 2,1

MY MOVE: 1 , 1

I WIN *****


INITIAL CONFIGURATION:

PILE  1  7
PILE  2  9
PILE  3  9


PILE, NUMBER TAKEN? 
Error 102 End of file in line 230

100 (0) REM THIS PROGRAM PLAYS THREE-PILE NIM, WITH RANDOM NUMBERS
110 (0) REM IN EACH PILE. PLAYER WHO CLEARS BOARD WINS.
120 (0) 
130 (0) REM INITIALIZE
140 F(P:140) (3) FOR P = 1 TO 3
150 F(P:140) (9) LET N(P) = INT(10 * RND(0)) + 6
160 F(P:140) (9) NEXT P
170 (3) PRINT "INITIAL CONFIGURATION:"
180 (3) PRINT
190 (3) GOSUB 900
200 (0) 
210 (0) REM OPPONENT'S MOVE
220 (9) PRINT "PILE, NUMBER TAKEN";
230 (8) INPUT P, N
240 (8) LET N(P) = N(P) - N
250 (8) IF N(P) >= 0 THEN 300
260 (0) PRINT "ILLEGAL MOVE"
270 (0) LET N(P) = N(P) + N
280 (0) PRINT
290 (0) GOTO 200
300 (8) IF N(1) + N(2) + N(3) > 0 THEN 370
310 (0) PRINT
320 (0) PRINT "YOU WIN *****"
330 (2) PRINT
340 (2) PRINT
350 (2) GOTO 140
360 (0) 
370 (0) REM SET UP BIT-PATTERNS
380 F(P:380) (8) FOR P = 1 TO 3
390 F(P:380) (24) LET X = N(P)
400 F(P:380,J:400) (24) FOR J = 4 TO 1 STEP -1
410 F(P:380,J:400) (96) LET Y = INT(X / 2)
420 F(P:380,J:400) (96) LET B(P, J) = X - 2 * Y
430 F(P:380,J:400) (96) LET X = Y
440 F(P:380,J:400) (96) NEXT J
450 F(P:380) (24) NEXT P
460 (0) 
470 (0) REM FIND COLUMN PARITIES
480 F(J:480) (8) FOR J = 1 TO 4
490 F(J:480) (32) LET S(J) = B(1, J) + B(2, J) + B(3, J)
500 F(J:480) (32) LET S(J) = S(J) - 2 * INT(S(J) / 2)
510 F(J:480) (32) NEXT J
520 (0) 
530 (0) REM IF ALL EVEN, MAKE RANDOM MOVE
540 (8) IF S(1) + S(2) + S(3) + S(4) > 0 THEN 610
550 F(P:550) (0) FOR P = 1 TO 3
560 F(P:550) (0) IF N(P) = 0 THEN 590
570 F(P:550) (0) LET N = INT(N(P) * RND(0)) + 1
580 F(P:550) (0) BREAK
590 F(P:550) (0) NEXT P
591 (0) IF BROKEN() THEN 770
600 (0) 
610 (0) REM MAKE OPTIMAL MOVE
620 F(J:620) (8) FOR J = 1 TO 4
630 F(J:620) (20) IF S(J) <= 0 THEN 640
639 F(J:620) (8) BREAK
640 F(J:620) (20) NEXT J
650 F(P:650) (8) FOR P = 1 TO 3
660 F(P:650) (14) IF B(P, J) <> 1 THEN 670
669 F(P:650) (8) BREAK
670 F(P:650) (14) NEXT P
680 (8) LET N = 0
690 F(J:690) (8) FOR J = J TO 4
700 F(J:690) (20) IF S(J) = 0 THEN 750
710 F(J:690) (15) IF B(P, J) = 0 THEN 740
720 F(J:690) (12) LET N = N + 2 ^ (4 - J)
730 F(J:690) (12) GOTO 750
740 F(J:690) (3) LET N = N - 2 ^ (4 - J)
750 F(J:690) (20) NEXT J
760 (0) 
770 (0) REM CARRY OUT MOVE
780 (8) PRINT
790 (8) PRINT "MY MOVE:" P; "," N
800 (8) PRINT
810 (8) LET N(P) = N(P) - N
820 (8) IF N(1) + N(2) + N(3) > 0 THEN 850
830 (2) PRINT "I WIN *****"
840 (2) GOTO 330
850 (6) PRINT "NEW CONFIGURATION:"
860 (6) PRINT
870 (6) GOSUB 900
880 (6) GOTO 210
890 (0) 
900 (0) REM PRINT CONFIGURATION
910 G(910) F(P:910) (9) FOR P = 1 TO 3
920 G(910) F(P:910) (27) PRINT "PILE " P; N(P)
930 G(910) F(P:910) (27) NEXT P
940 G(910) (9) PRINT
950 G(910) (9) PRINT
960 G(910) (9) RETURN
970 (0) END

