100 REM ANGLE-SIDE-SIDE
 Remark:ANGLE-SIDE-SIDE
110 LET P = 3.14159265
 Variable:P -> _
 NumericValue:3.14159265
 AssignmentOperator:= =_ -> _
120 DEF FND(X) = X*P/180
 UserFunctionName:FND -> _
 VariableName:X -> _
 Variable:X -> _
 Variable:P -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:180
 BinaryOperatorDivide:/(_,_) -> _
130 DEF FNS(X) = SIN(FND(X))
 UserFunctionName:FNS -> _
 VariableName:X -> _
 Variable:X -> _
 UserFunction:FND(_) -> _
 FunctionSin:SIN(_) -> _
135 DEF FNR(X) = INT(100*X+0.5)/100
 UserFunctionName:FNR -> _
 VariableName:X -> _
 NumericValue:100
 Variable:X -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericValue:0.5
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
 NumericValue:100
 BinaryOperatorDivide:/(_,_) -> _
140 PRINT "ANGLE", "SIDE", "SIDE", "THIRD SIDE", "CASE 2"
 TextValue:"ANGLE"
 CarriageControl:,
 TextValue:"SIDE"
 CarriageControl:,
 TextValue:"SIDE"
 CarriageControl:,
 TextValue:"THIRD SIDE"
 CarriageControl:,
 TextValue:"CASE 2"
 CarriageControl:NL
150 READ B,X,Y
 Variable:B -> _
 Variable:X -> _
 Variable:Y -> _
160 PRINT B,X,Y,
 Variable:B -> _
 CarriageControl:,
 Variable:X -> _
 CarriageControl:,
 Variable:Y -> _
 CarriageControl:,
170 LET S = X*FNS(B)/Y
 Variable:S -> _
 Variable:X -> _
 Variable:B -> _
 UserFunction:FNS(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:Y -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
180 IF S > 1 THEN 290
 Variable:S -> _
 NumericValue:1
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:290
190 IF FNR(S) = 1 THEN 320
 Variable:S -> _
 UserFunction:FNR(_) -> _
 NumericValue:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:320
195
200 REM TWO POINTS OF INTERSECTION
 Remark:TWO POINTS OF INTERSECTION
210 LET T = S/SQR(1-S^2)
 Variable:T -> _
 Variable:S -> _
 NumericValue:1
 Variable:S -> _
 NumericValue:2
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionSqr:SQR(_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
220 LET C = ATN(T)*180/P
 Variable:C -> _
 Variable:T -> _
 FunctionArcTan:ATN(_) -> _
 NumericValue:180
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:P -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
230 LET A = 180 - B - C
 Variable:A -> _
 NumericValue:180
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
240 GOSUB 370
 LineNumber:370
250 LET C = 180 - C
 Variable:C -> _
 NumericValue:180
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
260 LET A = 180 - B - C
 Variable:A -> _
 NumericValue:180
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
270 GOSUB 370
 LineNumber:370
275 PRINT
 CarriageControl:NL
280 GOTO 150
 LineNumber:150
285
290 REM NO POINT OF INTERSECTION
 Remark:NO POINT OF INTERSECTION
300 PRINT "NONE", "NONE"
 TextValue:"NONE"
 CarriageControl:,
 TextValue:"NONE"
 CarriageControl:NL
310 GOTO 150
 LineNumber:150
315
320 REM ONE POINT OF INTERSECTION
 Remark:ONE POINT OF INTERSECTION
330 LET A = 90 - B
 Variable:A -> _
 NumericValue:90
 Variable:B -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
340 GOSUB 370
 LineNumber:370
350 PRINT "NONE"
 TextValue:"NONE"
 CarriageControl:NL
360 GOTO 150
 LineNumber:150
365
370 REM ANGLE-SIDE-ANGLE ROUTINE
 Remark:ANGLE-SIDE-ANGLE ROUTINE
380 LET Z = X*FNS(A)/S
 Variable:Z -> _
 Variable:X -> _
 Variable:A -> _
 UserFunction:FNS(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:S -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
390 IF Z >= 0 THEN 420
 Variable:Z -> _
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(_,_) -> ?
 LineNumber:420
400 PRINT "NONE",
 TextValue:"NONE"
 CarriageControl:,
410 RETURN
 
420 PRINT Z,
 Variable:Z -> _
 CarriageControl:,
430 RETURN
 
440
450 DATA 60,10,8, 60,10,9, 60,10,11, 120,10,8, 120,10,9
 NumericValue:60
 NumericValue:10
 NumericValue:8
 NumericValue:60
 NumericValue:10
 NumericValue:9
 NumericValue:60
 NumericValue:10
 NumericValue:11
 NumericValue:120
 NumericValue:10
 NumericValue:8
 NumericValue:120
 NumericValue:10
 NumericValue:9
460 DATA 120,10,11, 90,3,5, 60,5,5, 30,10,5
 NumericValue:120
 NumericValue:10
 NumericValue:11
 NumericValue:90
 NumericValue:3
 NumericValue:5
 NumericValue:60
 NumericValue:5
 NumericValue:5
 NumericValue:30
 NumericValue:10
 NumericValue:5
470 END
 

