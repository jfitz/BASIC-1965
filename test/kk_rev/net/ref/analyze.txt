Statistics:

Number of lines: 58
Number of valid statements: 51
Number of comments: 0
Number of executable statements: 46

Complexity:

Comment density: 0.000
Comprehension effort: 159
McCabe complexity: 12
Halstead complexity:
 length: 311
 volume: 1330.043
 difficulty: 30.577
 effort: 40668.627
 language: 1.423
 intelligence: 43.498
 time: 37.656

FNR(_) (0 4) 100 DEF FNR(X) = INT(X * 1E3 + .5) / 1E3
  Origs: 
  Dests: 
(0 5) 110 DIM C(20, 20), U(20, 20), B(20), P(20)
  Origs: :start
  Dests: 120:auto
(2 3) 120 READ N, V
  Origs: 110:auto
  Dests: 130:auto
(0 4) 130 MAT C = ZER(N, N)
  Origs: 120:auto
  Dests: 150:auto
(0 4) 150 MAT B = ZER(N)
  Origs: 130:auto
  Dests: 170:auto
(0 3) 170 LET C(1, 1) = 1
  Origs: 150:auto
  Dests: 180:auto
(0 3) 180 LET C(N, N) = 1
  Origs: 170:auto
  Dests: 190:auto
(0 3) 190 LET B(1) = V
  Origs: 180:auto
  Dests: 210:auto
(0 0) 200 
  Origs: 
  Dests: 
(3 4) 210 READ I, J, R
  Origs: 190:auto, 250:goto
  Dests: 220:auto
(1 6) 220 IF I = -1 THEN 270
  Origs: 210:auto
  Dests: 230:auto, 270:ifthen
(0 4) 230 LET C(I, J) = 1 / R
  Origs: 220:auto
  Dests: 240:auto
(0 4) 240 LET C(J, I) = 1 / R
  Origs: 230:auto
  Dests: 250:auto
(0 3) 250 GOTO 210
  Origs: 240:auto
  Dests: 210:goto
(0 0) 260 
  Origs: 
  Dests: 
(1 4) 270 FOR I = 2 TO N - 1
  Origs: 220:ifthen
  Dests: 280:fornext, 350:fornext
(0 3) 280 LET S = 0
  Origs: 270:fornext
  Dests: 290:auto
(1 3) 290 FOR J = 1 TO N
  Origs: 280:auto
  Dests: 300:fornext, 310:fornext
(0 4) 300 LET S = S + C(I, J)
  Origs: 290:fornext
  Dests: 310:auto
(0 1) 310 NEXT J
  Origs: 290:fornext, 300:auto
  Dests: 320:auto
(0 4) 320 LET C(I, I) = -S
  Origs: 310:auto
  Dests: 330:auto
(0 3) 330 LET C(1, I) = 0
  Origs: 320:auto
  Dests: 340:auto
(0 3) 340 LET C(N, I) = 0
  Origs: 330:auto
  Dests: 350:auto
(0 1) 350 NEXT I
  Origs: 270:fornext, 340:auto
  Dests: 370:auto
(0 0) 360 
  Origs: 
  Dests: 
(0 4) 370 MAT U = INV(C)
  Origs: 350:auto
  Dests: 380:auto
(0 4) 380 MAT P = U * B
  Origs: 370:auto
  Dests: 400:auto
(0 0) 390 
  Origs: 
  Dests: 
(0 3) 400 PRINT "NODE", "VOLTAGE"
  Origs: 380:auto
  Dests: 410:auto
(0 2) 410 PRINT
  Origs: 400:auto
  Dests: 420:auto
(1 3) 420 FOR I = 1 TO N
  Origs: 410:auto
  Dests: 430:fornext, 440:fornext
(0 5) 430 PRINT I, FNR(P(I))
  Origs: 420:fornext
  Dests: 440:auto
(0 1) 440 NEXT I
  Origs: 420:fornext, 430:auto
  Dests: 450:auto
(0 2) 450 PRINT
  Origs: 440:auto
  Dests: 460:auto
(0 2) 460 PRINT
  Origs: 450:auto
  Dests: 480:auto
(0 0) 470 
  Origs: 
  Dests: 
(0 2) 480 PRINT "CURRENT FLOW"
  Origs: 460:auto
  Dests: 490:auto
(0 2) 490 PRINT
  Origs: 480:auto
  Dests: 500:auto
(0 3) 500 LET S1 = 0
  Origs: 490:auto
  Dests: 510:auto
(1 4) 510 FOR I = 2 TO N - 1
  Origs: 500:auto
  Dests: 520:fornext, 590:fornext
(0 3) 520 PRINT "NODE" I
  Origs: 510:fornext
  Dests: 530:auto
(1 3) 530 FOR J = 1 TO N
  Origs: 520:auto
  Dests: 540:fornext, 550:fornext
(0 4) 540 PRINT FNR(C(I, J) * (P(I) - P(J))),
  Origs: 530:fornext
  Dests: 550:auto
(0 1) 550 NEXT J
  Origs: 530:fornext, 540:auto
  Dests: 560:auto
(0 8) 560 LET S1 = S1 + C(I, N) * (P(I) - P(N))
  Origs: 550:auto
  Dests: 570:auto
(0 2) 570 PRINT
  Origs: 560:auto
  Dests: 580:auto
(0 2) 580 PRINT
  Origs: 570:auto
  Dests: 590:auto
(0 1) 590 NEXT I
  Origs: 510:fornext, 580:auto
  Dests: 600:auto
(0 2) 600 PRINT
  Origs: 590:auto
  Dests: 620:auto
(0 0) 610 
  Origs: 
  Dests: 
(0 5) 620 PRINT "TOTAL CURRENT = " FNR(S1)
  Origs: 600:auto
  Dests: 630:auto
(0 5) 630 PRINT "RESISTANCE OF CIRCUIT = " FNR(V / S1)
  Origs: 620:auto
  Dests: 690:auto
(0 0) 640 
  Origs: 
  Dests: 
(0 2) 650 DATA 7, 24
  Origs: 
  Dests: 
(0 2) 660 DATA 1, 2, 100, 2, 7, 50, 2, 3, 25, 1, 4, 16, 3, 4, 20, 3, 6, 40
  Origs: 
  Dests: 
(0 2) 670 DATA 4, 5, 60, 5, 6, 60, 6, 7, 40
  Origs: 
  Dests: 
(0 3) 680 DATA -1, 0, 0
  Origs: 
  Dests: 
(0 1) 690 END
  Origs: 630:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

