Statistics:

Number of lines: 58
Number of valid statements: 51
Number of comments: 0
Number of executable statements: 46

Complexity:

Comment density: 0.000
Comprehension effort: 159
McCabe complexity: 12
Halstead complexity:
 length: 311
 volume: 1330.043
 difficulty: 30.577
 effort: 40668.627
 language: 1.423
 intelligence: 43.498
 time: 37.656

100 FNR(.) (0 4) DEF FNR(X) = INT(X * 1000 + 0.5) / 1000
  Origs: 
  Dests: 
110 (0 5) DIM C(20, 20), U(20, 20), B(20), P(20)
  Origs: :start
  Dests: 120:auto
120 (2 3) READ N, V
  Origs: 110:auto
  Dests: 130:auto
130 (0 4) MAT C = ZER(N, N)
  Origs: 120:auto
  Dests: 150:auto
150 (0 4) MAT B = ZER(N)
  Origs: 130:auto
  Dests: 170:auto
170 (0 3) LET C(1, 1) = 1
  Origs: 150:auto
  Dests: 180:auto
180 (0 3) LET C(N, N) = 1
  Origs: 170:auto
  Dests: 190:auto
190 (0 3) LET B(1) = V
  Origs: 180:auto
  Dests: 210:auto
200 (0 0) 
  Origs: 
  Dests: 
210 (3 4) READ I, J, R
  Origs: 190:auto, 250:goto
  Dests: 220:auto
220 (1 6) IF I = -1 THEN 270
  Origs: 210:auto
  Dests: 230:auto, 270:ifthen
230 (0 4) LET C(I, J) = 1 / R
  Origs: 220:auto
  Dests: 240:auto
240 (0 4) LET C(J, I) = 1 / R
  Origs: 230:auto
  Dests: 250:auto
250 (0 3) GOTO 210
  Origs: 240:auto
  Dests: 210:goto
260 (0 0) 
  Origs: 
  Dests: 
270 F(I:270) (1 4) FOR I = 2 TO N - 1
  Origs: 220:ifthen
  Dests: 280:fornext, 350:fornext
280 F(I:270) (0 3) LET S = 0
  Origs: 270:fornext
  Dests: 290:auto
290 F(I:270,J:290) (1 3) FOR J = 1 TO N
  Origs: 280:auto
  Dests: 300:fornext, 310:fornext
300 F(I:270,J:290) (0 4) LET S = S + C(I, J)
  Origs: 290:fornext
  Dests: 310:auto
310 F(I:270,J:290) (0 1) NEXT J
  Origs: 290:fornext, 300:auto
  Dests: 320:auto
320 F(I:270) (0 4) LET C(I, I) = -S
  Origs: 310:auto
  Dests: 330:auto
330 F(I:270) (0 3) LET C(1, I) = 0
  Origs: 320:auto
  Dests: 340:auto
340 F(I:270) (0 3) LET C(N, I) = 0
  Origs: 330:auto
  Dests: 350:auto
350 F(I:270) (0 1) NEXT I
  Origs: 270:fornext, 340:auto
  Dests: 370:auto
360 (0 0) 
  Origs: 
  Dests: 
370 (0 4) MAT U = INV(C)
  Origs: 350:auto
  Dests: 380:auto
380 (0 4) MAT P = U * B
  Origs: 370:auto
  Dests: 400:auto
390 (0 0) 
  Origs: 
  Dests: 
400 (0 3) PRINT "NODE", "VOLTAGE"
  Origs: 380:auto
  Dests: 410:auto
410 (0 2) PRINT
  Origs: 400:auto
  Dests: 420:auto
420 F(I:420) (1 3) FOR I = 1 TO N
  Origs: 410:auto
  Dests: 430:fornext, 440:fornext
430 F(I:420) (0 5) PRINT I, FNR(P(I))
  Origs: 420:fornext
  Dests: 440:auto
440 F(I:420) (0 1) NEXT I
  Origs: 420:fornext, 430:auto
  Dests: 450:auto
450 (0 2) PRINT
  Origs: 440:auto
  Dests: 460:auto
460 (0 2) PRINT
  Origs: 450:auto
  Dests: 480:auto
470 (0 0) 
  Origs: 
  Dests: 
480 (0 2) PRINT "CURRENT FLOW"
  Origs: 460:auto
  Dests: 490:auto
490 (0 2) PRINT
  Origs: 480:auto
  Dests: 500:auto
500 (0 3) LET S1 = 0
  Origs: 490:auto
  Dests: 510:auto
510 F(I:510) (1 4) FOR I = 2 TO N - 1
  Origs: 500:auto
  Dests: 520:fornext, 590:fornext
520 F(I:510) (0 3) PRINT "NODE" I
  Origs: 510:fornext
  Dests: 530:auto
530 F(I:510,J:530) (1 3) FOR J = 1 TO N
  Origs: 520:auto
  Dests: 540:fornext, 550:fornext
540 F(I:510,J:530) (0 4) PRINT FNR(C(I, J) * (P(I) - P(J))),
  Origs: 530:fornext
  Dests: 550:auto
550 F(I:510,J:530) (0 1) NEXT J
  Origs: 530:fornext, 540:auto
  Dests: 560:auto
560 F(I:510) (0 8) LET S1 = S1 + C(I, N) * (P(I) - P(N))
  Origs: 550:auto
  Dests: 570:auto
570 F(I:510) (0 2) PRINT
  Origs: 560:auto
  Dests: 580:auto
580 F(I:510) (0 2) PRINT
  Origs: 570:auto
  Dests: 590:auto
590 F(I:510) (0 1) NEXT I
  Origs: 510:fornext, 580:auto
  Dests: 600:auto
600 (0 2) PRINT
  Origs: 590:auto
  Dests: 620:auto
610 (0 0) 
  Origs: 
  Dests: 
620 (0 5) PRINT "TOTAL CURRENT = " FNR(S1)
  Origs: 600:auto
  Dests: 630:auto
630 (0 5) PRINT "RESISTANCE OF CIRCUIT = " FNR(V / S1)
  Origs: 620:auto
  Dests: 690:auto
640 (0 0) 
  Origs: 
  Dests: 
650 (0 2) DATA 7, 24
  Origs: 
  Dests: 
660 (0 2) DATA 1, 2, 100, 2, 7, 50, 2, 3, 25, 1, 4, 16, 3, 4, 20, 3, 6, 40
  Origs: 
  Dests: 
670 (0 2) DATA 4, 5, 60, 5, 6, 60, 6, 7, 40
  Origs: 
  Dests: 
680 (0 3) DATA -1, 0, 0
  Origs: 
  Dests: 
690 (0 1) END
  Origs: 630:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

