Statistics:

Number of lines: 17
Number of valid statements: 17
Number of comments: 0
Number of executable statements: 16

Complexity:

Comment density: 0.000
Comprehension effort: 48
McCabe complexity: 7
Halstead complexity:
 length: 73
 volume: 240.596
 difficulty: 19.500
 effort: 4691.624
 language: 0.633
 intelligence: 12.338
 time: 4.344

10 (1 2) READ N
  Origs: :start
  Dests: 20:auto
20 F(I:20) (1 4) FOR I = 1 TO N - 1
  Origs: 10:auto
  Dests: 30:fornext, 60:fornext
30 F(I:20,J:30) (1 4) FOR J = 1 TO N - 1
  Origs: 20:fornext
  Dests: 40:fornext, 50:fornext
40 F(I:20,J:30) (0 8) LET P(I, J) = I * J - INT(I * J / N) * N
  Origs: 30:fornext
  Dests: 50:auto
50 F(I:20,J:30) (0 1) NEXT J
  Origs: 30:fornext, 40:auto
  Dests: 60:auto
60 F(I:20) (0 1) NEXT I
  Origs: 20:fornext, 50:auto
  Dests: 70:auto
70 F(I:70) (1 4) FOR I = 1 TO N - 1
  Origs: 60:auto
  Dests: 80:fornext, 120:fornext
80 F(I:70,J:80) (1 4) FOR J = 1 TO N - 1
  Origs: 70:fornext
  Dests: 90:fornext, 100:fornext
90 F(I:70,J:80) (1 4) IF P(I, J) = 1 THEN 140
  Origs: 80:fornext
  Dests: 100:auto, 140:ifthen
100 F(I:70,J:80) (0 1) NEXT J
  Origs: 80:fornext, 90:auto
  Dests: 110:auto
110 F(I:70) (0 3) PRINT I; "DOES NOT HAVE AN INVERSE"
  Origs: 100:auto
  Dests: 120:auto
120 F(I:70,J:80) (0 1) NEXT I
  Origs: 70:fornext, 110:auto, 150:goto
  Dests: 130:auto
130 F(J:80) (0 1) STOP
    WARNING: Terminating statement in FOR/NEXT
  Origs: 120:auto
  Dests: :stop
140 F(I:70,J:80) (0 4) PRINT I; "HAS AN INVERSE" J
  Origs: 90:ifthen
  Dests: 150:auto
150 F(I:70,J:80) (0 3) GOTO 120
  Origs: 140:auto
  Dests: 120:goto
160 (0 2) DATA 9
  Origs: 
  Dests: 
999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

999: END

