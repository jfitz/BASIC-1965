10 DEF FNF(X) = X^5 + 2*X^3 -1
 UserFunctionName:FNF -> .
 VariableName:X -> .
 Variable:X -> .
 NumericValue:5
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:2
 Variable:X -> .
 NumericValue:3
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
11 REM DEF FNF(X) = -3*X^5 + X^3 + 1
 Remark:DEF FNF(X) = -3*X^5 + X^3 + 1
12 REM DEF FNF(X) = X^2 + 1
 Remark:DEF FNF(X) = X^2 + 1
13 REM DEF FNF(X) = X^2 - 0.001
 Remark:DEF FNF(X) = X^2 - 0.001
14 REM DEF FNF(X) = SIN(X) - LOG(X)/LOG(10)
 Remark:DEF FNF(X) = SIN(X) - LOG(X)/LOG(10)
20 OPTION REQUIRE_INITIALIZED TRUE
 BooleanValue:true
30 READ A,B
 Variable:A -> .
 Variable:B -> .
100 LET S = SGN(FNF(A))
 Variable:S -> .
 Variable:A -> .
 UserFunction:FNF(.) -> .
 FunctionSgn:SGN(.) -> .
 AssignmentOperator:= . -> .
110 LET T = SGN(FNF(B))
 Variable:T -> .
 Variable:B -> .
 UserFunction:FNF(.) -> .
 FunctionSgn:SGN(.) -> .
 AssignmentOperator:= . -> .
120 IF S*T = 0 THEN 300
 Variable:S -> .
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:300
130 IF S*T > 0 THEN 200
 Variable:S -> .
 Variable:T -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:200
140 GOTO 600
 LineNumber:600
200 LET L = B-A
 Variable:L -> .
 Variable:B -> .
 Variable:A -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
210 FOR I = 1 TO 1000
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:1000"]
220 LET X = A + RND()*L
 Variable:X -> .
 Variable:A -> .
 FunctionRnd:RND() -> .
 Variable:L -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
230 IF S * SGN(FNF(X)) < 0 THEN 270
 Variable:S -> .
 Variable:X -> .
 UserFunction:FNF(.) -> .
 FunctionSgn:SGN(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:270
240 NEXT I
 Variable:I -> .
250 PRINT "NO CHANGE OF SIGN FOUND"
 TextValue:"NO CHANGE OF SIGN FOUND"
 CarriageControl:NL
260 STOP
 
270 LET B = X
 Variable:B -> .
 Variable:X -> .
 AssignmentOperator:= . -> .
280 GOTO 600
 LineNumber:600
300 IF S = 0 THEN 330
 Variable:S -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:330
310 LET X = B
 Variable:X -> .
 Variable:B -> .
 AssignmentOperator:= . -> .
320 GOTO 500
 LineNumber:500
330 LET X = A
 Variable:X -> .
 Variable:A -> .
 AssignmentOperator:= . -> .
340 GOTO 500
 LineNumber:500
500 PRINT "ONE ZERO AT" X
 TextValue:"ONE ZERO AT"
 CarriageControl:
 Variable:X -> .
 CarriageControl:NL
510 STOP
 
600 LET X(1+S) = A
 NumericValue:1
 Variable:S -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:X(.) -> .
 Variable:A -> .
 AssignmentOperator:= . -> .
610 LET X(1-S) = B
 NumericValue:1
 Variable:S -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:X(.) -> .
 Variable:B -> .
 AssignmentOperator:= . -> .
620 LET X = (X(0)+X(2))/2
 Variable:X -> .
 NumericValue:0
 Variable:X(.) -> .
 NumericValue:2
 Variable:X(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
630 LET F = SGN(FNF(X))
 Variable:F -> .
 Variable:X -> .
 UserFunction:FNF(.) -> .
 FunctionSgn:SGN(.) -> .
 AssignmentOperator:= . -> .
640 IF F = 0 THEN 800
 Variable:F -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:800
650 LET X(1+F) = X
 NumericValue:1
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:X(.) -> .
 Variable:X -> .
 AssignmentOperator:= . -> .
670 IF ABS(X(0)-X(2))/(ABS(X(0))+ABS(X(2))) < 0.0000005 THEN 800
 NumericValue:0
 Variable:X(.) -> .
 NumericValue:2
 Variable:X(.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:0
 Variable:X(.) -> .
 FunctionAbs:ABS(.) -> .
 NumericValue:2
 Variable:X(.) -> .
 FunctionAbs:ABS(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:0.0000005
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:800
680 GOTO 620
 LineNumber:620
800 PRINT "ONE ZERO AT" X
 TextValue:"ONE ZERO AT"
 CarriageControl:
 Variable:X -> .
 CarriageControl:NL
810 STOP
 
900 REM DATA 0,1
 Remark:DATA 0,1
910 DATA 0,1
 NumericValue:0
 NumericValue:1
999 END
 

