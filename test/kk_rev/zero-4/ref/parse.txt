10 DEF FNF(X) = X^5 + 2*X^3 -1
 UserFunctionName:FNF -> _
 VariableName:X -> _
 Variable:X -> _
 NumericConstant:5
 BinaryOperatorPower:^(_,_) -> _
 NumericConstant:2
 Variable:X -> _
 NumericConstant:3
 BinaryOperatorPower:^(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
11 REM DEF FNF(X) = -3*X^5 + X^3 + 1
 Remark:DEF FNF(X) = -3*X^5 + X^3 + 1
12 REM DEF FNF(X) = X^2 + 1
 Remark:DEF FNF(X) = X^2 + 1
13 REM DEF FNF(X) = X^2 - 0.001
 Remark:DEF FNF(X) = X^2 - 0.001
14 REM DEF FNF(X) = SIN(X) - LOG(X)/LOG(10)
 Remark:DEF FNF(X) = SIN(X) - LOG(X)/LOG(10)
20 OPTION REQUIRE_INITIALIZED TRUE
 BooleanConstant:true
30 READ A,B
 Variable:A -> _
 Variable:B -> _
100 LET S = SGN(FNF(A))
 Variable:S -> _
 Variable:A -> _
 UserFunction:FNF(_) -> _
 FunctionSgn:SGN(_) -> _
 AssignmentOperator:= _ -> _
110 LET T = SGN(FNF(B))
 Variable:T -> _
 Variable:B -> _
 UserFunction:FNF(_) -> _
 FunctionSgn:SGN(_) -> _
 AssignmentOperator:= _ -> _
120 IF S*T = 0 THEN 300
 Variable:S -> _
 Variable:T -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:300
130 IF S*T > 0 THEN 200
 Variable:S -> _
 Variable:T -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:200
140 GOTO 600
 LineNumber:600
200 LET L = B-A
 Variable:L -> _
 Variable:B -> _
 Variable:A -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:= _ -> _
210 FOR I = 1 TO 1000
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:1000"]
220 LET X = A + RND()*L
 Variable:X -> _
 Variable:A -> _
 FunctionRnd:RND() -> _
 Variable:L -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
230 IF S * SGN(FNF(X)) < 0 THEN 270
 Variable:S -> _
 Variable:X -> _
 UserFunction:FNF(_) -> _
 FunctionSgn:SGN(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:0
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:270
240 NEXT I
 Variable:I -> _
250 PRINT "NO CHANGE OF SIGN FOUND"
 TextConstant:"NO CHANGE OF SIGN FOUND"
 CarriageControl:NL
260 STOP
 
270 LET B = X
 Variable:B -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
280 GOTO 600
 LineNumber:600
300 IF S = 0 THEN 330
 Variable:S -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:330
310 LET X = B
 Variable:X -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
320 GOTO 500
 LineNumber:500
330 LET X = A
 Variable:X -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
340 GOTO 500
 LineNumber:500
500 PRINT "ONE ZERO AT" X
 TextConstant:"ONE ZERO AT"
 CarriageControl:
 Variable:X -> _
 CarriageControl:NL
510 STOP
 
600 LET X(1+S) = A
 NumericConstant:1
 Variable:S -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:X(_) -> _
 Variable:A -> _
 AssignmentOperator:= _ -> _
610 LET X(1-S) = B
 NumericConstant:1
 Variable:S -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:X(_) -> _
 Variable:B -> _
 AssignmentOperator:= _ -> _
620 LET X = (X(0)+X(2))/2
 Variable:X -> _
 NumericConstant:0
 Variable:X(_) -> _
 NumericConstant:2
 Variable:X(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
630 LET F = SGN(FNF(X))
 Variable:F -> _
 Variable:X -> _
 UserFunction:FNF(_) -> _
 FunctionSgn:SGN(_) -> _
 AssignmentOperator:= _ -> _
640 IF F = 0 THEN 800
 Variable:F -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:800
650 LET X(1+F) = X
 NumericConstant:1
 Variable:F -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:X(_) -> _
 Variable:X -> _
 AssignmentOperator:= _ -> _
670 IF ABS(X(0)-X(2))/(ABS(X(0))+ABS(X(2))) < 0.0000005 THEN 800
 NumericConstant:0
 Variable:X(_) -> _
 NumericConstant:2
 Variable:X(_) -> _
 BinaryOperatorMinus:-(_,_) -> _
 FunctionAbs:ABS(_) -> _
 NumericConstant:0
 Variable:X(_) -> _
 FunctionAbs:ABS(_) -> _
 NumericConstant:2
 Variable:X(_) -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorDivide:/(_,_) -> _
 NumericConstant:5.0e-07
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:800
680 GOTO 620
 LineNumber:620
800 PRINT "ONE ZERO AT" X
 TextConstant:"ONE ZERO AT"
 CarriageControl:
 Variable:X -> _
 CarriageControl:NL
810 STOP
 WARNING: Terminating statement in FOR/NEXT
 
900 REM DATA 0,1
 Remark:DATA 0,1
910 DATA 0,1
 NumericConstant:0
 NumericConstant:1
999 END
 

