Statistics:

Number of lines: 121
Number of valid statements: 108
Number of comments: 7
Number of executable statements: 105

Complexity:

Comment density: 0.065
Comprehension effort: 303
McCabe complexity: 37
Halstead complexity:
 length: 483
 volume: 2209.585
 difficulty: 38.408
 effort: 84865.524
 language: 1.498
 intelligence: 57.529
 time: 78.579

70 (0 1) REM THIS IS PROGRAM TIC-2
  Origs: 
  Dests: 
80 (0 0) 
  Origs: 
  Dests: 
90 (0 1) REM INITIALIZER
  Origs: 
  Dests: 
100 F(P:100) (1 3) FOR P = 1 TO 8
  Origs: :start
  Dests: 110:fornext, 140:fornext
110 F(P:100,I:110) (1 3) FOR I = 1 TO 3
  Origs: 100:fornext
  Dests: 120:fornext, 130:fornext
120 F(P:100,I:110) (1 2) READ T(P, I)
  Origs: 110:fornext
  Dests: 130:auto
130 F(P:100,I:110) (0 1) NEXT I
  Origs: 110:fornext, 120:auto
  Dests: 140:auto
140 F(P:100) (0 1) NEXT P
  Origs: 100:fornext, 130:auto
  Dests: 200:auto
150 (0 2) DATA 1, 2, 3, 8, 9, 4, 7, 6, 5, 1, 8, 7, 2, 9, 6, 3, 4, 5, 1, 9, 5, 7, 9, 3
  Origs: 
  Dests: 
200 F(S:200) (1 3) FOR S = 1 TO 9
  Origs: 140:auto
  Dests: 210:fornext, 240:fornext
210 F(S:200,J:210) (1 3) FOR J = 1 TO 4
  Origs: 200:fornext
  Dests: 220:fornext, 230:fornext
220 F(S:200,J:210) (1 2) READ U(S, J)
  Origs: 210:fornext
  Dests: 230:auto
230 F(S:200,J:210) (0 1) NEXT J
  Origs: 210:fornext, 220:auto
  Dests: 240:auto
240 F(S:200) (0 1) NEXT S
  Origs: 200:fornext, 230:auto
  Dests: 265:auto
250 (0 2) DATA 1, 4, 7, 0, 1, 5, 0, 0, 1, 6, 8, 0, 2, 6, 0, 0, 3, 6, 7, 0
  Origs: 
  Dests: 
260 (0 2) DATA 3, 5, 0, 0, 3, 4, 8, 0, 2, 4, 0, 0, 2, 5, 7, 8
  Origs: 
  Dests: 
265 (0 3) LET N = 0
  Origs: 240:auto, 850:goto
  Dests: 270:auto
270 F(S:270) (1 3) FOR S = 1 TO 9
  Origs: 265:auto
  Dests: 275:fornext, 285:fornext
275 F(S:270) (0 3) LET C(S) = 0
  Origs: 270:fornext
  Dests: 280:auto
280 F(S:270) (0 3) LET B(S) = 0
  Origs: 275:auto
  Dests: 285:auto
285 F(S:270) (0 1) NEXT S
  Origs: 270:fornext, 280:auto
  Dests: 310:auto
290 (0 0) 
  Origs: 
  Dests: 
300 (0 1) REM WHO STARTS?
  Origs: 
  Dests: 
310 (1 7) IF RND(1) < 1 / 2 THEN 350
  Origs: 285:auto
  Dests: 320:auto, 350:ifthen
320 (0 2) PRINT "YOU WILL MOVE FIRST."
  Origs: 310:auto
  Dests: 330:auto
330 (0 2) PRINT
  Origs: 320:auto
  Dests: 340:auto
340 (0 2) GOTO 400
  Origs: 330:auto
  Dests: 400:goto
350 (0 2) PRINT "THE COMPUTER WILL MOVE FIRST."
  Origs: 310:ifthen
  Dests: 360:auto
360 (0 2) PRINT
  Origs: 350:auto
  Dests: 370:auto
370 (0 2) GOTO 600
  Origs: 360:auto
  Dests: 610:goto
380 (0 0) 
  Origs: 
  Dests: 
390 (0 1) REM PLAYER'S MOVE.
  Origs: 
  Dests: 
400 (0 2) PRINT "YOUR MOVE";
  Origs: 340:goto, 537:ifthen, 560:goto
  Dests: 410:auto
410 (1 2) INPUT M
  Origs: 400:auto
  Dests: 415:auto
415 (0 4) LET F = -1
  Origs: 410:auto
  Dests: 420:auto
420 (1 5) IF M <> INT(M) THEN 550
  Origs: 415:auto
  Dests: 430:auto, 550:ifthen
430 (1 4) IF M < 1 THEN 550
  Origs: 420:auto
  Dests: 440:auto, 550:ifthen
440 (1 4) IF M > 9 THEN 550
  Origs: 430:auto
  Dests: 450:auto, 550:ifthen
450 (1 4) IF B(M) <> 0 THEN 550
  Origs: 440:auto
  Dests: 460:auto, 550:ifthen
460 (0 3) LET B(M) = F
  Origs: 450:auto, 640:goto
  Dests: 470:auto
470 (0 3) LET J0 = 0
  Origs: 460:auto
  Dests: 471:auto
471 F(J:471) (1 3) FOR J = 1 TO 4
  Origs: 470:auto
  Dests: 480:fornext, 530:fornext
480 F(J:471) (0 3) LET P = U(M, J)
  Origs: 471:fornext
  Dests: 490:auto
490 F(J:471) (1 4) IF P = 0 THEN 530
  Origs: 480:auto
  Dests: 500:auto, 530:ifthen
500 F(J:471) (0 4) LET C(P) = C(P) + F
  Origs: 490:auto
  Dests: 510:auto
510 F(J:471) (1 6) IF C(P) <> -3 THEN 520
  Origs: 500:auto
  Dests: 511:auto, 520:ifthen
511 F(J:471) (0 3) LET J0 = 1
  Origs: 510:auto
  Dests: 512:auto
512 F(J:471) (0 1) BREAK
  Origs: 511:auto
  Dests: 530:fornext
520 F(J:471) (1 4) IF C(P) <> 3 THEN 530
  Origs: 510:ifthen
  Dests: 521:auto, 530:ifthen
521 F(J:471) (0 3) LET J0 = 2
  Origs: 520:auto
  Dests: 522:auto
522 F(J:471) (0 1) BREAK
  Origs: 521:auto
  Dests: 530:fornext
530 F(J:471) (0 1) NEXT J
  Origs: 471:fornext, 490:ifthen, 512:fornext, 520:ifthen, 522:fornext
  Dests: 531:auto
531 (1 4) IF J0 = 1 THEN 860
  Origs: 530:auto
  Dests: 532:auto, 860:ifthen
532 (1 4) IF J0 = 2 THEN 800
  Origs: 531:auto
  Dests: 535:auto, 810:ifthen
535 (0 4) LET N = N + 1
  Origs: 532:auto
  Dests: 536:auto
536 (1 4) IF N = 9 THEN 880
  Origs: 535:auto
  Dests: 537:auto, 880:ifthen
537 (1 5) IF F = 1 THEN 400
  Origs: 536:auto
  Dests: 400:ifthen, 538:auto
538 (0 2) GOTO 600
  Origs: 537:auto
  Dests: 610:goto
540 (0 2) GOTO 600
  Origs: 
  Dests: 610:goto
550 (0 2) PRINT "ILLEGAL MOVE. TRY AGAIN."
  Origs: 420:ifthen, 430:ifthen, 440:ifthen, 450:ifthen
  Dests: 560:auto
560 (0 3) GOTO 400
  Origs: 550:auto
  Dests: 400:goto
595 (0 0) 
  Origs: 
  Dests: 
600 (0 1) REM MACHINE'S MOVE
  Origs: 
  Dests: 
610 (0 2) GOSUB 1000
  Origs: 370:goto, 538:goto, 540:goto
  Dests: 620:auto, 1010:gosub
620 (0 3) PRINT "THE COMPUTER MOVES" M
  Origs: 610:auto
  Dests: 630:auto
630 (0 3) LET F = 1
  Origs: 620:auto
  Dests: 640:auto
640 (0 3) GOTO 460
  Origs: 630:auto
  Dests: 460:goto
800 (0 1) REM THE GAME IS OVER
  Origs: 
  Dests: 
810 (0 2) PRINT "AND THE COMPUTER WINS."
  Origs: 532:ifthen
  Dests: 820:auto
820 (0 2) PRINT
  Origs: 810:auto, 870:goto, 890:goto
  Dests: 830:auto
830 (0 2) PRINT
  Origs: 820:auto
  Dests: 840:auto
840 (0 2) PRINT "NEW GAME."
  Origs: 830:auto
  Dests: 850:auto
850 (0 3) GOTO 265
  Origs: 840:auto
  Dests: 265:goto
860 (0 2) PRINT "CONGRATULATIONS, YOU BEAT THE COMPUTER."
  Origs: 531:ifthen
  Dests: 870:auto
870 (0 3) GOTO 820
  Origs: 860:auto
  Dests: 820:goto
880 (0 2) PRINT "THE GAME IS A DRAW."
  Origs: 536:ifthen
  Dests: 890:auto
890 (0 3) GOTO 820
  Origs: 880:auto
  Dests: 820:goto
895 (0 0) 
  Origs: 
  Dests: 
1000 (0 1) REM SELECT A MOVE
  Origs: 
  Dests: 
1010 G(1010) (0 3) LET P0 = 0
  Origs: 610:gosub
  Dests: 1011:auto
1011 G(1010) F(P:1011) (1 3) FOR P = 1 TO 8
  Origs: 1010:auto
  Dests: 1020:fornext, 1030:fornext
1020 G(1010) F(P:1011) (1 4) IF C(P) <> 2 THEN 1030
  Origs: 1011:fornext
  Dests: 1028:auto, 1030:ifthen
1028 G(1010) F(P:1011) (0 3) LET P0 = 1
  Origs: 1020:auto
  Dests: 1029:auto
1029 G(1010) F(P:1011) (0 1) BREAK
  Origs: 1028:auto
  Dests: 1030:fornext
1030 G(1010) F(P:1011) (0 1) NEXT P
  Origs: 1011:fornext, 1020:ifthen, 1029:fornext
  Dests: 1031:auto
1031 G(1010) (1 4) IF P0 = 1 THEN 1100
  Origs: 1030:auto
  Dests: 1040:auto, 1100:ifthen
1040 G(1010) (0 3) LET P0 = 0
  Origs: 1031:auto
  Dests: 1041:auto
1041 G(1010) F(P:1041) (1 3) FOR P = 1 TO 8
  Origs: 1040:auto
  Dests: 1050:fornext, 1060:fornext
1050 G(1010) F(P:1041) (1 6) IF C(P) <> -2 THEN 1060
  Origs: 1041:fornext
  Dests: 1058:auto, 1060:ifthen
1058 G(1010) F(P:1041) (0 3) LET P0 = 1
  Origs: 1050:auto
  Dests: 1059:auto
1059 G(1010) F(P:1041) (0 1) BREAK
  Origs: 1058:auto
  Dests: 1060:fornext
1060 G(1010) F(P:1041) (0 1) NEXT P
  Origs: 1041:fornext, 1050:ifthen, 1059:fornext
  Dests: 1061:auto
1061 G(1010) (1 4) IF P0 = 1 THEN 1100
  Origs: 1060:auto
  Dests: 1070:auto, 1100:ifthen
1070 G(1010) (0 2) GOTO 1200
  Origs: 1061:auto
  Dests: 1200:goto
1100 G(1010) (0 3) LET I0 = 0
  Origs: 1031:ifthen, 1061:ifthen
  Dests: 1101:auto
1101 G(1010) F(I:1101) (1 3) FOR I = 1 TO 3
  Origs: 1100:auto
  Dests: 1110:fornext, 1130:fornext
1110 G(1010) F(I:1101) (0 3) LET M = T(P, I)
  Origs: 1101:fornext
  Dests: 1120:auto
1120 G(1010) F(I:1101) (1 4) IF B(M) <> 0 THEN 1130
  Origs: 1110:auto
  Dests: 1128:auto, 1130:ifthen
1128 G(1010) F(I:1101) (0 3) LET I0 = 1
  Origs: 1120:auto
  Dests: 1129:auto
1129 G(1010) F(I:1101) (0 1) BREAK
  Origs: 1128:auto
  Dests: 1130:fornext
1130 G(1010) F(I:1101) (0 1) NEXT I
  Origs: 1101:fornext, 1120:ifthen, 1129:fornext
  Dests: 1132:auto
1132 G(1010) (1 4) IF I0 = 0 THEN 1140
  Origs: 1130:auto
  Dests: 1138:auto, 1200:ifthen
1138 G(1010) (0 1) RETURN
  Origs: 1132:auto
  Dests: 
1140 (0 0) 
  Origs: 
  Dests: 
1200 G(1010) F(S:1200) (1 3) FOR S = 1 TO 9
  Origs: 1070:goto, 1132:ifthen
  Dests: 1210:fornext, 1270:fornext
1210 G(1010) F(S:1200) (0 3) LET V(S) = 0
  Origs: 1200:fornext
  Dests: 1215:auto
1215 G(1010) F(S:1200) (1 4) IF B(S) <> 0 THEN 1270
  Origs: 1210:auto
  Dests: 1220:auto, 1270:ifthen
1220 G(1010) F(S:1200,J:1220) (1 3) FOR J = 1 TO 4
  Origs: 1215:auto
  Dests: 1230:fornext, 1260:fornext
1230 G(1010) F(S:1200,J:1220) (0 3) LET P = U(S, J)
  Origs: 1220:fornext
  Dests: 1240:auto
1240 G(1010) F(S:1200,J:1220) (1 4) IF P = 0 THEN 1260
  Origs: 1230:auto
  Dests: 1250:auto, 1260:ifthen
1250 G(1010) F(S:1200,J:1220) (0 6) LET V(S) = V(S) + 1 + ABS(C(P))
  Origs: 1240:auto
  Dests: 1260:auto
1260 G(1010) F(S:1200,J:1220) (0 1) NEXT J
  Origs: 1220:fornext, 1240:ifthen, 1250:auto
  Dests: 1270:auto
1270 G(1010) F(S:1200) (0 1) NEXT S
  Origs: 1200:fornext, 1215:ifthen, 1260:auto
  Dests: 1300:auto
1300 G(1010) (0 3) LET V = 0
  Origs: 1270:auto
  Dests: 1310:auto
1310 G(1010) F(S:1310) (1 3) FOR S = 1 TO 9
  Origs: 1300:auto
  Dests: 1320:fornext, 1350:fornext
1320 G(1010) F(S:1310) (1 4) IF V(S) <= V THEN 1350
  Origs: 1310:fornext
  Dests: 1330:auto, 1350:ifthen
1330 G(1010) F(S:1310) (0 3) LET V = V(S)
  Origs: 1320:auto
  Dests: 1340:auto
1340 G(1010) F(S:1310) (0 3) LET M = S
  Origs: 1330:auto
  Dests: 1350:auto
1350 G(1010) F(S:1310) (0 1) NEXT S
  Origs: 1310:fornext, 1320:ifthen, 1340:auto
  Dests: 1999:auto
1999 G(1010) (0 1) RETURN
  Origs: 1350:auto
  Dests: 
9999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

540: GOTO 600
9999: END

