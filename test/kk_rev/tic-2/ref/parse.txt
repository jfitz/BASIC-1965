70   REM THIS IS PROGRAM TIC-2
 Remark:THIS IS PROGRAM TIC-2
80
90   REM INITIALIZER
 Remark:INITIALIZER
100  FOR P = 1 TO 8
 control: Variable:P -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
110     FOR I = 1 TO 3
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
120        READ T(P,I)
 Variable:P -> .
 Variable:I -> .
 Variable:T(.,.) -> .
130     NEXT I
 Variable:I -> .
140  NEXT P
 Variable:P -> .
150  DATA 1,2,3,8,9,4,7,6,5,1,8,7,2,9,6,3,4,5,1,9,5,7,9,3
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:1
 NumericValue:2
 NumericValue:3
 NumericValue:8
 NumericValue:9
 NumericValue:4
 NumericValue:7
 NumericValue:6
 NumericValue:5
 NumericValue:1
 NumericValue:8
 NumericValue:7
 NumericValue:2
 NumericValue:9
 NumericValue:6
 NumericValue:3
 NumericValue:4
 NumericValue:5
 NumericValue:1
 NumericValue:9
 NumericValue:5
 NumericValue:7
 NumericValue:9
 NumericValue:3
200  FOR S = 1 TO 9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
210     FOR J = 1 TO 4
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:4"]
220        READ U(S,J)
 Variable:S -> .
 Variable:J -> .
 Variable:U(.,.) -> .
230     NEXT J
 Variable:J -> .
240  NEXT S
 Variable:S -> .
250  DATA 1,4,7,0,1,5,0,0,1,6,8,0,2,6,0,0,3,6,7,0
 NumericValue:1
 NumericValue:4
 NumericValue:7
 NumericValue:0
 NumericValue:1
 NumericValue:5
 NumericValue:0
 NumericValue:0
 NumericValue:1
 NumericValue:6
 NumericValue:8
 NumericValue:0
 NumericValue:2
 NumericValue:6
 NumericValue:0
 NumericValue:0
 NumericValue:3
 NumericValue:6
 NumericValue:7
 NumericValue:0
260  DATA 3,5,0,0,3,4,8,0,2,4,0,0,2,5,7,8
 NumericValue:3
 NumericValue:5
 NumericValue:0
 NumericValue:0
 NumericValue:3
 NumericValue:4
 NumericValue:8
 NumericValue:0
 NumericValue:2
 NumericValue:4
 NumericValue:0
 NumericValue:0
 NumericValue:2
 NumericValue:5
 NumericValue:7
 NumericValue:8
265  LET N = 0
 Variable:N -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
270  FOR S = 1 TO 9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
275     LET C(S) = 0
 Variable:S -> .
 Variable:C(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
280     LET B(S) = 0
 Variable:S -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
285  NEXT S
 Variable:S -> .
290
300  REM WHO STARTS?
 Remark:WHO STARTS?
310  IF RND(1) < 1/2 THEN 350
 NumericValue:1
 FunctionRnd:RND(.) -> .
 NumericValue:1
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> =.
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:350
320  PRINT "YOU WILL MOVE FIRST."
 TextValue:"YOU WILL MOVE FIRST."
 CarriageControl:NL
330  PRINT
 CarriageControl:NL
340  GOTO 400
 LineNumber:400
350  PRINT "THE COMPUTER WILL MOVE FIRST."
 TextValue:"THE COMPUTER WILL MOVE FIRST."
 CarriageControl:NL
360  PRINT
 CarriageControl:NL
370  GOTO 600
 LineNumber:600
380
390  REM PLAYER'S MOVE.
 Remark:PLAYER'S MOVE.
400  PRINT "YOUR MOVE";
 TextValue:"YOUR MOVE"
 CarriageControl:;
410  INPUT M
 Variable:M -> .
415  LET F = -1
 Variable:F -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
420  IF M <> INT(M) THEN 550
 Variable:M -> .
 Variable:M -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:550
430  IF M < 1 THEN 500
 WARNING: Transfer in/out of FOR/NEXT 500
 Variable:M -> .
 NumericValue:1
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:500
440  IF M > 9 THEN 550
 Variable:M -> .
 NumericValue:9
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:550
450  IF B(M) <> 0 THEN 500
 WARNING: Transfer in/out of FOR/NEXT 500
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:500
460  LET B(M) = F
 Variable:M -> .
 Variable:B(.) -> .
 Variable:F -> .
 AssignmentOperator:= . -> .
470  FOR J = 1 TO 4
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:4"]
480     LET P = U(M,J)
 Variable:P -> .
 Variable:M -> .
 Variable:J -> .
 Variable:U(.,.) -> .
 AssignmentOperator:= . -> .
490     IF P = 0 THEN 530
 Variable:P -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:530
500     LET C(P) = C(P) + F
 Variable:P -> .
 Variable:C(.) -> .
 Variable:P -> .
 Variable:C(.) -> .
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
510     IF C(P) = -3 THEN 860
 WARNING: Transfer in/out of FOR/NEXT 860
 Variable:P -> .
 Variable:C(.) -> .
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:860
520     IF C(P) = 3 THEN 800
 WARNING: Transfer in/out of FOR/NEXT 810
 Variable:P -> .
 Variable:C(.) -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:800
530  NEXT J
 Variable:J -> .
535  LET N = N+1
 Variable:N -> .
 Variable:N -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
536  IF N = 9 THEN 880
 Variable:N -> .
 NumericValue:9
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:880
537  IF F = 1 THEN 400
 Variable:F -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:400
538  GOTO 600
 LineNumber:600
540  GOTO 600
 LineNumber:600
550  PRINT "ILLEGAL MOVE. TRY AGAIN."
 TextValue:"ILLEGAL MOVE. TRY AGAIN."
 CarriageControl:NL
560  GOTO 400
 LineNumber:400
595
600  REM MACHINE'S MOVE
 Remark:MACHINE'S MOVE
610  GOSUB 1000
 LineNumber:1000
620  PRINT "THE COMPUTER MOVES" M
 TextValue:"THE COMPUTER MOVES"
 CarriageControl:
 Variable:M -> .
 CarriageControl:NL
630  LET F = 1
 Variable:F -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
640  GOTO 460
 LineNumber:460
800  REM THE GAME IS OVER
 Remark:THE GAME IS OVER
810  PRINT "AND THE COMPUTER WINS."
 TextValue:"AND THE COMPUTER WINS."
 CarriageControl:NL
820  PRINT
 CarriageControl:NL
830  PRINT
 CarriageControl:NL
840  PRINT "NEW GAME."
 TextValue:"NEW GAME."
 CarriageControl:NL
850  GO TO 265
 LineNumber:265
860  PRINT "CONGRATULATIONS, YOU BEAT THE COMPUTER."
 TextValue:"CONGRATULATIONS, YOU BEAT THE COMPUTER."
 CarriageControl:NL
870  GOTO 820
 LineNumber:820
880  PRINT "THE GAME IS A DRAW."
 TextValue:"THE GAME IS A DRAW."
 CarriageControl:NL
890  GOTO 820
 LineNumber:820
895
1000 REM SELECT A MOVE
 Remark:SELECT A MOVE
1010 FOR P = 1 TO 8
 control: Variable:P -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
1020 IF C(P) = 2 THEN 1100
 WARNING: Transfer in/out of FOR/NEXT 1100
 Variable:P -> .
 Variable:C(.) -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1100
1030 NEXT P
 Variable:P -> .
1040 FOR P = 1 TO 8
 control: Variable:P -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:8"]
1050 IF C(P) = -2 THEN 1100
 WARNING: Transfer in/out of FOR/NEXT 1100
 Variable:P -> .
 Variable:C(.) -> .
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1100
1060 NEXT P
 Variable:P -> .
1070 GOTO 1200
 LineNumber:1200
1100 FOR I = 1 TO 3
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
1110    LET M = T(P,I)
 Variable:M -> .
 Variable:P -> .
 Variable:I -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
1120    IF B(M) = 0 THEN 1999
 WARNING: Transfer in/out of FOR/NEXT 1999
 Variable:M -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1999
1130 NEXT I
 Variable:I -> .
1140
1200 FOR S = 1 TO 9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
1210    LET V(S) = 0
 Variable:S -> .
 Variable:V(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1215    IF B(S) <> 0 THEN 1270
 Variable:S -> .
 Variable:B(.) -> .
 NumericValue:0
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:1270
1220    FOR J = 1 TO 4
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:4"]
1230       LET P = U(S,J)
 Variable:P -> .
 Variable:S -> .
 Variable:J -> .
 Variable:U(.,.) -> .
 AssignmentOperator:= . -> .
1240       IF P = 0 THEN 1260
 Variable:P -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:1260
1250       LET V(S) = V(S) + 1 + ABS(C(P))
 Variable:S -> .
 Variable:V(.) -> .
 Variable:S -> .
 Variable:V(.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:P -> .
 Variable:C(.) -> .
 FunctionAbs:ABS(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1260    NEXT J
 Variable:J -> .
1270 NEXT S
 Variable:S -> .
1300 LET V = 0
 Variable:V -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
1310 FOR S = 1 TO 9
 control: Variable:S -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
1320    IF V(S) <= V THEN 1350
 Variable:S -> .
 Variable:V(.) -> .
 Variable:V -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:1350
1330    LET V = V(S)
 Variable:V -> .
 Variable:S -> .
 Variable:V(.) -> .
 AssignmentOperator:= . -> .
1340    LET M = S
 Variable:M -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
1350 NEXT S
 Variable:S -> .
1999 RETURN
 
9999 END
 

