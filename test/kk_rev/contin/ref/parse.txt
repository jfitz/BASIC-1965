110 READ M,N
 Variable:M -> .
 Variable:N -> .
120 FOR I = 1 TO M
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> ."]
130    LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
140    FOR J = 1 TO N
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
150       READ O(I,J)
 Variable:I -> .
 Variable:J -> .
 Variable:O(.,.) -> .
160       LET S = S + O(I,J)
 Variable:S -> .
 Variable:S -> .
 Variable:I -> .
 Variable:J -> .
 Variable:O(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
170    NEXT J
 Variable:J -> .
180    LET R(I) = S
 Variable:I -> .
 Variable:R(.) -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
190 NEXT I
 Variable:I -> .
200
210 LET S1 = 0
 Variable:S1 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
220 FOR J = 1 TO N
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
230    LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
240    FOR I = 1 TO M
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> ."]
250       LET S = S + O(I,J)
 Variable:S -> .
 Variable:S -> .
 Variable:I -> .
 Variable:J -> .
 Variable:O(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
260    NEXT I
 Variable:I -> .
270    LET C(J) = S
 Variable:J -> .
 Variable:C(.) -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
280    LET S1 = S1 + S
 Variable:S1 -> .
 Variable:S1 -> .
 Variable:S -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
290 NEXT J
 Variable:J -> .
300
310 PRINT
 CarriageControl:NL
320 LET C = 0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
330 FOR I = 1 TO M
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> ."]
340    FOR J = 1 TO N
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
350       LET E = R(I)*C(J)/S1
 Variable:E -> .
 Variable:I -> .
 Variable:R(.) -> .
 Variable:J -> .
 Variable:C(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:S1 -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
360       LET C = C + (O(I,J) - E)^2/E
 Variable:C -> .
 Variable:C -> .
 Variable:I -> .
 Variable:J -> .
 Variable:O(.,.) -> .
 Variable:E -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 Variable:E -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
370       PRINT O(I,J),
 Variable:I -> .
 Variable:J -> .
 Variable:O(.,.) -> .
 CarriageControl:,
380    NEXT J
 Variable:J -> .
390    PRINT
 CarriageControl:NL
400 NEXT I
 Variable:I -> .
410 PRINT
 CarriageControl:NL
420 PRINT "CHI-SQUARE EQUALS";C;"ON";(M-1)*(N-1);"DEGREES OF FREEDOM"
 WARNING: Line exceeds PRETTY width limit 72
 TextValue:"CHI-SQUARE EQUALS"
 CarriageControl:;
 Variable:C -> .
 CarriageControl:;
 TextValue:"ON"
 CarriageControl:;
 Variable:M -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:N -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 CarriageControl:;
 TextValue:"DEGREES OF FREEDOM"
 CarriageControl:NL
430
900 DATA 3,2
 NumericValue:3
 NumericValue:2
910 DATA 17,42,50,50,114,61
 NumericValue:17
 NumericValue:42
 NumericValue:50
 NumericValue:50
 NumericValue:114
 NumericValue:61
999 END
 

