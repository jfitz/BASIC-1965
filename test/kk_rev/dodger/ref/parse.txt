100 REM INITIALIZE
 Remark:INITIALIZE
110 FOR B = 1 TO 9
 control: Variable:B -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:9"]
120    FOR R = 0 TO 3
 control: Variable:R -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:3"]
130    READ P(B,R)
 Variable:B -> .
 Variable:R -> .
 Variable:P(.,.) -> .
140    NEXT R
 Variable:R -> .
150 NEXT B
 Variable:B -> .
160 DATA 0.644, 0.24, 0.077, 0.039, 0.644, 0.19, 0.103, 0.053, 0.72, 0.167, 0.046, 0.05
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:0.644
 NumericValue:0.24
 NumericValue:0.077
 NumericValue:0.039
 NumericValue:0.644
 NumericValue:0.19
 NumericValue:0.103
 NumericValue:0.053
 NumericValue:0.72
 NumericValue:0.167
 NumericValue:0.046
 NumericValue:0.05
170 DATA 0.641, 0.244, 0.05, 0.038, 0.673, 0.153, 0.073, 0.038, 0.651, 0.182, 0.106, 0.038
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:0.641
 NumericValue:0.244
 NumericValue:0.05
 NumericValue:0.038
 NumericValue:0.673
 NumericValue:0.153
 NumericValue:0.073
 NumericValue:0.038
 NumericValue:0.651
 NumericValue:0.182
 NumericValue:0.106
 NumericValue:0.038
180 DATA 0.704, 0.162, 0.079, 0.036, 0.709, 0.162, 0.071, 0.04, 0.836, 0.09, 0.053, 0.016
 WARNING: Line exceeds LIST width limit 72
 WARNING: Line exceeds PRETTY width limit 72
 NumericValue:0.704
 NumericValue:0.162
 NumericValue:0.079
 NumericValue:0.036
 NumericValue:0.709
 NumericValue:0.162
 NumericValue:0.071
 NumericValue:0.04
 NumericValue:0.836
 NumericValue:0.09
 NumericValue:0.053
 NumericValue:0.016
190
200 FOR R = 1 TO 4
 control: Variable:R -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:4"]
210    FOR C = 0 TO 7
 control: Variable:C -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:7"]
220       READ Q(R,C)
 Variable:R -> .
 Variable:C -> .
 Variable:Q(.,.) -> .
230    NEXT C
 Variable:C -> .
240 NEXT R
 Variable:R -> .
250 DATA 1, 5, 11, 15, 11, 15, 21, 25
 NumericValue:1
 NumericValue:5
 NumericValue:11
 NumericValue:15
 NumericValue:11
 NumericValue:15
 NumericValue:21
 NumericValue:25
260 DATA 1, 3, 3, 7, 5, 7, 7, 17
 NumericValue:1
 NumericValue:3
 NumericValue:3
 NumericValue:7
 NumericValue:5
 NumericValue:7
 NumericValue:7
 NumericValue:17
270 DATA 2, 12, 12, 22, 12, 22, 22, 32
 NumericValue:2
 NumericValue:12
 NumericValue:12
 NumericValue:22
 NumericValue:12
 NumericValue:22
 NumericValue:22
 NumericValue:32
280 DATA 10, 20, 20, 30, 20, 30, 30, 40
 NumericValue:10
 NumericValue:20
 NumericValue:20
 NumericValue:30
 NumericValue:20
 NumericValue:30
 NumericValue:30
 NumericValue:40
290
300 LET S1 = 0
 Variable:S1 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
310 LET B = 0
 Variable:B -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
320 LET H = 0
 Variable:H -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
330 LET L7 = 0
 Variable:L7 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
340 LET I = 1
 Variable:I -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
350
360 FOR C = 0 TO 7
 control: Variable:C -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:7"]
370    READ L(C)
 Variable:C -> .
 Variable:L(.) -> .
380 NEXT C
 Variable:C -> .
390 DATA 0, 1, 1, 2, 1, 2, 2, 3
 NumericValue:0
 NumericValue:1
 NumericValue:1
 NumericValue:2
 NumericValue:1
 NumericValue:2
 NumericValue:2
 NumericValue:3
400
410 REM NEW INNING
 Remark:NEW INNING
430 PRINT "INNING" I
 TextValue:"INNING"
 CarriageControl:
 Variable:I -> .
 CarriageControl:NL
450 LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
460 LET O = 0
 Variable:O -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
470 LET C = 0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
480
490 REM NEW BATTER
 Remark:NEW BATTER
500 IF B < 9 THEN 520
 Variable:B -> .
 NumericValue:9
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:520
510 LET B = 0
 Variable:B -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
520 LET B = B+1
 Variable:B -> .
 Variable:B -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
530
540 REM DETERMINE OUTCOME
 Remark:DETERMINE OUTCOME
550 LET X = RND(0)
 Variable:X -> .
 NumericValue:0
 FunctionRnd:RND(.) -> .
 AssignmentOperator:= . -> .
555 LET C0 = 0
 Variable:C0 -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
560 FOR R = 0 TO 3
 control: Variable:R -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:3"]
570 LET X = X - P(B,R)
 Variable:X -> .
 Variable:X -> .
 Variable:B -> .
 Variable:R -> .
 Variable:P(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
580 IF X >= 0 THEN 590
 Variable:X -> .
 NumericValue:0
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:590
582 LET C0 = 1
 Variable:C0 -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
585 BREAK
 
590 NEXT R
 Variable:R -> .
595 IF C0 = 1 THEN 620
 Variable:C0 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:620
600 LET R = 4
 Variable:R -> .
 NumericValue:4
 AssignmentOperator:= =. -> .
610
620 REM PRINT OUTCOME
 Remark:PRINT OUTCOME
630 IF R > 0 THEN 660
 Variable:R -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:660
640 PRINT "OUT   ";
 TextValue:"OUT   "
 CarriageControl:;
650 GOTO 770
 LineNumber:770
660 IF R > 1 THEN 690
 Variable:R -> .
 NumericValue:1
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:690
670 PRINT "SINGLE   ";
 TextValue:"SINGLE   "
 CarriageControl:;
680 GOTO 770
 LineNumber:770
690 IF R > 2 THEN 720
 Variable:R -> .
 NumericValue:2
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:720
700 PRINT "WALK   ";
 TextValue:"WALK   "
 CarriageControl:;
710 GOTO 770
 LineNumber:770
720 IF R > 3 THEN 750
 Variable:R -> .
 NumericValue:3
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:750
730 PRINT "DOUBLE   ";
 TextValue:"DOUBLE   "
 CarriageControl:;
740 GOTO 770
 LineNumber:770
750 PRINT "HOME RUN   ";
 TextValue:"HOME RUN   "
 CarriageControl:;
760 
770 REM DO BOOK-KEEPING
 Remark:DO BOOK-KEEPING
780 IF R = 0 THEN 860
 Variable:R -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:860
790 IF R = 2 THEN 810
 Variable:R -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:810
800 LET H = H + 1
 Variable:H -> .
 Variable:H -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
810 LET X = Q(R,C)
 Variable:X -> .
 Variable:R -> .
 Variable:C -> .
 Variable:Q(.,.) -> .
 AssignmentOperator:= . -> .
820 LET Y = INT(X/10)
 Variable:Y -> .
 Variable:X -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
830 LET C = X - Y*10
 Variable:C -> .
 Variable:X -> .
 Variable:Y -> .
 NumericValue:10
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
840 LET S = S+Y
 Variable:S -> .
 Variable:S -> .
 Variable:Y -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
850 GOTO 490
 LineNumber:490
860 IF O = 2 THEN 890
 Variable:O -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:890
870 LET O = O+1
 Variable:O -> .
 Variable:O -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
880 GOTO 490
 LineNumber:490
885
890 REM END OF AN INNING
 Remark:END OF AN INNING
895 LET L7 = L7 + L(C)
 Variable:L7 -> .
 Variable:L7 -> .
 Variable:C -> .
 Variable:L(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
900 PRINT
 CarriageControl:NL
910 PRINT S; "RUNS"
 Variable:S -> .
 CarriageControl:;
 TextValue:"RUNS"
 CarriageControl:NL
920 PRINT
 CarriageControl:NL
930 LET S1 = S1+S
 Variable:S1 -> .
 Variable:S1 -> .
 Variable:S -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
940 LET I = I+1
 Variable:I -> .
 Variable:I -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
945 IF I < 9 THEN 410
 Variable:I -> .
 NumericValue:9
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:410
950 
955 REM PRINT RESULTS
 Remark:PRINT RESULTS
960 PRINT
 CarriageControl:NL
965 PRINT "GAME TOTALS:"
 TextValue:"GAME TOTALS:"
 CarriageControl:NL
970 PRINT
 CarriageControl:NL
975 PRINT S1; "RUNS SCORED"
 Variable:S1 -> .
 CarriageControl:;
 TextValue:"RUNS SCORED"
 CarriageControl:NL
980 PRINT L7; "MEN LEFT ON BASE"
 Variable:L7 -> .
 CarriageControl:;
 TextValue:"MEN LEFT ON BASE"
 CarriageControl:NL
985 PRINT H; "HITS"
 Variable:H -> .
 CarriageControl:;
 TextValue:"HITS"
 CarriageControl:NL
990 END
 

