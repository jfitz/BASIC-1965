10 DIM N(1000)
 NumericValue:1000
 Declaration:N() -> .()
11 DIM P(350)
 NumericValue:350
 Declaration:P() -> .()
20 FOR I = 1 TO 1000
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:1000"]
21    LET N(I) = 0
 Variable:I -> .
 Variable:N(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
22 NEXT I
 Variable:I -> .
25 LET P(0) = 2
 NumericValue:0
 Variable:P(.) -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
26 LET K = 0
 Variable:K -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
30 FOR P = 3 TO 2000 STEP 2
 control: Variable:P -> .
 start:   ["NumericValue:3"]
 end:     ["NumericValue:2000"]
 step:    ["NumericValue:2"]
35    LET X = (P-1)/2
 Variable:X -> .
 Variable:P -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
40    IF N(X) < 0 THEN 90
 Variable:X -> .
 Variable:N(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:90
50    LET K = K+1
 Variable:K -> .
 Variable:K -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
55    LET P(K) = P
 Variable:K -> .
 Variable:P(.) -> .
 Variable:P -> .
 AssignmentOperator:= . -> .
56    IF P > SQR(2000) THEN 90
 Variable:P -> .
 NumericValue:2000
 FunctionSqr:SQR(.) -> =.
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:90
60    FOR I = P TO 2000 STEP 2*P
 control: Variable:I -> .
 start:   ["Variable:P -> ."]
 end:     ["NumericValue:2000"]
 step:    ["NumericValue:2", "Variable:P -> .", "BinaryOperatorMultiply:*(.,.) -> ."]
65       LET X = (I-1)/2
 Variable:X -> .
 Variable:I -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
70       LET N(X) = -1
 Variable:X -> .
 Variable:N(.) -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
80    NEXT I
 Variable:I -> .
90 NEXT P
 Variable:P -> .
100 REM READ LEADING DIGITS
 Remark:READ LEADING DIGITS
110 PRINT "SEARCH FOR PRIMES OF THE FORM A*1000 + B, 0 < B < 2000."
 TextValue:"SEARCH FOR PRIMES OF THE FORM A*1000 + B, 0 < B < 2000."
 CarriageControl:NL
115 PRINT
 CarriageControl:NL
116 PRINT "A = ";
 TextValue:"A = "
 CarriageControl:;
120 INPUT A
 Variable:A -> .
125 LET S = SQR((A+2)*1E3)
 Variable:S -> .
 Variable:A -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1E3
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionSqr:SQR(.) -> .
 AssignmentOperator:= . -> .
130 PRINT
 CarriageControl:NL
140 PRINT "B = "
 TextValue:"B = "
 CarriageControl:NL
150 PRINT
 CarriageControl:NL
160
200 REM TEST PRIMES TO 2000
 Remark:TEST PRIMES TO 2000
205 FOR I = 1 TO 1000
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:1000"]
206    LET N(I) = 0
 Variable:I -> .
 Variable:N(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
207 NEXT I
 Variable:I -> .
210 FOR I = 1 TO K
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:K -> ."]
220    LET F = P(I)
 Variable:F -> .
 Variable:I -> .
 Variable:P(.) -> .
 AssignmentOperator:= . -> .
230    GOSUB 800
 LineNumber:800
239    IF Z > 999 THEN 270
 Variable:Z -> .
 NumericValue:999
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:270
240    FOR J = Z TO 999 STEP F
 control: Variable:J -> .
 start:   ["Variable:Z -> ."]
 end:     ["NumericValue:999"]
 step:    ["Variable:F -> ."]
250       LET N(J) = -1
 Variable:J -> .
 Variable:N(.) -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
260    NEXT J
 Variable:J -> .
270 NEXT I
 Variable:I -> .
280
400 REM TEST REMAINING NUMBERS
 Remark:TEST REMAINING NUMBERS
405 LET D = 2
 Variable:D -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
410 LET F = 2003
 Variable:F -> .
 NumericValue:2003
 AssignmentOperator:= =. -> .
420    GOSUB 800
 LineNumber:800
430    IF Z > 999 THEN 450
 Variable:Z -> .
 NumericValue:999
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:450
440    LET N(Z) = -1
 Variable:Z -> .
 Variable:N(.) -> .
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
450 LET F = F+D
 Variable:F -> .
 Variable:F -> .
 Variable:D -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
460 LET D = 6-D
 Variable:D -> .
 NumericValue:6
 Variable:D -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
470 IF F <= S THEN 420
 Variable:F -> .
 Variable:S -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:420
480
700 REM PRINT RESULT
 Remark:PRINT RESULT
702 LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
705 FOR I = 0 TO 999
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:999"]
710    IF N(I) < 0 THEN 730
 Variable:I -> .
 Variable:N(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:730
720    PRINT 2*I + 1;
 NumericValue:2
 Variable:I -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:;
725    LET S = S+1
 Variable:S -> .
 Variable:S -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
730 NEXT I
 Variable:I -> .
732 PRINT
 CarriageControl:NL
733 PRINT
 CarriageControl:NL
735 PRINT "THERE ARE " S; "PRIMES IN THE RANGE."
 TextValue:"THERE ARE "
 CarriageControl:
 Variable:S -> .
 CarriageControl:;
 TextValue:"PRIMES IN THE RANGE."
 CarriageControl:NL
740 PRINT
 CarriageControl:NL
745 PRINT
 CarriageControl:NL
750 PRINT "TWIN PRIMES:"
 TextValue:"TWIN PRIMES:"
 CarriageControl:NL
752 PRINT
 CarriageControl:NL
755 FOR I = 0 TO 998
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:998"]
760    IF N(I) < 0 THEN 780
 Variable:I -> .
 Variable:N(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:780
765    IF N(I+1) < 0 THEN 780
 Variable:I -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:N(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:780
770    PRINT 2*I+1, 2*I+3
 NumericValue:2
 Variable:I -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:,
 NumericValue:2
 Variable:I -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:3
 BinaryOperatorPlus:+(.,.) -> .
 CarriageControl:NL
780 NEXT I
 Variable:I -> .
790 STOP
 
795
800 REM TEST FACTOR F
 Remark:TEST FACTOR F
810 LET X = A - F*INT(A/F)
 Variable:X -> .
 Variable:A -> .
 Variable:F -> .
 Variable:A -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
820 LET Y = A*1E3
 Variable:Y -> .
 Variable:A -> .
 NumericValue:1E3
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
830 LET X = F - (Y - F*INT(Y/F))
 Variable:X -> .
 Variable:F -> .
 Variable:Y -> .
 Variable:F -> .
 Variable:Y -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
840 IF X <> 2*INT(X/2) THEN 860
 Variable:X -> .
 NumericValue:2
 Variable:X -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:860
850 LET X = X + F
 Variable:X -> .
 Variable:X -> .
 Variable:F -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
860 LET Z = (X-1)/2
 Variable:Z -> .
 Variable:X -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
870 RETURN
 
999 END
 

