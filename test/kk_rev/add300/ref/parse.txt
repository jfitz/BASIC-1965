10   DIM A(100),B(100),C(200),X(100)
 NumericValue:100
 Declaration:A() -> .()
 NumericValue:100
 Declaration:B() -> .()
 NumericValue:200
 Declaration:C() -> .()
 NumericValue:100
 Declaration:X() -> .()
100  REM READ, PRINT A,B
 Remark:READ, PRINT A,B
110  GOSUB 1000
 LineNumber:1000
120  GOSUB 2000
 LineNumber:2000
130  FOR I = 0 TO L
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:L -> ."]
140      LET A(I) = C(I)
 Variable:I -> .
 Variable:A(.) -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
150  NEXT I
 Variable:I -> .
160  LET L1 = L
 Variable:L1 -> .
 Variable:L -> .
 AssignmentOperator:= . -> .
170  PRINT "PLUS"
 TextValue:"PLUS"
 CarriageControl:NL
180  PRINT
 CarriageControl:NL
210  GOSUB 1000
 LineNumber:1000
220  GOSUB 2000
 LineNumber:2000
230  FOR I = 0 TO L
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:L -> ."]
240      LET B(I) = C(I)
 Variable:I -> .
 Variable:B(.) -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
250  NEXT I
 Variable:I -> .
260  LET L2 = L
 Variable:L2 -> .
 Variable:L -> .
 AssignmentOperator:= . -> .
270  PRINT "EQUALS"
 TextValue:"EQUALS"
 CarriageControl:NL
280  PRINT
 CarriageControl:NL
290 
300  REM C = A + B
 Remark:C = A + B
310  IF L1 < L2 THEN 420
 Variable:L1 -> .
 Variable:L2 -> .
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:420
320  LET L = L1
 Variable:L -> .
 Variable:L1 -> .
 AssignmentOperator:= . -> .
330  FOR I = L2+1 TO L
 control: Variable:I -> .
 start:   ["Variable:L2 -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 end:     ["Variable:L -> ."]
340      LET B(I) = 0
 Variable:I -> .
 Variable:B(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
350  NEXT I
 Variable:I -> .
360  GOTO 500
 LineNumber:500
420  LET L = L2
 Variable:L -> .
 Variable:L2 -> .
 AssignmentOperator:= . -> .
430  FOR I = L1+1 TO L
 control: Variable:I -> .
 start:   ["Variable:L1 -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 end:     ["Variable:L -> ."]
440      LET A(I) = 0
 Variable:I -> .
 Variable:A(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
450  NEXT I
 Variable:I -> .
500  FOR I = 0 TO L
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:L -> ."]
510      LET C(I) = A(I) + B(I)
 Variable:I -> .
 Variable:C(.) -> .
 Variable:I -> .
 Variable:A(.) -> .
 Variable:I -> .
 Variable:B(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
520  NEXT I
 Variable:I -> .
530
600  REM CARRY, PRINT ANSWER
 Remark:CARRY, PRINT ANSWER
610  GOSUB 3000
 LineNumber:3000
620  GOSUB 2000
 LineNumber:2000
630  STOP
 
640
1000 REM READ A NUMBER C
 Remark:READ A NUMBER C
1010 FOR I = 0 TO 100
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:100"]
1020     READ X(I)
 Variable:I -> .
 Variable:X(.) -> .
1030     IF X(I) < 0 THEN 1100
 Variable:I -> .
 Variable:X(.) -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:1100
1040 NEXT I
 Variable:I -> .
1050 GOTO 1200
 LineNumber:1200
1100 LET L = I-1
 Variable:L -> .
 Variable:I -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1110 FOR I = 0 TO L
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:L -> ."]
1120     LET C(I) = X(L-I)
 Variable:I -> .
 Variable:C(.) -> .
 Variable:L -> .
 Variable:I -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:X(.) -> .
 AssignmentOperator:= . -> .
1130 NEXT I
 Variable:I -> .
1140 RETURN
 
1200 PRINT "NUMBER TOO LONG"
 TextValue:"NUMBER TOO LONG"
 CarriageControl:NL
1210 STOP
 WARNING: Terminating statement in GOSUB
 
1220
2000 REM PRINT A NUMBER C
 Remark:PRINT A NUMBER C
2010 IF C(L) >= 100 THEN 2200
 Variable:L -> .
 Variable:C(.) -> .
 NumericValue:100
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2200
2020 PRINT "      ";
 TextValue:"      "
 CarriageControl:;
2030 IF C(L) >= 10 THEN 2100
 Variable:L -> .
 Variable:C(.) -> .
 NumericValue:10
 BinaryOperatorGreaterEqual:>=(.,.) -> ?
 LineNumber:2100
2040 PRINT "      ";
 TextValue:"      "
 CarriageControl:;
2050 PRINT C(L); ",   ";
 Variable:L -> .
 Variable:C(.) -> .
 CarriageControl:;
 TextValue:",   "
 CarriageControl:;
2060 LET L9 = L-1
 Variable:L9 -> .
 Variable:L -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2070 GOTO 2210
 LineNumber:2210
2100 LET M = INT(C(L)/10)
 Variable:M -> .
 Variable:L -> .
 Variable:C(.) -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2110 LET C(L) = C(L) - 10*M
 Variable:L -> .
 Variable:C(.) -> .
 Variable:L -> .
 Variable:C(.) -> .
 NumericValue:10
 Variable:M -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2120 PRINT M;
 Variable:M -> .
 CarriageControl:;
2130 GOTO 2050
 LineNumber:2050
2200 LET L9 = L
 Variable:L9 -> .
 Variable:L -> .
 AssignmentOperator:= . -> .
2210 FOR I = L9 TO 0 STEP -1
 control: Variable:I -> .
 start:   ["Variable:L9 -> ."]
 end:     ["NumericValue:0"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
2220     LET N = C(I)
 Variable:N -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
2230     LET Q = 100
 Variable:Q -> .
 NumericValue:100
 AssignmentOperator:= =. -> .
2240         FOR J = 1 TO 3
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:3"]
2250         LET M = INT(N/Q)
 Variable:M -> .
 Variable:N -> .
 Variable:Q -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
2260         LET N = N - M*Q
 Variable:N -> .
 Variable:N -> .
 Variable:M -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
2270         LET Q = Q/10
 Variable:Q -> .
 Variable:Q -> .
 NumericValue:10
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
2280         PRINT M;
 Variable:M -> .
 CarriageControl:;
2290     NEXT J
 Variable:J -> .
2300     IF I = 0 THEN 2400
 Variable:I -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:2400
2310     PRINT ",   ";
 TextValue:",   "
 CarriageControl:;
2320 NEXT I
 Variable:I -> .
2400 PRINT
 CarriageControl:NL
2405 PRINT
 CarriageControl:NL
2410 RETURN
 
2420
3000 REM CARRY IS IN NUMBER C
 Remark:CARRY IS IN NUMBER C
3010 LET C(L+1) = 0
 Variable:L -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:C(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
3020 FOR I = 0 TO L
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:L -> ."]
3030     LET N = C(I)
 Variable:N -> .
 Variable:I -> .
 Variable:C(.) -> .
 AssignmentOperator:= . -> .
3040     LET M = INT(N/1000)
 Variable:M -> .
 Variable:N -> .
 NumericValue:1000
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 AssignmentOperator:= . -> .
3050     LET C(I) = N - 1000*M
 Variable:I -> .
 Variable:C(.) -> .
 Variable:N -> .
 NumericValue:1000
 Variable:M -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
3060     LET C(I+1) = C(I+1) + M
 Variable:I -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:C(.) -> .
 Variable:I -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 Variable:C(.) -> .
 Variable:M -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3070 NEXT I
 Variable:I -> .
3080 IF M = 0 THEN 3100
 Variable:M -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:3100
3090 LET L = L+1
 Variable:L -> .
 Variable:L -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
3100 RETURN
 
3110
9000 DATA 123,456,789,333,-1
 NumericValue:123
 NumericValue:456
 NumericValue:789
 NumericValue:333
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
9010 DATA 987,654,321,000,-1
 NumericValue:987
 NumericValue:654
 NumericValue:321
 NumericValue:000
 NumericValue:1
 UnaryOperatorMinus:-(.) -> =.
9999 END
 

