Statistics:

Number of lines: 97
Number of valid statements: 85
Number of comments: 6
Number of executable statements: 83

Complexity:

Comment density: 0.071
Comprehension effort: 237
McCabe complexity: 18
Halstead complexity:
 length: 350
 volume: 1529.307
 difficulty: 31.033
 effort: 47459.486
 language: 1.588
 intelligence: 49.279
 time: 43.944

10 (0 5) DIM A(100), B(100), C(200), X(100)
  Origs: :start
  Dests: 110:auto
100 (0 1) REM READ, PRINT A,B
  Origs: 
  Dests: 
110 (0 2) GOSUB 1000
  Origs: 10:auto
  Dests: 120:auto, 1010:gosub
120 (0 2) GOSUB 2000
  Origs: 110:auto
  Dests: 130:auto, 2010:gosub
130 F(I) (1 3) FOR I = 0 TO L
  Origs: 120:auto
  Dests: 140:fornext, 150:fornext
140 F(I) (0 3) LET A(I) = C(I)
  Origs: 130:fornext
  Dests: 150:auto
150 F(I) (0 1) NEXT I
  Origs: 130:fornext, 140:auto
  Dests: 160:auto
160 (0 3) LET L1 = L
  Origs: 150:auto
  Dests: 170:auto
170 (0 2) PRINT "PLUS"
  Origs: 160:auto
  Dests: 180:auto
180 (0 2) PRINT
  Origs: 170:auto
  Dests: 210:auto
210 (0 2) GOSUB 1000
  Origs: 180:auto
  Dests: 220:auto, 1010:gosub
220 (0 2) GOSUB 2000
  Origs: 210:auto
  Dests: 230:auto, 2010:gosub
230 F(I) (1 3) FOR I = 0 TO L
  Origs: 220:auto
  Dests: 240:fornext, 250:fornext
240 F(I) (0 3) LET B(I) = C(I)
  Origs: 230:fornext
  Dests: 250:auto
250 F(I) (0 1) NEXT I
  Origs: 230:fornext, 240:auto
  Dests: 260:auto
260 (0 3) LET L2 = L
  Origs: 250:auto
  Dests: 270:auto
270 (0 2) PRINT "EQUALS"
  Origs: 260:auto
  Dests: 280:auto
280 (0 2) PRINT
  Origs: 270:auto
  Dests: 310:auto
290 (0 0) 
  Origs: 
  Dests: 
300 (0 1) REM C = A + B
  Origs: 
  Dests: 
310 (1 4) IF L1 < L2 THEN 420
  Origs: 280:auto
  Dests: 320:auto, 420:ifthen
320 (0 3) LET L = L1
  Origs: 310:auto
  Dests: 330:auto
330 F(I) (1 4) FOR I = L2 + 1 TO L
  Origs: 320:auto
  Dests: 340:fornext, 350:fornext
340 F(I) (0 3) LET B(I) = 0
  Origs: 330:fornext
  Dests: 350:auto
350 F(I) (0 1) NEXT I
  Origs: 330:fornext, 340:auto
  Dests: 360:auto
360 (0 2) GOTO 500
  Origs: 350:auto
  Dests: 500:goto
420 (0 3) LET L = L2
  Origs: 310:ifthen
  Dests: 430:auto
430 F(I) (1 4) FOR I = L1 + 1 TO L
  Origs: 420:auto
  Dests: 440:fornext, 450:fornext
440 F(I) (0 3) LET A(I) = 0
  Origs: 430:fornext
  Dests: 450:auto
450 F(I) (0 1) NEXT I
  Origs: 430:fornext, 440:auto
  Dests: 500:auto
500 F(I) (1 3) FOR I = 0 TO L
  Origs: 360:goto, 450:auto
  Dests: 510:fornext, 520:fornext
510 F(I) (0 4) LET C(I) = A(I) + B(I)
  Origs: 500:fornext
  Dests: 520:auto
520 F(I) (0 1) NEXT I
  Origs: 500:fornext, 510:auto
  Dests: 610:auto
530 (0 0) 
  Origs: 
  Dests: 
600 (0 1) REM CARRY, PRINT ANSWER
  Origs: 
  Dests: 
610 (0 2) GOSUB 3000
  Origs: 520:auto
  Dests: 620:auto, 3010:gosub
620 (0 2) GOSUB 2000
  Origs: 610:auto
  Dests: 630:auto, 2010:gosub
630 (0 1) STOP
  Origs: 620:auto
  Dests: :stop
640 (0 0) 
  Origs: 
  Dests: 
1000 (0 1) REM READ A NUMBER C
  Origs: 
  Dests: 
1010 G(1010) F(I) (1 3) FOR I = 0 TO 100
  Origs: 110:gosub, 210:gosub
  Dests: 1020:fornext, 1040:fornext
1020 G(1010) F(I) (1 2) READ X(I)
  Origs: 1010:fornext
  Dests: 1030:auto
1030 G(1010) F(I) (1 4) IF X(I) < 0 THEN 1100
  Origs: 1020:auto
  Dests: 1040:auto, 1100:ifthen
1040 G(1010) F(I) (0 1) NEXT I
  Origs: 1010:fornext, 1030:auto
  Dests: 1050:auto
1050 G(1010) (0 2) GOTO 1200
  Origs: 1040:auto
  Dests: 1200:goto
1100 G(1010) F(I) (0 4) LET L = I - 1
  Origs: 1030:ifthen
  Dests: 1110:auto
1110 G(1010) F(I) (1 3) FOR I = 0 TO L
  Origs: 1100:auto
  Dests: 1120:fornext, 1130:fornext
1120 G(1010) F(I) (0 3) LET C(I) = X(L - I)
  Origs: 1110:fornext
  Dests: 1130:auto
1130 G(1010) F(I) (0 1) NEXT I
  Origs: 1110:fornext, 1120:auto
  Dests: 1140:auto
1140 G(1010) (0 1) RETURN
  Origs: 1130:auto
  Dests: 
1200 G(1010) (0 2) PRINT "NUMBER TOO LONG"
  Origs: 1050:goto
  Dests: 1210:auto
1210 G(1010) (0 1) STOP
     WARNING: Terminating statement in GOSUB
  Origs: 1200:auto
  Dests: :stop
1220 (0 0) 
  Origs: 
  Dests: 
2000 (0 1) REM PRINT A NUMBER C
  Origs: 
  Dests: 
2010 G(2010) (1 4) IF C(L) >= 100 THEN 2200
  Origs: 120:gosub, 220:gosub, 620:gosub
  Dests: 2020:auto, 2200:ifthen
2020 G(2010) (0 2) PRINT "      ";
  Origs: 2010:auto
  Dests: 2030:auto
2030 G(2010) (1 4) IF C(L) >= 10 THEN 2100
  Origs: 2020:auto
  Dests: 2040:auto, 2100:ifthen
2040 G(2010) (0 2) PRINT "      ";
  Origs: 2030:auto
  Dests: 2050:auto
2050 G(2010) (0 3) PRINT C(L); ",   ";
  Origs: 2040:auto, 2130:goto
  Dests: 2060:auto
2060 G(2010) (0 4) LET L9 = L - 1
  Origs: 2050:auto
  Dests: 2070:auto
2070 G(2010) (0 2) GOTO 2210
  Origs: 2060:auto
  Dests: 2210:goto
2100 G(2010) (0 4) LET M = INT(C(L) / 10)
  Origs: 2030:ifthen
  Dests: 2110:auto
2110 G(2010) (0 6) LET C(L) = C(L) - 10 * M
  Origs: 2100:auto
  Dests: 2120:auto
2120 G(2010) (0 2) PRINT M;
  Origs: 2110:auto
  Dests: 2130:auto
2130 G(2010) (0 3) GOTO 2050
  Origs: 2120:auto
  Dests: 2050:goto
2200 G(2010) (0 3) LET L9 = L
  Origs: 2010:ifthen
  Dests: 2210:auto
2210 G(2010) F(I) (1 5) FOR I = L9 TO 0 STEP -1
  Origs: 2070:goto, 2200:auto
  Dests: 2220:fornext, 2320:fornext
2220 G(2010) F(I) (0 3) LET N = C(I)
  Origs: 2210:fornext
  Dests: 2230:auto
2230 G(2010) F(I) (0 3) LET Q = 100
  Origs: 2220:auto
  Dests: 2240:auto
2240 G(2010) F(I,J) (1 3) FOR J = 1 TO 3
  Origs: 2230:auto
  Dests: 2250:fornext, 2290:fornext
2250 G(2010) F(I,J) (0 4) LET M = INT(N / Q)
  Origs: 2240:fornext
  Dests: 2260:auto
2260 G(2010) F(I,J) (0 6) LET N = N - M * Q
  Origs: 2250:auto
  Dests: 2270:auto
2270 G(2010) F(I,J) (0 4) LET Q = Q / 10
  Origs: 2260:auto
  Dests: 2280:auto
2280 G(2010) F(I,J) (0 2) PRINT M;
  Origs: 2270:auto
  Dests: 2290:auto
2290 G(2010) F(I,J) (0 1) NEXT J
  Origs: 2240:fornext, 2280:auto
  Dests: 2300:auto
2300 G(2010) F(I) (1 4) IF I = 0 THEN 2400
  Origs: 2290:auto
  Dests: 2310:auto, 2400:ifthen
2310 G(2010) F(I) (0 2) PRINT ",   ";
  Origs: 2300:auto
  Dests: 2320:auto
2320 G(2010) F(I) (0 1) NEXT I
  Origs: 2210:fornext, 2310:auto
  Dests: 2400:auto
2400 G(2010) F(I) (0 2) PRINT
  Origs: 2300:ifthen, 2320:auto
  Dests: 2405:auto
2405 G(2010) F(I) (0 2) PRINT
  Origs: 2400:auto
  Dests: 2410:auto
2410 G(2010) F(I) (0 1) RETURN
  Origs: 2405:auto
  Dests: 
2420 (0 0) 
  Origs: 
  Dests: 
3000 (0 1) REM CARRY IS IN NUMBER C
  Origs: 
  Dests: 
3010 G(3010) (0 3) LET C(L + 1) = 0
  Origs: 610:gosub
  Dests: 3020:auto
3020 G(3010) F(I) (1 3) FOR I = 0 TO L
  Origs: 3010:auto
  Dests: 3030:fornext, 3070:fornext
3030 G(3010) F(I) (0 3) LET N = C(I)
  Origs: 3020:fornext
  Dests: 3040:auto
3040 G(3010) F(I) (0 4) LET M = INT(N / 1000)
  Origs: 3030:auto
  Dests: 3050:auto
3050 G(3010) F(I) (0 6) LET C(I) = N - 1000 * M
  Origs: 3040:auto
  Dests: 3060:auto
3060 G(3010) F(I) (0 4) LET C(I + 1) = C(I + 1) + M
  Origs: 3050:auto
  Dests: 3070:auto
3070 G(3010) F(I) (0 1) NEXT I
  Origs: 3020:fornext, 3060:auto
  Dests: 3080:auto
3080 G(3010) (1 4) IF M = 0 THEN 3100
  Origs: 3070:auto
  Dests: 3090:auto, 3100:ifthen
3090 G(3010) (0 4) LET L = L + 1
  Origs: 3080:auto
  Dests: 3100:auto
3100 G(3010) (0 1) RETURN
  Origs: 3080:ifthen, 3090:auto
  Dests: 
3110 (0 0) 
  Origs: 
  Dests: 
9000 (0 3) DATA 123, 456, 789, 333, -1
  Origs: 
  Dests: 
9010 (0 3) DATA 987, 654, 321, 0, -1
  Origs: 
  Dests: 
9999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

9999: END

