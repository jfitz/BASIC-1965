Statistics:

Number of lines: 18
Number of valid statements: 15
Number of comments: 3
Number of executable statements: 15

Complexity:

Comment density: 0.200
Comprehension effort: 40
McCabe complexity: 5
Halstead complexity:
 length: 52
 volume: 163.046
 difficulty: 8.267
 effort: 1347.844
 language: 2.386
 intelligence: 19.723
 time: 1.248

10 (0 1) REM TEST LOCKERS PROGRAM FOR SQUARE NUMBERS
  Origs: 
  Dests: 
20 (0 3) LET N = 1000
  Origs: :start
  Dests: 30:auto
30 (0 2) DIM L(N)
  Origs: 20:auto
  Dests: 110:auto
100 (0 1) REM INITIALIZE LOCKERS TO OPEN
  Origs: 
  Dests: 
110 (0 4) PRINT "INITIALIZING"; N; " LOCKERS..."
  Origs: 30:auto
  Dests: 130:auto
130 F(I:130) (1 3) FOR I = 1 TO N
  Origs: 110:auto
  Dests: 140:fornext, 180:fornext
140 F(I:130,J:140) (1 4) FOR J = I TO N STEP I
  Origs: 130:fornext
  Dests: 150:fornext, 160:fornext
150 F(I:130,J:140) (0 4) LET L(J) = 1 - L(J)
  Origs: 140:fornext
  Dests: 160:auto
160 F(I:130,J:140) (0 1) NEXT J
  Origs: 140:fornext, 150:auto
  Dests: 180:auto
180 F(I:130) (0 1) NEXT I
  Origs: 130:fornext, 160:auto
  Dests: 310:auto
200 (0 1) REM PRINT LOCKER STATES
  Origs: 
  Dests: 
310 (0 2) PRINT "OPEN LOCKERS:";
  Origs: 180:auto
  Dests: 320:auto
320 F(I:320) (1 3) FOR I = 1 TO N
  Origs: 310:auto
  Dests: 330:fornext, 350:fornext
330 F(I:320) (1 4) IF L(I) = 0 THEN 350
  Origs: 320:fornext
  Dests: 340:auto, 350:ifthen
340 F(I:320) (0 2) PRINT I;
  Origs: 330:auto
  Dests: 350:auto
350 F(I:320) (0 1) NEXT I
  Origs: 320:fornext, 330:ifthen, 340:auto
  Dests: 360:auto
360 (0 2) PRINT
  Origs: 350:auto
  Dests: 999:auto
999 (0 1) END
  Origs: 360:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

