10 REM THIS PROGRAM IS A BUBBLE SORT, WHICH PLACES THE
 Remark:THIS PROGRAM IS A BUBBLE SORT, WHICH PLACES THE
20 REM VALUES IN AN ARRAY IN ASCENDING SEQUENCE
 Remark:VALUES IN AN ARRAY IN ASCENDING SEQUENCE
30 REM IT IS INTENDED TO BE AN EXAMPLE AND NOT A
 Remark:IT IS INTENDED TO BE AN EXAMPLE AND NOT A
40 REM SPECIFIC CASE
 Remark:SPECIFIC CASE
50 REM THIS PROGRAM MAY BE CONVERTED INTO A SUBROUTINE
 Remark:THIS PROGRAM MAY BE CONVERTED INTO A SUBROUTINE
60 REM FOR USE IN A LARGER PROGRAM
 Remark:FOR USE IN A LARGER PROGRAM
70 REM THE ARRAY IS Z OF LENGTH N
 Remark:THE ARRAY IS Z OF LENGTH N
80 REM Z IS ASSUMED TO HAVE BEEN DECLARED IN A DIM
 Remark:Z IS ASSUMED TO HAVE BEEN DECLARED IN A DIM
90 REM STATEMENT AND N SET AHEAD OF TIME
 Remark:STATEMENT AND N SET AHEAD OF TIME
100 LET N = 100
 Variable:N -> .
 NumericValue:100
 AssignmentOperator:= =. -> .
102 OPTION MAX_DIM N
 Variable:N -> .
110 PRINT "BUBBLE SORT"
 TextValue:"BUBBLE SORT"
 CarriageControl:NL
112 PRINT N;" VALUES"
 Variable:N -> .
 CarriageControl:;
 TextValue:" VALUES"
 CarriageControl:NL
114 PRINT
 CarriageControl:NL
120 DIM Z(100)
 NumericValue:100
 Declaration:Z() -> .()
122 ARR Z = RND1(N, 100)
 Variable:Z() -> .()
 Variable:N -> .
 NumericValue:100
 FunctionRnd1:RND1(.,.) -> .()
 AssignmentOperator:= .() -> .()
130 PRINT "ORIGINAL ARRAY:"
 TextValue:"ORIGINAL ARRAY:"
 CarriageControl:NL
132 ARR PRINT Z
 Variable:Z() -> .()
 CarriageControl:NL
134 PRINT
 CarriageControl:NL
140 GOSUB 1000
 LineNumber:1000
150 PRINT "SORTED ARRAY:"
 TextValue:"SORTED ARRAY:"
 CarriageControl:NL
152 ARR PRINT Z
 Variable:Z() -> .()
 CarriageControl:NL
154 PRINT
 CarriageControl:NL
190 STOP
 
1000 LET I = N - 1
 Variable:I -> .
 Variable:N -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
1010 FOR J = 0 TO I
 control: Variable:J -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:I -> ."]
1020 LET K = J + 1
 Variable:K -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
1030 FOR L = N TO K STEP -1
 control: Variable:L -> .
 start:   ["Variable:N -> ."]
 end:     ["Variable:K -> ."]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
1040 IF Z(L) > Z(J) THEN 1060
 Variable:L -> .
 Variable:Z(.) -> .
 Variable:J -> .
 Variable:Z(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:1060
1050 LET Z(L), Z(J) = Z(J), Z(L)
 Variable:L -> .
 Variable:Z(.) -> .
 Variable:J -> .
 Variable:Z(.) -> .
 Variable:J -> .
 Variable:Z(.) -> .
 Variable:L -> .
 Variable:Z(.) -> .
 AssignmentOperator:= .,. -> .,.
1060 NEXT L
 Variable:L -> .
1070 NEXT J
 Variable:J -> .
1080 RETURN
 
9999 END
 

