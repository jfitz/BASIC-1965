Statistics:

Number of lines: 34
Number of valid statements: 25
Number of comments: 9
Number of executable statements: 25

Complexity:

Comment density: 0.360
Comprehension effort: 69
McCabe complexity: 4
Halstead complexity:
 length: 76
 volume: 272.347
 difficulty: 14.000
 effort: 3812.864
 language: 1.390
 intelligence: 19.453
 time: 3.530

10 (0 1) REM THIS PROGRAM IS A BUBBLE SORT, WHICH PLACES THE
  Origs: 
  Dests: 
20 (0 1) REM VALUES IN AN ARRAY IN ASCENDING SEQUENCE
  Origs: 
  Dests: 
30 (0 1) REM IT IS INTENDED TO BE AN EXAMPLE AND NOT A
  Origs: 
  Dests: 
40 (0 1) REM SPECIFIC CASE
  Origs: 
  Dests: 
50 (0 1) REM THIS PROGRAM MAY BE CONVERTED INTO A SUBROUTINE
  Origs: 
  Dests: 
60 (0 1) REM FOR USE IN A LARGER PROGRAM
  Origs: 
  Dests: 
70 (0 1) REM THE ARRAY IS Z OF LENGTH N
  Origs: 
  Dests: 
80 (0 1) REM Z IS ASSUMED TO HAVE BEEN DECLARED IN A DIM
  Origs: 
  Dests: 
90 (0 1) REM STATEMENT AND N SET AHEAD OF TIME
  Origs: 
  Dests: 
100 (0 3) LET N = 100
  Origs: :start
  Dests: 102:auto
102 (0 2) OPTION MAX_DIM N
  Origs: 100:auto
  Dests: 110:auto
110 (0 2) PRINT "BUBBLE SORT"
  Origs: 102:auto
  Dests: 112:auto
112 (0 3) PRINT N; " VALUES"
  Origs: 110:auto
  Dests: 114:auto
114 (0 2) PRINT
  Origs: 112:auto
  Dests: 120:auto
120 (0 2) DIM Z(100)
  Origs: 114:auto
  Dests: 122:auto
122 (0 4) ARR Z = RND1(N, 100)
  Origs: 120:auto
  Dests: 130:auto
130 (0 2) PRINT "ORIGINAL ARRAY:"
  Origs: 122:auto
  Dests: 132:auto
132 (0 2) ARR PRINT Z
  Origs: 130:auto
  Dests: 134:auto
134 (0 2) PRINT
  Origs: 132:auto
  Dests: 140:auto
140 (0 2) GOSUB 1000
  Origs: 134:auto
  Dests: 150:auto, 1000:gosub
150 (0 2) PRINT "SORTED ARRAY:"
  Origs: 140:auto
  Dests: 152:auto
152 (0 2) ARR PRINT Z
  Origs: 150:auto
  Dests: 154:auto
154 (0 2) PRINT
  Origs: 152:auto
  Dests: 190:auto
190 (0 1) STOP
  Origs: 154:auto
  Dests: :stop
1000 G(1000) (0 4) LET I = N - 1
  Origs: 140:gosub
  Dests: 1010:auto
1010 G(1000) F(J:1010) (1 3) FOR J = 0 TO I
  Origs: 1000:auto
  Dests: 1020:fornext, 1070:fornext
1020 G(1000) F(J:1010) (0 4) LET K = J + 1
  Origs: 1010:fornext
  Dests: 1030:auto
1030 G(1000) F(J:1010,L:1030) (1 5) FOR L = N TO K STEP -1
  Origs: 1020:auto
  Dests: 1040:fornext, 1060:fornext
1040 G(1000) F(J:1010,L:1030) (1 4) IF Z(L) > Z(J) THEN 1060
  Origs: 1030:fornext
  Dests: 1050:auto, 1060:ifthen
1050 G(1000) F(J:1010,L:1030) (0 3) LET Z(L), Z(J) = Z(J), Z(L)
  Origs: 1040:auto
  Dests: 1060:auto
1060 G(1000) F(J:1010,L:1030) (0 1) NEXT L
  Origs: 1030:fornext, 1040:ifthen, 1050:auto
  Dests: 1070:auto
1070 G(1000) F(J:1010) (0 1) NEXT J
  Origs: 1010:fornext, 1060:auto
  Dests: 1080:auto
1080 G(1000) (0 1) RETURN
  Origs: 1070:auto
  Dests: 
9999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

9999: END

