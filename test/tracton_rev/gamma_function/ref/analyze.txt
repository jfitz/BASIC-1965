Statistics:

Number of lines: 62
Number of valid statements: 59
Number of comments: 3
Number of executable statements: 59

Complexity:

Comment density: 0.051
Comprehension effort: 208
McCabe complexity: 13
Halstead complexity:
 length: 224
 volume: 984.357
 difficulty: 13.977
 effort: 13758.621
 language: 5.039
 intelligence: 70.426
 time: 12.739

10 (0 1) REM THIS PROGRAM GENERATES VIA POLYNOMIAL
  Origs: 
  Dests: 
20 (0 1) REM APPROXIMATION THE GAMMA FUNCTION
  Origs: 
  Dests: 
30 (0 1) REM AND THE GENERALIZED FACTORIALS
  Origs: 
  Dests: 
40 (0 3) LET A = 0.57717
  Origs: :start
  Dests: 50:auto
50 (0 3) LET B = 0.98821
  Origs: 40:auto
  Dests: 60:auto
60 (0 3) LET C = 0.89706
  Origs: 50:auto
  Dests: 70:auto
70 (0 3) LET D = 0.91821
  Origs: 60:auto
  Dests: 80:auto
80 (0 3) LET E = 0.7567
  Origs: 70:auto
  Dests: 90:auto
90 (0 3) LET F = 0.4822
  Origs: 80:auto
  Dests: 100:auto
100 (0 3) LET G = 0.19353
  Origs: 90:auto
  Dests: 110:auto
110 (0 3) LET H = 0.03587
  Origs: 100:auto
  Dests: 120:auto
120 (0 2) PRINT "TYPE 1 FOR GAMMA FUNCTION OR"
  Origs: 110:auto, 180:goto, 480:goto
  Dests: 130:auto
130 (0 2) PRINT "TYPE 2 FOR THE GENERALIZED FACTORIAL"
  Origs: 120:auto
  Dests: 140:auto
140 (1 2) INPUT A
  Origs: 130:auto
  Dests: 150:auto
150 (1 4) IF A = 1 THEN 190
  Origs: 140:auto
  Dests: 160:auto, 190:ifthen
160 (1 4) IF A = 2 THEN 300
  Origs: 150:auto
  Dests: 170:auto, 300:ifthen
170 (0 2) PRINT "INVALID RESPONSE"
  Origs: 160:auto
  Dests: 180:auto
180 (0 3) GOTO 120
  Origs: 170:auto
  Dests: 120:goto
190 (0 2) PRINT "ENTER VALUE OF X"
  Origs: 150:ifthen, 250:goto
  Dests: 200:auto
200 (1 2) INPUT X
  Origs: 190:auto
  Dests: 210:auto
210 (0 3) LET K = X
  Origs: 200:auto
  Dests: 220:auto
220 (0 4) LET K = K - 1
  Origs: 210:auto
  Dests: 230:auto
230 (1 4) IF K >= 0 THEN 260
  Origs: 220:auto
  Dests: 240:auto, 260:ifthen
240 (0 2) PRINT "X MUST BE EQUAL TO OR GREATER THAN 1"
  Origs: 230:auto
  Dests: 250:auto
250 (0 3) GOTO 190
  Origs: 240:auto
  Dests: 190:goto
260 (0 2) GOSUB 490
  Origs: 230:ifthen
  Dests: 270:auto, 490:gosub
270 (1 6) IF (X - 1) = INT(X - 1) THEN 410
  Origs: 260:auto
  Dests: 280:auto, 410:ifthen
280 (0 2) GOSUB 570
  Origs: 270:auto
  Dests: 290:auto, 570:gosub
290 (0 2) GOTO 410
  Origs: 280:auto
  Dests: 410:goto
300 (0 2) PRINT "ENTER VALUE OF X"
  Origs: 160:ifthen, 350:goto
  Dests: 310:auto
310 (1 2) INPUT X
  Origs: 300:auto
  Dests: 320:auto
320 (0 3) LET K = X
  Origs: 310:auto
  Dests: 330:auto
330 (1 4) IF K >= 0 THEN 360
  Origs: 320:auto
  Dests: 340:auto, 360:ifthen
340 (0 2) PRINT "X MUST BE GREATER THAN OR EQUAL TO 0"
  Origs: 330:auto
  Dests: 350:auto
350 (0 3) GOTO 300
  Origs: 340:auto
  Dests: 300:goto
360 (0 2) GOSUB 490
  Origs: 330:ifthen
  Dests: 370:auto, 490:gosub
370 (1 5) IF X = INT(X) THEN 390
  Origs: 360:auto
  Dests: 380:auto, 390:ifthen
380 (0 2) GOSUB 570
  Origs: 370:auto
  Dests: 390:auto, 570:gosub
390 (0 4) PRINT X; "! = "; K
  Origs: 370:ifthen, 380:auto
  Dests: 400:auto
400 (0 2) GOTO 420
  Origs: 390:auto
  Dests: 420:goto
410 (0 5) PRINT "GAMMA ("; X; ") = "; K
  Origs: 270:ifthen, 290:goto
  Dests: 420:auto
420 (0 2) PRINT
  Origs: 400:goto, 410:auto
  Dests: 430:auto
430 (0 2) PRINT "TO CONTINUE TYPE 1, IF NOT TYPE 0"
  Origs: 420:auto
  Dests: 440:auto
440 (1 2) INPUT L
  Origs: 430:auto
  Dests: 450:auto
450 (1 4) IF L = 1 THEN 470
  Origs: 440:auto
  Dests: 460:auto, 470:ifthen
460 (0 1) STOP
  Origs: 450:auto
  Dests: :stop
470 (0 2) PRINT
  Origs: 450:ifthen
  Dests: 480:auto
480 (0 3) GOTO 120
  Origs: 470:auto
  Dests: 120:goto
490 G(490) (0 3) LET J = 1
  Origs: 260:gosub, 360:gosub
  Dests: 500:auto
500 G(490) (0 4) LET J = J * K
  Origs: 490:auto, 530:goto
  Dests: 510:auto
510 G(490) (0 4) LET K = K - 1
  Origs: 500:auto
  Dests: 520:auto
520 G(490) (1 4) IF K < 1 THEN 540
  Origs: 510:auto
  Dests: 530:auto, 540:ifthen
530 G(490) (0 3) GOTO 500
  Origs: 520:auto
  Dests: 500:goto
540 G(490) (0 3) LET L = K
  Origs: 520:ifthen
  Dests: 550:auto
550 G(490) (0 3) LET K = J
  Origs: 540:auto
  Dests: 560:auto
560 G(490) (0 1) RETURN
  Origs: 550:auto
  Dests: 
570 G(570) (0 16) LET A1 = 1 + (A * L) + (B * (L ^ 2)) + (C * (L ^ 3))
  Origs: 280:gosub, 380:gosub
  Dests: 580:auto
580 G(570) (0 18) LET A1 = A1 + (D * (L ^ 4)) + (E * (L ^ 5)) + (F * (L ^ 6))
  Origs: 570:auto
  Dests: 590:auto
590 G(570) (0 13) LET A1 = A1 + (G * (L ^ 7)) + (H * (L ^ 8))
  Origs: 580:auto
  Dests: 600:auto
600 G(570) (0 4) LET K = A1 * K
  Origs: 590:auto
  Dests: 610:auto
610 G(570) (0 1) RETURN
  Origs: 600:auto
  Dests: 
620 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

620: END

