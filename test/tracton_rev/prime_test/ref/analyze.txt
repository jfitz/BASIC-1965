Statistics:

Number of lines: 23
Number of valid statements: 21
Number of comments: 2
Number of executable statements: 21

Complexity:

Comment density: 0.095
Comprehension effort: 73
McCabe complexity: 6
Halstead complexity:
 length: 75
 volume: 272.819
 difficulty: 10.615
 effort: 2896.078
 language: 2.421
 intelligence: 25.700
 time: 2.682

10 (0 1) REM THIS PROGRAM TESTS IF A NUMBER IS PRIME
  Origs: 
  Dests: 
20 (0 1) REM IT CONTINUES TO CYCLE UNTIL ZERO IS ENTERED
  Origs: 
  Dests: 
30 (0 2) PRINT "ENTER THE TEST NUMBER, ZERO TO STOP"
  Origs: :start, 190:goto, 210:goto
  Dests: 40:auto
40 (1 2) INPUT N
  Origs: 30:auto
  Dests: 50:auto
50 (0 4) LET N = INT(N)
  Origs: 40:auto
  Dests: 60:auto
60 (1 4) IF N = 0 THEN 220
  Origs: 50:auto
  Dests: 70:auto, 220:ifthen
70 (1 4) IF N < 4 THEN 180
  Origs: 60:auto
  Dests: 80:auto, 180:ifthen
80 (0 3) LET I = 0
  Origs: 70:auto
  Dests: 90:auto
90 (0 3) LET T = 2
  Origs: 80:auto
  Dests: 100:auto
100 (0 4) LET J = INT(N / T)
  Origs: 90:auto, 170:goto
  Dests: 110:auto
110 (0 4) LET K = J * T
  Origs: 100:auto
  Dests: 120:auto
120 (1 4) IF N = K THEN 200
  Origs: 110:auto
  Dests: 130:auto, 200:ifthen
130 (0 4) LET I = I + 1
  Origs: 120:auto
  Dests: 140:auto
140 (0 4) LET L = T * T
  Origs: 130:auto
  Dests: 150:auto
150 (1 4) IF L > N THEN 180
  Origs: 140:auto
  Dests: 160:auto, 180:ifthen
160 (0 5) LET T = (I * 2) + 1
  Origs: 150:auto
  Dests: 170:auto
170 (0 3) GOTO 100
  Origs: 160:auto
  Dests: 100:goto
180 (0 3) PRINT N; "IS A PRIME"
  Origs: 70:ifthen, 150:ifthen
  Dests: 190:auto
190 (0 3) GOTO 30
  Origs: 180:auto
  Dests: 30:goto
200 (0 5) PRINT N; "IS NOT A PRIME:"; T; "IS THE SMALLEST FACTOR"
  Origs: 120:ifthen
  Dests: 210:auto
210 (0 3) GOTO 30
  Origs: 200:auto
  Dests: 30:goto
220 (0 2) PRINT "GOOD-BYE FROM THE PRIME TESTER"
  Origs: 60:ifthen
  Dests: 230:auto
230 (0 1) END
  Origs: 220:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

