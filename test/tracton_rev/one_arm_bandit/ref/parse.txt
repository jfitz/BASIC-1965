10 REM THIS PROGRAM SIMULATES THEN MECHANICAL
 Remark:THIS PROGRAM SIMULATES THEN MECHANICAL
20 REM THREE WHEEL ONE-ARM BANDIT
 Remark:THREE WHEEL ONE-ARM BANDIT
30 PRINT "ARE INSTRUCTIONS REQUIRED"
 TextValue:"ARE INSTRUCTIONS REQUIRED"
 CarriageControl:NL
40 PRINT "TYPE EITHER 1 OR 0"
 TextValue:"TYPE EITHER 1 OR 0"
 CarriageControl:NL
50 INPUT L
 Variable:L -> .
60 IF L = 1 THEN 100
 Variable:L -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:100
70 IF L = 0 THEN 170
 Variable:L -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:170
80 PRINT "INVALID COMMAND"
 TextValue:"INVALID COMMAND"
 CarriageControl:NL
90 GOTO 30
 LineNumber:30
100 PRINT "SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"
 TextValue:"SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"
 CarriageControl:NL
110 PRINT "BANANAS EARN $10. 3 CHERRIES EARN $90."
 TextValue:"BANANAS EARN $10. 3 CHERRIES EARN $90."
 CarriageControl:NL
120 PRINT "IF THE FIRST FRUIT IS AN APPLE YOU EARN #$2"
 TextValue:"IF THE FIRST FRUIT IS AN APPLE YOU EARN #$2"
 CarriageControl:NL
130 PRINT "IF THE 1ST AND 2ND ARE APPLES YOU EARN $3"
 TextValue:"IF THE 1ST AND 2ND ARE APPLES YOU EARN $3"
 CarriageControl:NL
140 PRINT "IF THE LAST FRUIT IS A CHERRY AND THE"
 TextValue:"IF THE LAST FRUIT IS A CHERRY AND THE"
 CarriageControl:NL
150 PRINT "OTHER TWO ARE THE SAME BUT NOT APPLES YOU"
 TextValue:"OTHER TWO ARE THE SAME BUT NOT APPLES YOU"
 CarriageControl:NL
160 PRINT "EARN $10. EACH TURN COSTS $1. GOOD-LUCK"
 TextValue:"EARN $10. EACH TURN COSTS $1. GOOD-LUCK"
 CarriageControl:NL
170 LET J = 0
 Variable:J -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
180 PRINT
 CarriageControl:NL
190 GOSUB 590
 LineNumber:590
200 LET S1 = S
 Variable:S1 -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
210 GOSUB 590
 LineNumber:590
220 LET S2 = S
 Variable:S2 -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
230 GOSUB 590
 LineNumber:590
240 LET S3 = S
 Variable:S3 -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
250 LET S = S1
 Variable:S -> .
 Variable:S1 -> .
 AssignmentOperator:= . -> .
340 IF S1 = 1 THEN 380
 Variable:S1 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:380
350 IF S1 = 2 THEN 420
 Variable:S1 -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:420
360 IF S1 = S2 THEN 440
 Variable:S1 -> .
 Variable:S2 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:440
370 GOTO 460
 LineNumber:460
380 IF S1 = S2 THEN 400
 Variable:S1 -> .
 Variable:S2 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:400
390 GOTO 460
 LineNumber:460
400 IF S2 = S3 THEN 480
 Variable:S2 -> .
 Variable:S3 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:480
410 GOTO 460
 LineNumber:460
420 IF S1 = S2 THEN 500
 Variable:S1 -> .
 Variable:S2 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:500
430 GOTO 520
 LineNumber:520
440 IF S2 = S3 THEN 540
 Variable:S2 -> .
 Variable:S3 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:540
450 IF S3 = 1 THEN 540
 Variable:S3 -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:540
460 LET J = J - 1
 Variable:J -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
470 GOTO 550
 LineNumber:550
480 LET J = J + 89
 Variable:J -> .
 Variable:J -> .
 NumericValue:89
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
490 GOTO 550
 LineNumber:550
500 LET J = J + 2
 Variable:J -> .
 Variable:J -> .
 NumericValue:2
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
510 GOTO 550
 LineNumber:550
520 LET J = J + 1
 Variable:J -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
530 GOTO 550
 LineNumber:550
540 LET J = J + 9
 Variable:J -> .
 Variable:J -> .
 NumericValue:9
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
550 PRINT
 CarriageControl:NL
560 LET S = S1
 Variable:S -> .
 Variable:S1 -> .
 AssignmentOperator:= . -> .
561 GOSUB 610
 LineNumber:610
562 PRINT " ";
 TextValue:" "
 CarriageControl:;
563 LET S = S2
 Variable:S -> .
 Variable:S2 -> .
 AssignmentOperator:= . -> .
564 GOSUB 610
 LineNumber:610
565 PRINT " ";
 TextValue:" "
 CarriageControl:;
566 LET S = S3
 Variable:S -> .
 Variable:S3 -> .
 AssignmentOperator:= . -> .
567 GOSUB 610
 LineNumber:610
568 PRINT
 CarriageControl:NL
570 PRINT "YOUR EARNINGS ARE NOW $";J
 TextValue:"YOUR EARNINGS ARE NOW $"
 CarriageControl:;
 Variable:J -> .
 CarriageControl:NL
580 GOTO 720
 LineNumber:720
590 LET S = 1 + INT(5*RND)
 Variable:S -> .
 NumericValue:1
 NumericValue:5
 FunctionRnd:RND -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
600 RETURN
 
610 IF S = 1 THEN 620
 Variable:S -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:620
611 IF S = 2 THEN 640
 Variable:S -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:640
612 IF S = 3 THEN 660
 Variable:S -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:660
613 IF S = 4 THEN 680
 Variable:S -> .
 NumericValue:4
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:680
614 IF S = 5 THEN 700
 Variable:S -> .
 NumericValue:5
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:700
620 PRINT "CHERRY";
 TextValue:"CHERRY"
 CarriageControl:;
630 GOTO 710
 LineNumber:710
640 PRINT "APPLE";
 TextValue:"APPLE"
 CarriageControl:;
650 GOTO 710
 LineNumber:710
660 PRINT "LEMON";
 TextValue:"LEMON"
 CarriageControl:;
670 GOTO 710
 LineNumber:710
680 PRINT "ORANGE";
 TextValue:"ORANGE"
 CarriageControl:;
690 GOTO 710
 LineNumber:710
700 PRINT "BANANA";
 TextValue:"BANANA"
 CarriageControl:;
710 RETURN
 
720 PRINT
 CarriageControl:NL
730 PRINT "TO CONTINUE TYPE 1, IF NOT TYPE 0"
 TextValue:"TO CONTINUE TYPE 1, IF NOT TYPE 0"
 CarriageControl:NL
740 INPUT Z
 Variable:Z -> .
750 IF Z = 1 THEN 780
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:780
760 PRINT "ONE-ARM BANDIT SAYS GOOD-BYE"
 TextValue:"ONE-ARM BANDIT SAYS GOOD-BYE"
 CarriageControl:NL
770 STOP
 
780 PRINT
 CarriageControl:NL
790 GOTO 190
 LineNumber:190
800 END
 

