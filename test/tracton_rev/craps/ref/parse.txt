10 REM THIS PROGRAM SIMULATES THE GAME OF CRAPS
 Remark:THIS PROGRAM SIMULATES THE GAME OF CRAPS
20 REM RANDOMIZE
 Remark:RANDOMIZE
30 PRINT " FOR RULES, TYPE 1, OTHERWISE TYPE 0"
 TextValue:" FOR RULES, TYPE 1, OTHERWISE TYPE 0"
 CarriageControl:NL
40 INPUT R
 Variable:R -> .
50 IF R = 1 THEN 90
 Variable:R -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:90
60 IF R = 0 THEN 140
 Variable:R -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:140
70 PRINT "INVALID COMMAND"
 TextValue:"INVALID COMMAND"
 CarriageControl:NL
80 GOTO 30
 LineNumber:30
90 PRINT "A 7 OR 11 ON THE FIRST THROW WINS"
 TextValue:"A 7 OR 11 ON THE FIRST THROW WINS"
 CarriageControl:NL
100 PRINT "YOU CAN ALSO WIN BY THROWING A 4,5,6,8,9,10"
 TextValue:"YOU CAN ALSO WIN BY THROWING A 4,5,6,8,9,10"
 CarriageControl:NL
110 PRINT "AND MATCHING IT BEFORE THROWING A 7. IF ON"
 TextValue:"AND MATCHING IT BEFORE THROWING A 7. IF ON"
 CarriageControl:NL
120 PRINT "THE FIRST THROW 2,3 OR A 12 COMES UP"
 TextValue:"THE FIRST THROW 2,3 OR A 12 COMES UP"
 CarriageControl:NL
130 PRINT "YOU LOSE AUTOMATICALLY"
 TextValue:"YOU LOSE AUTOMATICALLY"
 CarriageControl:NL
140 LET J = 0
 Variable:J -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
150 GOSUB 460
 LineNumber:460
160 LET D1 = N
 Variable:D1 -> .
 Variable:N -> .
 AssignmentOperator:= . -> .
170 GOSUB 460
 LineNumber:460
180 LET D2 = N
 Variable:D2 -> .
 Variable:N -> .
 AssignmentOperator:= . -> .
190 LET D3 = D1 + D2
 Variable:D3 -> .
 Variable:D1 -> .
 Variable:D2 -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
200 LET J = J + 1
 Variable:J -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
210 IF J = 1 THEN 260
 Variable:J -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:260
220 IF D3 = D4 THEN 420
 Variable:D3 -> .
 Variable:D4 -> .
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:420
230 IF D3 = 7 THEN 440
 Variable:D3 -> .
 NumericValue:7
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:440
240 PRINT "YOU THROW A ";D3
 TextValue:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> .
 CarriageControl:NL
250 GOTO 150
 LineNumber:150
260 IF D3 = 7 THEN 320
 Variable:D3 -> .
 NumericValue:7
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:320
270 IF D3 = 2 THEN 340
 Variable:D3 -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:340
280 IF D3 = 3 THEN 340
 Variable:D3 -> .
 NumericValue:3
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:340
290 IF D3 = 12 THEN 340
 Variable:D3 -> .
 NumericValue:12
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:340
300 IF D3 = 11 THEN 320
 Variable:D3 -> .
 NumericValue:11
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:320
310 LET D4 = D3
 Variable:D4 -> .
 Variable:D3 -> .
 AssignmentOperator:= . -> .
315 GOTO 240
 LineNumber:240
320 PRINT "YOU THROW A ";D3;" YOU WIN"
 TextValue:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> .
 CarriageControl:;
 TextValue:" YOU WIN"
 CarriageControl:NL
330 GOTO 350
 LineNumber:350
340 PRINT "YOU THROW A ";D3;" YOU LOSE"
 TextValue:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> .
 CarriageControl:;
 TextValue:" YOU LOSE"
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 PRINT "TO CONTINUE TYPE 1, IF NOT TYPE 0"
 TextValue:"TO CONTINUE TYPE 1, IF NOT TYPE 0"
 CarriageControl:NL
370 INPUT L
 Variable:L -> .
380 IF L = 1 THEN 400
 Variable:L -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:400
390 STOP
 
400 PRINT
 CarriageControl:NL
410 GOTO 30
 LineNumber:30
420 PRINT "YOU THROW A ";D3;"YOU WIN BY MATCHING"
 TextValue:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> .
 CarriageControl:;
 TextValue:"YOU WIN BY MATCHING"
 CarriageControl:NL
430 GOTO 350
 LineNumber:350
440 PRINT "YOU THROW A ";D3;" SORRY YOU LOSE"
 TextValue:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> .
 CarriageControl:;
 TextValue:" SORRY YOU LOSE"
 CarriageControl:NL
450 GOTO 350
 LineNumber:350
460 LET N = 1 + INT(6*RND)
 Variable:N -> .
 NumericValue:1
 NumericValue:6
 FunctionRnd:RND -> .
 BinaryOperatorMultiply:*(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
470 RETURN
 
480 END
 

