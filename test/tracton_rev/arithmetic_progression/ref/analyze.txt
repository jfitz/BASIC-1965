Statistics:

Number of lines: 30
Number of valid statements: 29
Number of comments: 1
Number of executable statements: 29

Complexity:

Comment density: 0.034
Comprehension effort: 77
McCabe complexity: 10
Halstead complexity:
 length: 71
 volume: 273.360
 difficulty: 7.886
 effort: 2155.643
 language: 4.396
 intelligence: 34.665
 time: 1.996

10 (0 1) REM THIS PROGRAM COMPUTES ARITHMETIC PROGRESSION
  Origs: 
  Dests: 
20 (0 2) PRINT "FIRST TERM = ";
  Origs: :start, 300:goto
  Dests: 30:auto
30 (1 2) INPUT A
  Origs: 20:auto
  Dests: 40:auto
40 (0 2) PRINT "COMMON DIFFERENCE = ";
  Origs: 30:auto
  Dests: 50:auto
50 (1 2) INPUT D
  Origs: 40:auto
  Dests: 60:auto
60 (0 2) PRINT "NUMBER OF TERMS = ";
  Origs: 50:auto
  Dests: 70:auto
70 (1 2) INPUT N
  Origs: 60:auto
  Dests: 80:auto
80 (0 2) PRINT "FOR TABLE TYPE 1, IF NOT TYPE 0";
  Origs: 70:auto
  Dests: 90:auto
90 (1 2) INPUT C
  Origs: 80:auto
  Dests: 100:auto
100 (1 4) IF C = 1 THEN 120
  Origs: 90:auto
  Dests: 110:auto, 120:ifthen
110 (0 2) GOTO 140
  Origs: 100:auto
  Dests: 140:goto
120 (0 2) PRINT "ARITHMETIC PROGRESSION"
  Origs: 100:ifthen
  Dests: 130:auto
130 (0 3) PRINT "TERM NUMBER", "TERM VALUE"
  Origs: 120:auto
  Dests: 140:auto
140 (0 3) LET J = 0
  Origs: 110:goto, 130:auto
  Dests: 150:auto
150 F(I) (1 4) FOR I = 0 TO N - 1
  Origs: 140:auto
  Dests: 160:fornext, 220:fornext
160 F(I) (0 4) LET K = I + 1
  Origs: 150:fornext
  Dests: 170:auto
170 F(I) (0 6) LET L = A + (I * D)
  Origs: 160:auto
  Dests: 180:auto
180 F(I) (0 4) LET J = J + L
  Origs: 170:auto
  Dests: 190:auto
190 F(I) (1 4) IF C = 1 THEN 210
  Origs: 180:auto
  Dests: 200:auto, 210:ifthen
200 F(I) (0 2) GOTO 220
  Origs: 190:auto
  Dests: 220:goto
210 F(I) (0 3) PRINT K, L
  Origs: 190:ifthen
  Dests: 220:auto
220 F(I) (0 1) NEXT I
  Origs: 150:fornext, 200:goto, 210:auto
  Dests: 230:auto
230 (0 3) PRINT "SUM = "; J
  Origs: 220:auto
  Dests: 240:auto
240 (0 2) PRINT
  Origs: 230:auto
  Dests: 250:auto
250 (0 2) PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
  Origs: 240:auto
  Dests: 260:auto
260 (1 2) INPUT X
  Origs: 250:auto
  Dests: 270:auto
270 (1 4) IF X = 1 THEN 290
  Origs: 260:auto
  Dests: 290:auto, 290:ifthen
290 (0 1) STOP
  Origs: 270:auto, 270:ifthen
  Dests: :stop
300 (0 3) GOTO 20
  Origs: 
  Dests: 20:goto
310 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

300: GOTO 20
310: END

