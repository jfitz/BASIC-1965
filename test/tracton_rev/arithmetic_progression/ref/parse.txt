10 REM THIS PROGRAM COMPUTES ARITHMETIC PROGRESSION
 Remark:THIS PROGRAM COMPUTES ARITHMETIC PROGRESSION
20 PRINT "FIRST TERM = ";
 TextValue:"FIRST TERM = "
 CarriageControl:;
30 INPUT A
 Variable:A -> .
40 PRINT "COMMON DIFFERENCE = ";
 TextValue:"COMMON DIFFERENCE = "
 CarriageControl:;
50 INPUT D
 Variable:D -> .
60 PRINT "NUMBER OF TERMS = ";
 TextValue:"NUMBER OF TERMS = "
 CarriageControl:;
70 INPUT N
 Variable:N -> .
80 PRINT "FOR TABLE TYPE 1, IF NOT TYPE 0";
 TextValue:"FOR TABLE TYPE 1, IF NOT TYPE 0"
 CarriageControl:;
90 INPUT C
 Variable:C -> .
100 IF C = 1 THEN 120
 Variable:C -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:120
110 GOTO 140
 LineNumber:140
120 PRINT "ARITHMETIC PROGRESSION"
 TextValue:"ARITHMETIC PROGRESSION"
 CarriageControl:NL
130 PRINT "TERM NUMBER", "TERM VALUE"
 TextValue:"TERM NUMBER"
 CarriageControl:,
 TextValue:"TERM VALUE"
 CarriageControl:NL
140 LET J = 0
 Variable:J -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
150 FOR I = 0 TO N - 1
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
160 LET K = I + 1
 Variable:K -> .
 Variable:I -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
170 LET L = A + (I*D)
 Variable:L -> .
 Variable:A -> .
 Variable:I -> .
 Variable:D -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
180 LET J = J + L
 Variable:J -> .
 Variable:J -> .
 Variable:L -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
190 IF C = 1 THEN 210
 Variable:C -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:210
200 GOTO 220
 LineNumber:220
210 PRINT K, L
 Variable:K -> .
 CarriageControl:,
 Variable:L -> .
 CarriageControl:NL
220 NEXT I
 Variable:I -> .
230 PRINT "SUM = ";J
 TextValue:"SUM = "
 CarriageControl:;
 Variable:J -> .
 CarriageControl:NL
240 PRINT
 CarriageControl:NL
250 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
 TextValue:"TYPE 1 TO CONTINUE, 0 TO STOP"
 CarriageControl:NL
260 INPUT X
 Variable:X -> .
270 IF X = 1 THEN 290
 Variable:X -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:290
290 STOP
 
300 GOTO 20
 LineNumber:20
310 END
 

