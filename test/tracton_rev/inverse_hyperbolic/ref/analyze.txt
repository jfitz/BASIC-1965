Statistics:

Number of lines: 64
Number of valid statements: 63
Number of comments: 1
Number of executable statements: 63

Complexity:

Comment density: 0.016
Comprehension effort: 167
McCabe complexity: 12
Halstead complexity:
 length: 199
 volume: 814.775
 difficulty: 15.978
 effort: 13018.681
 language: 3.191
 intelligence: 50.993
 time: 12.054

(0 1) 10 REM THIS PROGRAM COMPUTES INVERSE HYPERBOLIC FUNCTIONS
  Origs: 
  Dests: 
(0 2) 20 PRINT "SINH - 1 (1)"
  Origs: :start
  Dests: 30:auto
(0 2) 30 PRINT "COSH - 1 (2)"
  Origs: 20:auto
  Dests: 40:auto
(0 2) 40 PRINT "TANH - 1 (3)"
  Origs: 30:auto
  Dests: 50:auto
(0 2) 50 PRINT "CSCH - 1 (4)"
  Origs: 40:auto
  Dests: 60:auto
(0 2) 60 PRINT "SECH - 1 (5)"
  Origs: 50:auto
  Dests: 70:auto
(0 2) 70 PRINT "COTH - 1 (6)"
  Origs: 60:auto
  Dests: 80:auto
(0 2) 80 PRINT "TYPE A NUMBER 1 TO 6 FOR FUNCTION DESIRED"
  Origs: 70:auto, 106:goto, 430:goto
  Dests: 90:auto
(1 2) 90 INPUT C
  Origs: 80:auto
  Dests: 100:auto
(1 4) 100 IF C = 1 THEN 110
  Origs: 90:auto
  Dests: 101:auto, 110:ifthen
(1 4) 101 IF C = 2 THEN 150
  Origs: 100:auto
  Dests: 102:auto, 150:ifthen
(1 4) 102 IF C = 3 THEN 190
  Origs: 101:auto
  Dests: 103:auto, 190:ifthen
(1 4) 103 IF C = 4 THEN 230
  Origs: 102:auto
  Dests: 104:auto, 230:ifthen
(1 4) 104 IF C = 5 THEN 280
  Origs: 103:auto
  Dests: 105:auto, 280:ifthen
(1 4) 105 IF C = 6 THEN 330
  Origs: 104:auto
  Dests: 106:auto, 330:ifthen
(0 3) 106 GOTO 80
  Origs: 105:auto
  Dests: 80:goto
(0 2) 110 GOSUB 440
  Origs: 100:ifthen
  Dests: 120:auto, 440:gosub
(0 2) 120 GOSUB 470
  Origs: 110:auto
  Dests: 130:auto, 470:gosub
(0 5) 130 PRINT "SINH - 1"; X; " = "; Z
  Origs: 120:auto
  Dests: 140:auto
(0 2) 140 GOTO 370
  Origs: 130:auto
  Dests: 370:goto
(0 2) 150 GOSUB 440
  Origs: 101:ifthen
  Dests: 160:auto, 440:gosub
(0 2) 160 GOSUB 490
  Origs: 150:auto
  Dests: 170:auto, 490:gosub
(0 5) 170 PRINT "COSH - 1"; X; " = "; Z
  Origs: 160:auto
  Dests: 180:auto
(0 2) 180 GOTO 370
  Origs: 170:auto
  Dests: 370:goto
(0 2) 190 GOSUB 440
  Origs: 102:ifthen
  Dests: 200:auto, 440:gosub
(0 2) 200 GOSUB 510
  Origs: 190:auto
  Dests: 210:auto, 510:gosub
(0 5) 210 PRINT "TANH - 1"; X; " = "; Z
  Origs: 200:auto
  Dests: 220:auto
(0 2) 220 GOTO 370
  Origs: 210:auto
  Dests: 370:goto
(0 2) 230 GOSUB 530
  Origs: 103:ifthen
  Dests: 240:auto, 530:gosub
(0 2) 240 GOSUB 470
  Origs: 230:auto
  Dests: 250:auto, 470:gosub
(0 3) 250 LET X = A
  Origs: 240:auto
  Dests: 260:auto
(0 5) 260 PRINT "CSCH - 1"; X; " = "; Z
  Origs: 250:auto
  Dests: 270:auto
(0 2) 270 GOTO 370
  Origs: 260:auto
  Dests: 370:goto
(0 2) 280 GOSUB 530
  Origs: 104:ifthen
  Dests: 290:auto, 530:gosub
(0 2) 290 GOSUB 490
  Origs: 280:auto
  Dests: 300:auto, 490:gosub
(0 3) 300 LET X = A
  Origs: 290:auto
  Dests: 310:auto
(0 5) 310 PRINT "SECH - 1"; X; " = "; Z
  Origs: 300:auto
  Dests: 320:auto
(0 2) 320 GOTO 370
  Origs: 310:auto
  Dests: 370:goto
(0 2) 330 GOSUB 530
  Origs: 105:ifthen
  Dests: 340:auto, 530:gosub
(0 2) 340 GOSUB 510
  Origs: 330:auto
  Dests: 350:auto, 510:gosub
(0 3) 350 LET X = A
  Origs: 340:auto
  Dests: 360:auto
(0 5) 360 PRINT "COTH - 1"; X; " = "; Z
  Origs: 350:auto
  Dests: 370:auto
(0 2) 370 PRINT
  Origs: 140:goto, 180:goto, 220:goto, 270:goto, 320:goto, 360:auto
  Dests: 380:auto
(0 2) 380 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
  Origs: 370:auto
  Dests: 390:auto
(1 2) 390 INPUT L
  Origs: 380:auto
  Dests: 400:auto
(1 4) 400 IF L = 1 THEN 420
  Origs: 390:auto
  Dests: 410:auto, 420:ifthen
(0 1) 410 STOP
  Origs: 400:auto
  Dests: :stop
(0 2) 420 PRINT
  Origs: 400:ifthen
  Dests: 430:auto
(0 3) 430 GOTO 80
  Origs: 420:auto
  Dests: 80:goto
G(440) (0 2) 440 PRINT "X = ";
  Origs: 110:gosub, 150:gosub, 190:gosub
  Dests: 450:auto
G(440) (1 2) 450 INPUT X
  Origs: 440:auto
  Dests: 460:auto
G(440) (0 1) 460 RETURN
  Origs: 450:auto
  Dests: 
G(470) (0 4) 470 LET Z = LOG(X + SQR((X ^ 2) + 1))
  Origs: 120:gosub, 240:gosub
  Dests: 480:auto
G(470) (0 1) 480 RETURN
  Origs: 470:auto
  Dests: 
G(490) (0 4) 490 LET Z = LOG(X + SQR((X ^ 2) - 1))
  Origs: 160:gosub, 290:gosub
  Dests: 500:auto
G(490) (0 1) 500 RETURN
  Origs: 490:auto
  Dests: 
G(510) (0 5) 510 LET Z = (LOG((1 + X) / (1 - X))) / 2
  Origs: 200:gosub, 340:gosub
  Dests: 520:auto
G(510) (0 1) 520 RETURN
  Origs: 510:auto
  Dests: 
G(530) (0 2) 530 PRINT "X = ";
  Origs: 230:gosub, 280:gosub, 330:gosub
  Dests: 540:auto
G(530) (1 2) 540 INPUT X
  Origs: 530:auto
  Dests: 550:auto
G(530) (0 3) 550 LET A = X
  Origs: 540:auto
  Dests: 560:auto
G(530) (0 4) 560 LET X = 1 / X
  Origs: 550:auto
  Dests: 570:auto
G(530) (0 1) 570 RETURN
  Origs: 560:auto
  Dests: 
(0 1) 580 END
  Origs: 
  Dests: :stop

Unreachable code:

580: END

