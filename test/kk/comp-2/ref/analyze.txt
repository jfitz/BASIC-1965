Statistics:

Number of lines: 69
Number of valid statements: 55
Number of comments: 7
Number of executable statements: 55

Complexity:

Comment density: 0.127
Comprehension effort: 220
McCabe complexity: 23
Halstead complexity:
 length: 256
 volume: 1094.827
 difficulty: 25.632
 effort: 28062.676
 language: 1.666
 intelligence: 42.713
 time: 25.984

5 (0 2) PRINT
  Origs: :start, 140:goto, 240:goto, 340:goto, 440:goto, 546:goto, 560:goto, 820:goto, 860:goto
  Dests: 10:auto
10 (0 2) PRINT "A, B, P, R, Y, T";
  Origs: 5:auto
  Dests: 20:auto
20 (6 7) INPUT A, B, P, R, Y, T
  Origs: 10:auto
  Dests: 21:auto
21 (1 4) IF A < 0 THEN 800
  Origs: 20:auto
  Dests: 22:auto, 810:ifthen
22 (1 4) IF B < 0 THEN 800
  Origs: 21:auto
  Dests: 23:auto, 810:ifthen
23 (1 4) IF R <= 0 THEN 800
  Origs: 22:auto
  Dests: 24:auto, 810:ifthen
24 (1 4) IF Y <= 0 THEN 800
  Origs: 23:auto
  Dests: 25:auto, 810:ifthen
25 (1 4) IF T <= 0 THEN 800
  Origs: 24:auto
  Dests: 26:auto, 810:ifthen
26 (1 4) IF T = 999 THEN 9999
  Origs: 25:auto
  Dests: 30:auto, 9999:ifthen
30 (1 4) IF A = 999 THEN 100
  Origs: 26:auto
  Dests: 40:auto, 110:ifthen
40 (1 4) IF B = 999 THEN 200
  Origs: 30:auto
  Dests: 50:auto, 210:ifthen
50 (1 4) IF P = 999 THEN 300
  Origs: 40:auto
  Dests: 60:auto, 310:ifthen
60 (1 4) IF Y = 999 THEN 400
  Origs: 50:auto
  Dests: 70:auto, 410:ifthen
70 (1 4) IF R = 999 THEN 500
  Origs: 60:auto
  Dests: 110:auto, 505:ifthen
80 (0 0) 
  Origs: 
  Dests: 
100 (0 1) REM FIND ORIGINAL AMOUNT
  Origs: 
  Dests: 
110 (0 2) GOSUB 1000
  Origs: 30:ifthen, 70:auto
  Dests: 120:auto, 1010:gosub
120 (0 6) LET A = (B + P1) / R2 - P1
  Origs: 110:auto
  Dests: 125:auto
125 (1 4) IF A < 0 THEN 850
  Origs: 120:auto
  Dests: 130:auto, 850:ifthen
130 (0 3) PRINT "ORIGINAL AMOUNT = $" A
  Origs: 125:auto
  Dests: 140:auto
140 (0 3) GOTO 5
  Origs: 130:auto
  Dests: 5:goto
150 (0 0) 
  Origs: 
  Dests: 
200 (0 1) REM FIND FINAL AMOUNT
  Origs: 
  Dests: 
210 (0 2) GOSUB 1000
  Origs: 40:ifthen
  Dests: 220:auto, 1010:gosub
220 (0 6) LET B = (A + P1) * R2 - P1
  Origs: 210:auto
  Dests: 225:auto
225 (1 4) IF B < 0 THEN 850
  Origs: 220:auto
  Dests: 230:auto, 850:ifthen
230 (0 3) PRINT "FINAL AMOUNT = $" B
  Origs: 225:auto
  Dests: 240:auto
240 (0 3) GOTO 5
  Origs: 230:auto
  Dests: 5:goto
250 (0 0) 
  Origs: 
  Dests: 
300 (0 1) REM FIND PAYMENT
  Origs: 
  Dests: 
310 (0 2) GOSUB 1000
  Origs: 50:ifthen
  Dests: 320:auto, 1010:gosub
320 (0 11) LET P = R1 * (B - A * R2) / (R2 - 1)
  Origs: 310:auto
  Dests: 330:auto
330 (0 3) PRINT "PAYMENT = $" P
  Origs: 320:auto
  Dests: 340:auto
340 (0 3) GOTO 5
  Origs: 330:auto
  Dests: 5:goto
350 (0 0) 
  Origs: 
  Dests: 
400 (0 1) REM FIND NUMBER OF YEARS
  Origs: 
  Dests: 
410 (0 2) GOSUB 1000
  Origs: 60:ifthen
  Dests: 415:auto, 1010:gosub
415 (0 7) LET Q = (B + P1) / (A + P1)
  Origs: 410:auto
  Dests: 416:auto
416 (1 4) IF Q <= 1 THEN 850
  Origs: 415:auto
  Dests: 420:auto, 850:ifthen
420 (0 7) LET Y = LOG(Q) / LOG(1 + R1) / T
  Origs: 416:auto
  Dests: 430:auto
430 (0 3) PRINT "NUMBER OF YEARS = " Y
  Origs: 420:auto
  Dests: 440:auto
440 (0 3) GOTO 5
  Origs: 430:auto
  Dests: 5:goto
450 (0 0) 
  Origs: 
  Dests: 
500 (0 1) REM FIND ANNUAL INTEREST
  Origs: 
  Dests: 
505 (0 9) LET S = B - (A + Y * T * P)
  Origs: 70:ifthen
  Dests: 510:auto
510 F(R:510) (1 4) FOR R = 0.1 TO 100 STEP 0.1
  Origs: 505:auto
  Dests: 520:fornext, 540:fornext
520 F(R:510) (0 2) GOSUB 1000
  Origs: 510:fornext
  Dests: 530:auto, 1010:gosub
530 F(R:510) (0 8) LET S1 = B - ((A + P1) * R2 - P1)
  Origs: 520:auto
  Dests: 535:auto
535 F(R:510) (1 5) IF S * S1 <= 0 THEN 550
    WARNING: Transfer in/out of FOR/NEXT 550
  Origs: 530:auto
  Dests: 536:auto, 550:ifthen
536 F(R:510) (0 3) LET S = S1
  Origs: 535:auto
  Dests: 540:auto
540 F(R:510) (0 1) NEXT R
  Origs: 510:fornext, 536:auto
  Dests: 545:auto
545 (0 2) PRINT "NO ANSWER FOUND"
  Origs: 540:auto
  Dests: 546:auto
546 (0 3) GOTO 5
  Origs: 545:auto
  Dests: 5:goto
550 (0 7) PRINT "ANNUAL INTEREST IS BETWEEN " R - 0.1; "AND " R; "PERCENT"
  Origs: 535:ifthen
  Dests: 560:auto
560 (0 3) GOTO 5
  Origs: 550:auto
  Dests: 5:goto
570 (0 0) 
  Origs: 
  Dests: 
800 (0 1) REM ERROR ROUTINE
  Origs: 
  Dests: 
810 (0 2) PRINT "INCORRECT DATA. PLEASE RETYPE."
  Origs: 21:ifthen, 22:ifthen, 23:ifthen, 24:ifthen, 25:ifthen
  Dests: 820:auto
820 (0 3) GOTO 5
  Origs: 810:auto
  Dests: 5:goto
850 (0 2) PRINT "ANSWER IS NEGATIVE."
  Origs: 125:ifthen, 225:ifthen, 416:ifthen
  Dests: 860:auto
860 (0 3) GOTO 5
  Origs: 850:auto
  Dests: 5:goto
999 (0 0) 
  Origs: 
  Dests: 
1000 (0 1) REM COMPUTE BASIC QUANTITIES
  Origs: 
  Dests: 
1010 G(1010) (0 4) LET N = Y * T
  Origs: 110:gosub, 210:gosub, 310:gosub, 410:gosub, 520:gosub
  Dests: 1020:auto
1020 G(1010) (0 5) LET R1 = R / 100 / T
  Origs: 1010:auto
  Dests: 1030:auto
1030 G(1010) (0 4) LET P1 = P / R1
  Origs: 1020:auto
  Dests: 1040:auto
1040 G(1010) (0 5) LET R2 = (1 + R1) ^ N
  Origs: 1030:auto
  Dests: 1099:auto
1099 G(1010) (0 1) RETURN
  Origs: 1040:auto
  Dests: 
9999 (0 1) END
  Origs: 26:ifthen
  Dests: :stop

Unreachable code:

All executable lines are reachable.

