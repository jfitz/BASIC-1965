100 DEF FNF(X) = SIN(X)
 UserFunctionName:FNF -> _
 VariableName:X -> _
 Variable:X -> _
 FunctionSin:SIN(_) -> _
105 DEF FNG(X) = LOG(X)/LOG(10)
 UserFunctionName:FNG -> _
 VariableName:X -> _
 Variable:X -> _
 FunctionLog:LOG(_) -> _
 NumericValue:10
 FunctionLog:LOG(_) -> =_
 BinaryOperatorDivide:/(_,_) -> _
110 READ A,B,S
 Variable:A -> _
 Variable:B -> _
 Variable:S -> _
120 READ C,D,N
 Variable:C -> _
 Variable:D -> _
 Variable:N -> _
130 LET H = (D-C)/N
 Variable:H -> _
 Variable:D -> _
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:N -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
140 IF N <= 50 THEN 180
 Variable:N -> _
 NumericValue:50
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:180
150 PRINT "ONLY 50 SUB-DIVISIONS ALLOWED ON Y-AXIS"
 TextValue:"ONLY 50 SUB-DIVISIONS ALLOWED ON Y-AXIS"
 CarriageControl:NL
160 STOP
 
170 DEF FNR(X) = INT(X+0.5)
 UserFunctionName:FNR -> _
 VariableName:X -> _
 Variable:X -> _
 NumericValue:0.5
 BinaryOperatorPlus:+(_,_) -> _
 FunctionInt:INT(_) -> _
180 PRINT "Y-AXIS:  FROM " C; "TO " D; "IN STEPS OF " H
 TextValue:"Y-AXIS:  FROM "
 CarriageControl:
 Variable:C -> _
 CarriageControl:;
 TextValue:"TO "
 CarriageControl:
 Variable:D -> _
 CarriageControl:;
 TextValue:"IN STEPS OF "
 CarriageControl:
 Variable:H -> _
 CarriageControl:NL
190 PRINT
 CarriageControl:NL
200 PRINT "'";
 TextValue:"'"
 CarriageControl:;
210 FOR I = 1 TO N-1
 control: Variable:I -> _
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> _", "NumericValue:1", "BinaryOperatorMinus:-(_,_) -> _"]
220 PRINT "-";
 TextValue:"-"
 CarriageControl:;
230 NEXT I
 Variable:I -> _
240 PRINT "'"
 TextValue:"'"
 CarriageControl:NL
250 FOR X = A TO B STEP S
 control: Variable:X -> _
 start:   ["Variable:A -> _"]
 end:     ["Variable:B -> _"]
 step:    ["Variable:S -> _"]
270 LET Y = FNF(X)
 Variable:Y -> _
 Variable:X -> _
 UserFunction:FNF(_) -> _
 AssignmentOperator:= _ -> _
280 LET Y1 = FNR((Y-C)/H)
 Variable:Y1 -> _
 Variable:Y -> _
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:H -> _
 BinaryOperatorDivide:/(_,_) -> _
 UserFunction:FNR(_) -> _
 AssignmentOperator:= _ -> _
282 LET Y = FNG(X)
 Variable:Y -> _
 Variable:X -> _
 UserFunction:FNG(_) -> _
 AssignmentOperator:= _ -> _
284 LET Y2 = FNR((Y-C)/H)
 Variable:Y2 -> _
 Variable:Y -> _
 Variable:C -> _
 BinaryOperatorMinus:-(_,_) -> _
 Variable:H -> _
 BinaryOperatorDivide:/(_,_) -> _
 UserFunction:FNR(_) -> _
 AssignmentOperator:= _ -> _
290 FOR I = 0 TO N
 control: Variable:I -> _
 start:   ["NumericValue:0"]
 end:     ["Variable:N -> _"]
292 IF I = Y1 THEN 302
 Variable:I -> _
 Variable:Y1 -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:302
294 IF I = Y2 THEN 304
 Variable:I -> _
 Variable:Y2 -> _
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:304
300 PRINT " ";
 TextValue:" "
 CarriageControl:;
301 GOTO 310
 LineNumber:310
302 PRINT "*";
 TextValue:"*"
 CarriageControl:;
303 GOTO 310
 LineNumber:310
304 PRINT "+";
 TextValue:"+"
 CarriageControl:;
310 NEXT I
 Variable:I -> _
315 PRINT "   ";
 TextValue:"   "
 CarriageControl:;
320 PRINT X
 Variable:X -> _
 CarriageControl:NL
330 NEXT X
 Variable:X -> _
340 DATA 1,10.01,0.3
 NumericValue:1
 NumericValue:10.01
 NumericValue:0.3
350 DATA -1,1,50
 NumericValue:1
 UnaryOperatorMinus:-(_) -> =_
 NumericValue:1
 NumericValue:50
360 END
 

