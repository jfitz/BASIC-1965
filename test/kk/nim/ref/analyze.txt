Statistics:

Number of lines: 88
Number of valid statements: 70
Number of comments: 10
Number of executable statements: 69

Complexity:

Comment density: 0.143
Comprehension effort: 226
McCabe complexity: 21
Halstead complexity:
 length: 357
 volume: 1511.576
 difficulty: 40.031
 effort: 60510.278
 language: 0.943
 intelligence: 37.760
 time: 56.028

(0 1) 100 REM THIS PROGRAM PLAYS THREE-PILE NIM, WITH RANDOM NUMBERS
  Origs: 
  Dests: 110
(0 1) 110 REM IN EACH PILE. PLAYER WHO CLEARS BOARD WINS.
  Origs: 100
  Dests: 120
(0 0) 120 
  Origs: 110
  Dests: 130
(0 1) 130 REM INITIALIZE
  Origs: 120
  Dests: 140
(1 3) 140 FOR P = 1 TO 3
  Origs: 130, 350
  Dests: 150
(0 5) 150 LET N(P) = INT(10 * RND(0)) + 6
  Origs: 140
  Dests: 160
(0 1) 160 NEXT P
  Origs: 150
  Dests: 170
(0 2) 170 PRINT "INITIAL CONFIGURATION:"
  Origs: 160
  Dests: 180
(0 2) 180 PRINT
  Origs: 170
  Dests: 190
(0 2) 190 GOSUB 900
  Origs: 180
  Dests: 200, 900
(0 0) 200 
  Origs: 190, 290
  Dests: 210
(0 1) 210 REM OPPONENT'S MOVE
  Origs: 200, 880
  Dests: 220
(0 2) 220 PRINT "PILE, NUMBER TAKEN";
  Origs: 210
  Dests: 230
(2 3) 230 INPUT P, N
  Origs: 220
  Dests: 240
(0 4) 240 LET N(P) = N(P) - N
  Origs: 230
  Dests: 250
(1 4) 250 IF N(P) >= 0 THEN 300
  Origs: 240
  Dests: 260, 300
(0 2) 260 PRINT "ILLEGAL MOVE"
  Origs: 250
  Dests: 270
(0 4) 270 LET N(P) = N(P) + N
  Origs: 260
  Dests: 280
(0 2) 280 PRINT
  Origs: 270
  Dests: 290
(0 3) 290 GOTO 200
  Origs: 280
  Dests: 200
(1 6) 300 IF N(1) + N(2) + N(3) > 0 THEN 370
  Origs: 250
  Dests: 310, 370
(0 2) 310 PRINT
  Origs: 300
  Dests: 320
(0 2) 320 PRINT "YOU WIN *****"
  Origs: 310
  Dests: 330
(0 2) 330 PRINT
  Origs: 320, 840
  Dests: 340
(0 2) 340 PRINT
  Origs: 330
  Dests: 350
(0 3) 350 GOTO 140
  Origs: 340
  Dests: 140
(0 0) 360 
  Origs: 
  Dests: 370
(0 1) 370 REM SET UP BIT-PATTERNS
  Origs: 300, 360
  Dests: 380
(1 3) 380 FOR P = 1 TO 3
  Origs: 370
  Dests: 390
(0 3) 390 LET X = N(P)
  Origs: 380
  Dests: 400
(1 5) 400 FOR J = 4 TO 1 STEP -1
  Origs: 390
  Dests: 410
(0 4) 410 LET Y = INT(X / 2)
  Origs: 400
  Dests: 420
(0 6) 420 LET B(P, J) = X - 2 * Y
  Origs: 410
  Dests: 430
(0 3) 430 LET X = Y
  Origs: 420
  Dests: 440
(0 1) 440 NEXT J
  Origs: 430
  Dests: 450
(0 1) 450 NEXT P
  Origs: 440
  Dests: 460
(0 0) 460 
  Origs: 450
  Dests: 470
(0 1) 470 REM FIND COLUMN PARITIES
  Origs: 460
  Dests: 480
(1 3) 480 FOR J = 1 TO 4
  Origs: 470
  Dests: 490
(0 5) 490 LET S(J) = B(1, J) + B(2, J) + B(3, J)
  Origs: 480
  Dests: 500
(0 7) 500 LET S(J) = S(J) - 2 * INT(S(J) / 2)
  Origs: 490
  Dests: 510
(0 1) 510 NEXT J
  Origs: 500
  Dests: 520
(0 0) 520 
  Origs: 510
  Dests: 530
(0 1) 530 REM IF ALL EVEN, MAKE RANDOM MOVE
  Origs: 520
  Dests: 540
(1 7) 540 IF S(1) + S(2) + S(3) + S(4) > 0 THEN 610
  Origs: 530
  Dests: 550, 610
(1 3) 550 FOR P = 1 TO 3
  Origs: 540
  Dests: 560
(1 4) 560 IF N(P) = 0 THEN 590
  Origs: 550
  Dests: 570, 590
(0 5) 570 LET N = INT(N(P) * RND(0)) + 1
  Origs: 560
  Dests: 580
(0 2) 580 GOTO 770
  Origs: 570
  Dests: 770
(0 1) 590 NEXT P
  Origs: 560
  Dests: 600
(0 0) 600 
  Origs: 590
  Dests: 610
(0 1) 610 REM MAKE OPTIMAL MOVE
  Origs: 540, 600
  Dests: 620
(1 3) 620 FOR J = 1 TO 4
  Origs: 610
  Dests: 630
(1 4) 630 IF S(J) > 0 THEN 650
  Origs: 620
  Dests: 640, 650
(0 1) 640 NEXT J
  Origs: 630
  Dests: 650
(1 3) 650 FOR P = 1 TO 3
  Origs: 630, 640
  Dests: 660
(1 4) 660 IF B(P, J) = 1 THEN 680
  Origs: 650
  Dests: 670, 680
(0 1) 670 NEXT P
  Origs: 660
  Dests: 680
(0 3) 680 LET N = 0
  Origs: 660, 670
  Dests: 690
(1 3) 690 FOR J = J TO 4
  Origs: 680
  Dests: 700
(1 4) 700 IF S(J) = 0 THEN 750
  Origs: 690
  Dests: 710, 750
(1 4) 710 IF B(P, J) = 0 THEN 740
  Origs: 700
  Dests: 720, 740
(0 8) 720 LET N = N + 2 ^ (4 - J)
  Origs: 710
  Dests: 730
(0 2) 730 GOTO 750
  Origs: 720
  Dests: 750
(0 8) 740 LET N = N - 2 ^ (4 - J)
  Origs: 710
  Dests: 750
(0 1) 750 NEXT J
  Origs: 700, 730, 740
  Dests: 760
(0 0) 760 
  Origs: 750
  Dests: 770
(0 1) 770 REM CARRY OUT MOVE
  Origs: 580, 760
  Dests: 780
(0 2) 780 PRINT
  Origs: 770
  Dests: 790
(0 5) 790 PRINT "MY MOVE:" P; "," N
  Origs: 780
  Dests: 800
(0 2) 800 PRINT
  Origs: 790
  Dests: 810
(0 4) 810 LET N(P) = N(P) - N
  Origs: 800
  Dests: 820
(1 6) 820 IF N(1) + N(2) + N(3) > 0 THEN 850
  Origs: 810
  Dests: 830, 850
(0 2) 830 PRINT "I WIN *****"
  Origs: 820
  Dests: 840
(0 3) 840 GOTO 330
  Origs: 830
  Dests: 330
(0 2) 850 PRINT "NEW CONFIGURATION:"
  Origs: 820
  Dests: 860
(0 2) 860 PRINT
  Origs: 850
  Dests: 870
(0 2) 870 GOSUB 900
  Origs: 860
  Dests: 880, 900
(0 3) 880 GOTO 210
  Origs: 870
  Dests: 210
(0 0) 890 
  Origs: 
  Dests: 900
(0 1) 900 REM PRINT CONFIGURATION
  Origs: 190, 870, 890
  Dests: 910
(1 3) 910 FOR P = 1 TO 3
  Origs: 900
  Dests: 920
(0 4) 920 PRINT "PILE " P; N(P)
  Origs: 910
  Dests: 930
(0 1) 930 NEXT P
  Origs: 920
  Dests: 940
(0 2) 940 PRINT
  Origs: 930
  Dests: 950
(0 2) 950 PRINT
  Origs: 940
  Dests: 960
(0 1) 960 RETURN
  Origs: 950
  Dests: 
(0 1) 970 END
  Origs: 
  Dests: 

Unreachable code:

All executable lines are reachable.

