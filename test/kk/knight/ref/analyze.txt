Statistics:

Number of lines: 52
Number of valid statements: 38
Number of comments: 10
Number of executable statements: 36

Complexity:

Comment density: 0.263
Comprehension effort: 139
McCabe complexity: 14
Halstead complexity:
 length: 177
 volume: 733.335
 difficulty: 22.455
 effort: 16466.701
 language: 1.454
 intelligence: 32.659
 time: 15.247

(0 1) 100 REMARK THIS PROGRAM CARRIES OUT A SERIES OF KNIGHT'S MOVES
  Origs: 
  Dests: 110:auto
(0 1) 110 REMARK UNTIL NO FURTHER MOVE IS POSSIBLE. IT THEN PRINTS
  Origs: 100:auto
  Dests: 120:auto
(0 1) 120 REMARK OUT THE FINAL POSITION AND THE LENGTH OF THE SERIES.
  Origs: 110:auto
  Dests: 130:auto
(0 0) 130 
  Origs: 120:auto
  Dests: 140:auto
(0 1) 140 REMARK WE READ IN THE INITIAL PLACEMENT OF THE KNIGHT
  Origs: 130:auto
  Dests: 150:auto
(2 3) 150 READ I0, J0
  Origs: 140:auto
  Dests: 160:auto
(0 4) 160 PRINT "RANK  "; "FILE  "; "LENGTH"
  Origs: 150:auto
  Dests: 180:auto
(0 0) 180 
  Origs: 160:auto
  Dests: 182:auto
(0 3) 182 LET Z0 = 0
  Origs: 180:auto
  Dests: 190:auto
(0 1) 190 REMARK WE ZERO THE BOARD AND INITIALIZE
  Origs: 182:auto
  Dests: 200:auto
(1 3) 200 FOR I = 1 TO 8
  Origs: 190:auto, 620:ifthen
  Dests: 210:auto
(1 3) 210 FOR J = 1 TO 8
  Origs: 200:auto
  Dests: 220:auto
(0 3) 220 LET B(I, J) = 0
  Origs: 210:auto
  Dests: 230:auto
(0 1) 230 NEXT J
  Origs: 220:auto
  Dests: 240:auto
(0 1) 240 NEXT I
  Origs: 230:auto
  Dests: 250:auto
(0 3) 250 LET I = I0
  Origs: 240:auto
  Dests: 260:auto
(0 3) 260 LET J = J0
  Origs: 250:auto
  Dests: 270:auto
(0 3) 270 LET M = 1
  Origs: 260:auto
  Dests: 280:auto
(0 4) 280 LET B(I, J) = -1
  Origs: 270:auto
  Dests: 290:auto
(0 0) 290 
  Origs: 280:auto
  Dests: 300:auto
(0 1) 300 REMARK WE NOW START THE SERIES OF MOVES
  Origs: 290:auto
  Dests: 310:auto
(0 3) 310 LET C1 = 9
  Origs: 300:auto, 460:goto
  Dests: 320:auto
(0 3) 320 LET C = 0
  Origs: 310:auto, 520:goto
  Dests: 330:auto
(1 5) 330 FOR I1 = I - 2 TO I + 2
  Origs: 320:auto
  Dests: 340:auto
(1 4) 340 IF I1 = 1 THEN 480
  Origs: 330:auto
  Dests: 350:auto, 480:ifthen
(1 5) 350 IF ABS(I1 - 4.5) > 4 THEN 480
  Origs: 340:auto
  Dests: 360:auto, 480:ifthen
(0 5) 360 LET D1 = 3 - ABS(I1 - I)
  Origs: 350:auto
  Dests: 370:auto
(1 7) 370 FOR J1 = J - D1 TO J + D1 STEP 2 * D1
  Origs: 360:auto
  Dests: 380:auto
(1 5) 380 IF ABS(J1 - 4.5) > 4 THEN 470
  Origs: 370:auto
  Dests: 390:auto, 470:ifthen
(1 4) 390 IF B(I1, J1) < 0 THEN 470
  Origs: 380:auto
  Dests: 400:auto, 470:ifthen
(0 4) 400 LET C = C + 1
  Origs: 390:auto
  Dests: 410:auto
(1 4) 410 IF C <> C1 THEN 470
  Origs: 400:auto
  Dests: 420:auto, 470:ifthen
(0 3) 420 LET I = I1
  Origs: 410:auto
  Dests: 430:auto
(0 3) 430 LET J = J1
  Origs: 420:auto
  Dests: 440:auto
(0 4) 440 LET B(I, J) = -1
  Origs: 430:auto
  Dests: 450:auto
(0 4) 450 LET M = M + 1
  Origs: 440:auto
  Dests: 460:auto
(0 3) 460 GOTO 310
  Origs: 450:auto
  Dests: 310:goto
(0 1) 470 NEXT J1
  Origs: 380:ifthen, 390:ifthen, 410:ifthen
  Dests: 480:auto
(0 1) 480 NEXT I1
  Origs: 340:ifthen, 350:ifthen, 470:auto
  Dests: 490:auto
(1 4) 490 IF C = 0 THEN 600
  Origs: 480:auto
  Dests: 500:auto, 600:ifthen
(0 1) 500 REMARK NOW WE SELECT A RANDOM INTEGER TO SELECT A MOVE
  Origs: 490:auto
  Dests: 510:auto
(0 4) 510 LET C1 = INT(RND(Z) * C + 1)
  Origs: 500:auto
  Dests: 520:auto
(0 3) 520 GOTO 320
  Origs: 510:auto
  Dests: 320:goto
(0 1) 600 REMARK WE HAVE GONE AS FAR AS WE CAN
  Origs: 490:ifthen
  Dests: 610:auto
(0 4) 610 PRINT I; J; M
  Origs: 600:auto
  Dests: 612:auto
(0 4) 612 LET Z0 = Z0 + 1
  Origs: 610:auto
  Dests: 620:auto
(1 5) 620 IF Z0 < 40 THEN 200
  Origs: 612:auto
  Dests: 200:ifthen, 630:auto
(0 1) 630 REMARK WE GO FOR ANOTHER TRIAL
  Origs: 620:auto
  Dests: 880:auto
(0 0) 880 
  Origs: 630:auto
  Dests: 890:auto
(0 1) 890 REMARK THE DATA FOR THE STARTING POSITION
  Origs: 880:auto
  Dests: 900:auto
(0 2) 900 DATA 1, 1
  Origs: 890:auto
  Dests: 999:auto
(0 1) 999 END
  Origs: 900:auto
  Dests: 

Unreachable code:

All executable lines are reachable.

