10 DIM N(1000)
 NumericConstant:1000
 Declaration:N scalar
11 DIM P(350)
 NumericConstant:350
 Declaration:P scalar
20 FOR I = 1 TO 1000
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:1000"]
21    LET N(I) = 0
 Variable:I numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 AssignmentOperator:=
22 NEXT I
 Variable:I numeric scalar
25 LET P(0) = 2
 NumericConstant:0
 Variable:P numeric scalar
 NumericConstant:2
 AssignmentOperator:=
26 LET K = 0
 Variable:K numeric scalar
 NumericConstant:0
 AssignmentOperator:=
30 FOR P = 3 TO 2000 STEP 2
 control: Variable:P numeric scalar
 start:   ["NumericConstant:3"]
 end:     ["NumericConstant:2000"]
 step:    ["NumericConstant:2"]
35    LET X = (P-1)/2
 Variable:X numeric scalar
 Variable:P numeric scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 NumericConstant:2
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
40    IF N(X) < 0 THEN 90
 Variable:X numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 BinaryOperatorLess:< boolean scalar
50    LET K = K+1
 Variable:K numeric scalar
 Variable:K numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
55    LET P(K) = P
 Variable:K numeric scalar
 Variable:P numeric scalar
 Variable:P numeric scalar
 AssignmentOperator:=
56    IF P > SQR(2000) THEN 90
 Variable:P numeric scalar
 NumericConstant:2000
 FunctionSqr:SQR(_) numeric scalar
 BinaryOperatorGreater:> boolean scalar
60    FOR I = P TO 2000 STEP 2*P
 control: Variable:I numeric scalar
 start:   ["Variable:P numeric scalar"]
 end:     ["NumericConstant:2000"]
 step:    ["NumericConstant:2", "Variable:P numeric scalar", "BinaryOperatorMultiply:* numeric scalar"]
65       LET X = (I-1)/2
 Variable:X numeric scalar
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 NumericConstant:2
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
70       LET N(X) = -1
 Variable:X numeric scalar
 Variable:N numeric scalar
 NumericConstant:1
 UnaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
80    NEXT I
 Variable:I numeric scalar
90 NEXT P
 Variable:P numeric scalar
100 REM READ LEADING DIGITS
 Remark:READ LEADING DIGITS
110 PRINT "SEARCH FOR PRIMES OF THE FORM A*1000 + B, 0 < B < 2000."
 TextConstant:"SEARCH FOR PRIMES OF THE FORM A*1000 + B, 0 < B < 2000."
 CarriageControl:NL
115 PRINT
 CarriageControl:NL
116 PRINT "A = ";
 TextConstant:"A = "
 CarriageControl:;
120 INPUT A
 Variable:A numeric scalar
125 LET S = SQR((A+2)*1E3)
 Variable:S numeric scalar
 Variable:A numeric scalar
 NumericConstant:2
 BinaryOperatorPlus:+ numeric scalar
 NumericConstant:1000
 BinaryOperatorMultiply:* numeric scalar
 FunctionSqr:SQR(_) numeric scalar
 AssignmentOperator:=
130 PRINT
 CarriageControl:NL
140 PRINT "B = "
 TextConstant:"B = "
 CarriageControl:NL
150 PRINT
 CarriageControl:NL
160
200 REM TEST PRIMES TO 2000
 Remark:TEST PRIMES TO 2000
205 FOR I = 1 TO 1000
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:1000"]
206    LET N(I) = 0
 Variable:I numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 AssignmentOperator:=
207 NEXT I
 Variable:I numeric scalar
210 FOR I = 1 TO K
 control: Variable:I numeric scalar
 start:   ["NumericConstant:1"]
 end:     ["Variable:K numeric scalar"]
220    LET F = P(I)
 Variable:F numeric scalar
 Variable:I numeric scalar
 Variable:P numeric scalar
 AssignmentOperator:=
230    GOSUB 800
 LineNumber:800
239    IF Z > 999 THEN 270
 Variable:Z numeric scalar
 NumericConstant:999
 BinaryOperatorGreater:> boolean scalar
240    FOR J = Z TO 999 STEP F
 control: Variable:J numeric scalar
 start:   ["Variable:Z numeric scalar"]
 end:     ["NumericConstant:999"]
 step:    ["Variable:F numeric scalar"]
250       LET N(J) = -1
 Variable:J numeric scalar
 Variable:N numeric scalar
 NumericConstant:1
 UnaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
260    NEXT J
 Variable:J numeric scalar
270 NEXT I
 Variable:I numeric scalar
280
400 REM TEST REMAINING NUMBERS
 Remark:TEST REMAINING NUMBERS
405 LET D = 2
 Variable:D numeric scalar
 NumericConstant:2
 AssignmentOperator:=
410 LET F = 2003
 Variable:F numeric scalar
 NumericConstant:2003
 AssignmentOperator:=
420    GOSUB 800
 LineNumber:800
430    IF Z > 999 THEN 450
 Variable:Z numeric scalar
 NumericConstant:999
 BinaryOperatorGreater:> boolean scalar
440    LET N(Z) = -1
 Variable:Z numeric scalar
 Variable:N numeric scalar
 NumericConstant:1
 UnaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
450 LET F = F+D
 Variable:F numeric scalar
 Variable:F numeric scalar
 Variable:D numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
460 LET D = 6-D
 Variable:D numeric scalar
 NumericConstant:6
 Variable:D numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
470 IF F <= S THEN 420
 Variable:F numeric scalar
 Variable:S numeric scalar
 BinaryOperatorLessEqual:<= boolean scalar
480
700 REM PRINT RESULT
 Remark:PRINT RESULT
702 LET S = 0
 Variable:S numeric scalar
 NumericConstant:0
 AssignmentOperator:=
705 FOR I = 0 TO 999
 control: Variable:I numeric scalar
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:999"]
710    IF N(I) < 0 THEN 730
 Variable:I numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 BinaryOperatorLess:< boolean scalar
720    PRINT 2*I + 1;
 NumericConstant:2
 Variable:I numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 CarriageControl:;
725    LET S = S+1
 Variable:S numeric scalar
 Variable:S numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
730 NEXT I
 Variable:I numeric scalar
732 PRINT
 CarriageControl:NL
733 PRINT
 CarriageControl:NL
735 PRINT "THERE ARE " S; "PRIMES IN THE RANGE."
 TextConstant:"THERE ARE "
 CarriageControl:
 Variable:S numeric scalar
 CarriageControl:;
 TextConstant:"PRIMES IN THE RANGE."
 CarriageControl:NL
740 PRINT
 CarriageControl:NL
745 PRINT
 CarriageControl:NL
750 PRINT "TWIN PRIMES:"
 TextConstant:"TWIN PRIMES:"
 CarriageControl:NL
752 PRINT
 CarriageControl:NL
755 FOR I = 0 TO 998
 control: Variable:I numeric scalar
 start:   ["NumericConstant:0"]
 end:     ["NumericConstant:998"]
760    IF N(I) < 0 THEN 780
 Variable:I numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 BinaryOperatorLess:< boolean scalar
765    IF N(I+1) < 0 THEN 780
 Variable:I numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 Variable:N numeric scalar
 NumericConstant:0
 BinaryOperatorLess:< boolean scalar
770    PRINT 2*I+1, 2*I+3
 NumericConstant:2
 Variable:I numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 CarriageControl:,
 NumericConstant:2
 Variable:I numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 NumericConstant:3
 BinaryOperatorPlus:+ numeric scalar
 CarriageControl:NL
780 NEXT I
 Variable:I numeric scalar
790 STOP
 
795
800 REM TEST FACTOR F
 Remark:TEST FACTOR F
810 LET X = A - F*INT(A/F)
 Variable:X numeric scalar
 Variable:A numeric scalar
 Variable:F numeric scalar
 Variable:A numeric scalar
 Variable:F numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 FunctionInt:INT(_) numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
820 LET Y = A*1E3
 Variable:Y numeric scalar
 Variable:A numeric scalar
 NumericConstant:1000
 BinaryOperatorMultiply:* numeric scalar
 AssignmentOperator:=
830 LET X = F - (Y - F*INT(Y/F))
 Variable:X numeric scalar
 Variable:F numeric scalar
 Variable:Y numeric scalar
 Variable:F numeric scalar
 Variable:Y numeric scalar
 Variable:F numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 FunctionInt:INT(_) numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
840 IF X <> 2*INT(X/2) THEN 860
 Variable:X numeric scalar
 NumericConstant:2
 Variable:X numeric scalar
 NumericConstant:2
 BinaryOperatorDivide:/ numeric scalar
 FunctionInt:INT(_) numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 BinaryOperatorNotEqual:<> boolean scalar
850 LET X = X + F
 Variable:X numeric scalar
 Variable:X numeric scalar
 Variable:F numeric scalar
 BinaryOperatorPlus:+ numeric scalar
 AssignmentOperator:=
860 LET Z = (X-1)/2
 Variable:Z numeric scalar
 Variable:X numeric scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 NumericConstant:2
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
870 RETURN
 
999 END
 

