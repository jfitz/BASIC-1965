Statistics:

Number of lines: 81
Number of valid statements: 72
Number of comments: 5
Number of executable statements: 72

Complexity:

Comment density: 0.069
Comprehension effort: 232
McCabe complexity: 19
Halstead complexity:
 length: 298
 volume: 1278.557
 difficulty: 32.075
 effort: 41010.316
 language: 1.243
 intelligence: 39.861
 time: 37.973

10 (0 2) DIM N(1000)
  Origs: :start
  Dests: 11:auto
11 (0 2) DIM P(350)
  Origs: 10:auto
  Dests: 20:auto
20 F(I:20) (1 3) FOR I = 1 TO 1000
  Origs: 11:auto
  Dests: 21:fornext, 22:fornext
21 F(I:20) (0 3) LET N(I) = 0
  Origs: 20:fornext
  Dests: 22:auto
22 F(I:20) (0 1) NEXT I
  Origs: 20:fornext, 21:auto
  Dests: 25:auto
25 (0 3) LET P(0) = 2
  Origs: 22:auto
  Dests: 26:auto
26 (0 3) LET K = 0
  Origs: 25:auto
  Dests: 30:auto
30 F(P:30) (1 4) FOR P = 3 TO 2000 STEP 2
  Origs: 26:auto
  Dests: 35:fornext, 90:fornext
35 F(P:30) (0 5) LET X = (P - 1) / 2
  Origs: 30:fornext
  Dests: 40:auto
40 F(P:30) (1 4) IF N(X) < 0 THEN 90
  Origs: 35:auto
  Dests: 50:auto, 90:ifthen
50 F(P:30) (0 4) LET K = K + 1
  Origs: 40:auto
  Dests: 55:auto
55 F(P:30) (0 3) LET P(K) = P
  Origs: 50:auto
  Dests: 56:auto
56 F(P:30) (1 5) IF P > SQR(2000) THEN 90
  Origs: 55:auto
  Dests: 60:auto, 90:ifthen
60 F(P:30,I:60) (1 5) FOR I = P TO 2000 STEP 2 * P
  Origs: 56:auto
  Dests: 65:fornext, 80:fornext
65 F(P:30,I:60) (0 5) LET X = (I - 1) / 2
  Origs: 60:fornext
  Dests: 70:auto
70 F(P:30,I:60) (0 4) LET N(X) = -1
  Origs: 65:auto
  Dests: 80:auto
80 F(P:30,I:60) (0 1) NEXT I
  Origs: 60:fornext, 70:auto
  Dests: 90:auto
90 F(P:30) (0 1) NEXT P
  Origs: 30:fornext, 40:ifthen, 56:ifthen, 80:auto
  Dests: 110:auto
100 (0 1) REM READ LEADING DIGITS
  Origs: 
  Dests: 
110 (0 2) PRINT "SEARCH FOR PRIMES OF THE FORM A*1000 + B, 0 < B < 2000."
  Origs: 90:auto
  Dests: 115:auto
115 (0 2) PRINT
  Origs: 110:auto
  Dests: 116:auto
116 (0 2) PRINT "A = ";
  Origs: 115:auto
  Dests: 120:auto
120 (1 2) INPUT A
  Origs: 116:auto
  Dests: 125:auto
125 (0 4) LET S = SQR((A + 2) * 1000)
  Origs: 120:auto
  Dests: 130:auto
130 (0 2) PRINT
  Origs: 125:auto
  Dests: 140:auto
140 (0 2) PRINT "B = "
  Origs: 130:auto
  Dests: 150:auto
150 (0 2) PRINT
  Origs: 140:auto
  Dests: 205:auto
160 (0 0) 
  Origs: 
  Dests: 
200 (0 1) REM TEST PRIMES TO 2000
  Origs: 
  Dests: 
205 F(I:205) (1 3) FOR I = 1 TO 1000
  Origs: 150:auto
  Dests: 206:fornext, 207:fornext
206 F(I:205) (0 3) LET N(I) = 0
  Origs: 205:fornext
  Dests: 207:auto
207 F(I:205) (0 1) NEXT I
  Origs: 205:fornext, 206:auto
  Dests: 210:auto
210 F(I:210) (1 3) FOR I = 1 TO K
  Origs: 207:auto
  Dests: 220:fornext, 270:fornext
220 F(I:210) (0 3) LET F = P(I)
  Origs: 210:fornext
  Dests: 230:auto
230 F(I:210) (0 2) GOSUB 800
  Origs: 220:auto
  Dests: 239:auto, 810:gosub
239 F(I:210) (1 4) IF Z > 999 THEN 270
  Origs: 230:auto
  Dests: 240:auto, 270:ifthen
240 F(I:210,J:240) (1 4) FOR J = Z TO 999 STEP F
  Origs: 239:auto
  Dests: 250:fornext, 260:fornext
250 F(I:210,J:240) (0 4) LET N(J) = -1
  Origs: 240:fornext
  Dests: 260:auto
260 F(I:210,J:240) (0 1) NEXT J
  Origs: 240:fornext, 250:auto
  Dests: 270:auto
270 F(I:210) (0 1) NEXT I
  Origs: 210:fornext, 239:ifthen, 260:auto
  Dests: 405:auto
280 (0 0) 
  Origs: 
  Dests: 
400 (0 1) REM TEST REMAINING NUMBERS
  Origs: 
  Dests: 
405 (0 3) LET D = 2
  Origs: 270:auto
  Dests: 410:auto
410 (0 3) LET F = 2003
  Origs: 405:auto
  Dests: 420:auto
420 (0 2) GOSUB 800
  Origs: 410:auto, 470:ifthen
  Dests: 430:auto, 810:gosub
430 (1 4) IF Z > 999 THEN 450
  Origs: 420:auto
  Dests: 440:auto, 450:ifthen
440 (0 4) LET N(Z) = -1
  Origs: 430:auto
  Dests: 450:auto
450 (0 4) LET F = F + D
  Origs: 430:ifthen, 440:auto
  Dests: 460:auto
460 (0 4) LET D = 6 - D
  Origs: 450:auto
  Dests: 470:auto
470 (1 5) IF F <= S THEN 420
  Origs: 460:auto
  Dests: 420:ifthen, 702:auto
480 (0 0) 
  Origs: 
  Dests: 
700 (0 1) REM PRINT RESULT
  Origs: 
  Dests: 
702 (0 3) LET S = 0
  Origs: 470:auto
  Dests: 705:auto
705 F(I:705) (1 3) FOR I = 0 TO 999
  Origs: 702:auto
  Dests: 710:fornext, 730:fornext
710 F(I:705) (1 4) IF N(I) < 0 THEN 730
  Origs: 705:fornext
  Dests: 720:auto, 730:ifthen
720 F(I:705) (0 4) PRINT 2 * I + 1;
  Origs: 710:auto
  Dests: 725:auto
725 F(I:705) (0 4) LET S = S + 1
  Origs: 720:auto
  Dests: 730:auto
730 F(I:705) (0 1) NEXT I
  Origs: 705:fornext, 710:ifthen, 725:auto
  Dests: 732:auto
732 (0 2) PRINT
  Origs: 730:auto
  Dests: 733:auto
733 (0 2) PRINT
  Origs: 732:auto
  Dests: 735:auto
735 (0 4) PRINT "THERE ARE " S; "PRIMES IN THE RANGE."
  Origs: 733:auto
  Dests: 740:auto
740 (0 2) PRINT
  Origs: 735:auto
  Dests: 745:auto
745 (0 2) PRINT
  Origs: 740:auto
  Dests: 750:auto
750 (0 2) PRINT "TWIN PRIMES:"
  Origs: 745:auto
  Dests: 752:auto
752 (0 2) PRINT
  Origs: 750:auto
  Dests: 755:auto
755 F(I:755) (1 3) FOR I = 0 TO 998
  Origs: 752:auto
  Dests: 760:fornext, 780:fornext
760 F(I:755) (1 4) IF N(I) < 0 THEN 780
  Origs: 755:fornext
  Dests: 765:auto, 780:ifthen
765 F(I:755) (1 4) IF N(I + 1) < 0 THEN 780
  Origs: 760:auto
  Dests: 770:auto, 780:ifthen
770 F(I:755) (0 7) PRINT 2 * I + 1, 2 * I + 3
  Origs: 765:auto
  Dests: 780:auto
780 F(I:755) (0 1) NEXT I
  Origs: 755:fornext, 760:ifthen, 765:ifthen, 770:auto
  Dests: 790:auto
790 (0 1) STOP
  Origs: 780:auto
  Dests: :stop
795 (0 0) 
  Origs: 
  Dests: 
800 (0 1) REM TEST FACTOR F
  Origs: 
  Dests: 
810 G(810) (0 7) LET X = A - F * INT(A / F)
  Origs: 230:gosub, 420:gosub
  Dests: 820:auto
820 G(810) (0 4) LET Y = A * 1000
  Origs: 810:auto
  Dests: 830:auto
830 G(810) (0 9) LET X = F - (Y - F * INT(Y / F))
  Origs: 820:auto
  Dests: 840:auto
840 G(810) (1 7) IF X <> 2 * INT(X / 2) THEN 860
  Origs: 830:auto
  Dests: 850:auto, 860:ifthen
850 G(810) (0 4) LET X = X + F
  Origs: 840:auto
  Dests: 860:auto
860 G(810) (0 5) LET Z = (X - 1) / 2
  Origs: 840:ifthen, 850:auto
  Dests: 870:auto
870 G(810) (0 1) RETURN
  Origs: 860:auto
  Dests: 
999 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

999: END

