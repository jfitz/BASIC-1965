Statistics:

Number of lines: 135
Number of valid statements: 112
Number of comments: 11
Number of executable statements: 104

Complexity:

Comment density: 0.098
Comprehension effort: 357
McCabe complexity: 35
Halstead complexity:
 length: 782
 volume: 3724.020
 difficulty: 48.747
 effort: 181536.176
 language: 1.567
 intelligence: 76.394
 time: 168.089

(0 4) 10 DIM S(4, 100), P(6, 6), M(100)
  Origs: :start
  Dests: 30:auto
FNC(_) (0 6) 20 DEF FNC(X) = X - 7 * INT(X / 7)
  Origs: 
  Dests: 
(0 3) 30 PRINT "NOTE NUMBER", "CHORD",
  Origs: 10:auto
  Dests: 40:auto
(0 2) 40 PRINT " S     A     T     B"
  Origs: 30:auto
  Dests: 50:auto
(0 2) 50 PRINT
  Origs: 40:auto
  Dests: 60:auto
(0 0) 60 
  Origs: 50:auto
  Dests: 100:auto
(0 1) 100 REM  INITIALIZE.
  Origs: 60:auto
  Dests: 105:auto
(0 2) 105 OPTION BASE 1
  Origs: 100:auto
  Dests: 110:auto
(1 2) 110 MAT READ P
  Origs: 105:auto
  Dests: 111:auto
(0 2) 111 DATA 5, 4, 1, 6, 2, 3, 6, 4, 2, 1, 5, 3, 6, 4, 3, 1, 2, 5
  Origs: 110:auto
  Dests: 112:auto
(0 2) 112 DATA 1, 5, 4, 6, 3, 2, 2, 6, 5, 4, 1, 3, 1, 5, 3, 6, 2, 4
  Origs: 111:auto
  Dests: 120:auto
(1 2) 120 READ N9
  Origs: 112:auto
  Dests: 130:auto
(1 2) 130 MAT READ M(N9)
  Origs: 120:auto
  Dests: 140:auto
(0 2) 140 DATA 28
  Origs: 130:auto
  Dests: 150:auto
(0 2) 150 DATA 2, 1, 0, 2, 1, 0, 7, 5, 7, 4, 2, 0, 1
  Origs: 140:auto
  Dests: 160:auto
(0 2) 160 DATA 2, 1, 0, 2, 1, 0, 7, 5, 7, 4, 2, 0, 1, 1, 0
  Origs: 150:auto
  Dests: 170:auto
(0 2) 170 OPTION BASE 0
  Origs: 160:auto
  Dests: 190:auto
(1 3) 190 FOR V = 0 TO 4
  Origs: 170:auto
  Dests: 200:fornext, 210:fornext
(1 2) 200 READ S(V, N9)
  Origs: 190:fornext
  Dests: 210:auto
(0 1) 210 NEXT V
  Origs: 190:fornext, 200:auto
  Dests: 220:auto
(0 5) 220 DATA 1, 0, -3, -5, -7
  Origs: 210:auto
  Dests: 240:auto
(0 3) 240 LET C2 = 1
  Origs: 220:auto
  Dests: 250:auto
(0 0) 250 
  Origs: 240:auto
  Dests: 450:auto
(1 5) 450 FOR N = N9 TO 1 STEP -1
  Origs: 250:auto
  Dests: 460:fornext, 6003:fornext
(1 4) 460 IF N = N9 THEN 6000
  Origs: 450:fornext
  Dests: 500:auto, 6000:ifthen
(0 1) 500 REM  TEST CHORDS.
  Origs: 460:auto
  Dests: 505:auto
(0 3) 505 LET I1 = 1
  Origs: 500:auto
  Dests: 510:auto
(1 3) 510 FOR I = I1 TO 6
  Origs: 505:auto, 5210:goto
  Dests: 520:fornext, 4001:fornext
(0 3) 520 LET C2 = P(C1, I)
  Origs: 510:fornext
  Dests: 525:auto
(0 3) 525 LET S(0, N) = C2
  Origs: 520:auto
  Dests: 530:auto
(0 3) 530 LET S = M(N)
  Origs: 525:auto
  Dests: 540:auto
(0 3) 540 LET S(1, N) = S
  Origs: 530:auto
  Dests: 542:auto
(0 0) 542 
  Origs: 540:auto
  Dests: 545:auto
(0 1) 545 REM  FIX ROOT
  Origs: 542:auto
  Dests: 550:auto
(0 4) 550 LET D(1) = C2 - 8
  Origs: 545:auto
  Dests: 560:auto
(0 4) 560 LET D(2) = C2 - 15
  Origs: 550:auto
  Dests: 565:auto
(0 3) 565 LET D = S(4, N + 1)
  Origs: 560:auto
  Dests: 570:auto
(1 3) 570 FOR J = 1 TO 2
  Origs: 565:auto
  Dests: 580:fornext, 610:fornext
(1 5) 580 IF ABS(D(J) - D) <= 5 THEN 610
  Origs: 570:fornext
  Dests: 590:auto, 610:ifthen
(0 3) 590 LET R = D(3 - J)
  Origs: 580:auto
  Dests: 600:auto
(0 2) 600 GOTO 660
  Origs: 590:auto
  Dests: 660:goto
(0 1) 610 NEXT J
  Origs: 570:fornext, 580:ifthen
  Dests: 620:auto
(1 4) 620 IF S > S(1, N + 1) THEN 650
  Origs: 610:auto
  Dests: 630:auto, 650:ifthen
(0 3) 630 LET R = D(1)
  Origs: 620:auto
  Dests: 640:auto
(0 2) 640 GOTO 660
  Origs: 630:auto
  Dests: 660:goto
(0 3) 650 LET R = D(2)
  Origs: 620:ifthen
  Dests: 660:auto
(0 3) 660 LET S(4, N) = R
  Origs: 600:goto, 640:goto, 650:auto
  Dests: 670:auto
(0 0) 670 
  Origs: 660:auto
  Dests: 700:auto
(0 1) 700 REM  FIND OTHER NOTES
  Origs: 670:auto
  Dests: 705:auto
(0 3) 705 LET J = 1
  Origs: 700:auto
  Dests: 710:auto
(1 4) 710 FOR K = 0 TO 4 STEP 2
  Origs: 705:auto
  Dests: 720:fornext, 750:fornext
(1 6) 720 IF FNC(S - (R + K)) = 0 THEN 750
  Origs: 710:fornext
  Dests: 730:auto, 750:ifthen
(0 4) 730 LET B(J) = R + K
  Origs: 720:auto
  Dests: 740:auto
(0 4) 740 LET J = J + 1
  Origs: 730:auto
  Dests: 750:auto
(0 1) 750 NEXT K
  Origs: 710:fornext, 720:ifthen, 740:auto
  Dests: 760:auto
(1 4) 760 IF J > 3 THEN 4000
  Origs: 750:auto
  Dests: 770:auto, 4000:ifthen
(0 0) 770 
  Origs: 760:auto
  Dests: 800:auto
(1 3) 800 FOR L = 0 TO 6
  Origs: 770:auto
  Dests: 810:fornext, 880:fornext
(0 3) 810 LET A = B(1)
  Origs: 800:fornext
  Dests: 820:auto
(0 3) 820 LET B = B(2)
  Origs: 810:auto
  Dests: 830:auto
(0 3) 830 LET W(0, L) = 0
  Origs: 820:auto
  Dests: 840:auto
(0 3) 840 LET W(2, L) = B
  Origs: 830:auto
  Dests: 850:auto
(0 3) 850 LET W(3, L) = A
  Origs: 840:auto
  Dests: 860:auto
(0 3) 860 LET B(1) = B
  Origs: 850:auto
  Dests: 870:auto
(0 4) 870 LET B(2) = A + 7
  Origs: 860:auto
  Dests: 880:auto
(0 1) 880 NEXT L
  Origs: 800:fornext, 870:auto
  Dests: 899:auto
(0 0) 899 
  Origs: 880:auto
  Dests: 1000:auto
(0 1) 1000 REM  TEST CASES IN W-TABLE
  Origs: 899:auto
  Dests: 1010:auto
(1 3) 1010 FOR L = 0 TO 6
  Origs: 1000:auto
  Dests: 1020:fornext, 1261:fornext
(1 3) 1020 FOR V = 2 TO 3
  Origs: 1010:fornext
  Dests: 1030:fornext, 1090:fornext
(0 3) 1030 LET B = W(V, L)
  Origs: 1020:fornext
  Dests: 1040:auto
(1 5) 1040 IF ABS(B - S(V, N + 1)) > 5 THEN 1260
  Origs: 1030:auto
  Dests: 1050:auto, 1260:ifthen
(1 8) 1050 IF B > 17 - 4 * V THEN 1260
  Origs: 1040:auto
  Dests: 1060:auto, 1260:ifthen
(1 8) 1060 IF B < 5 - 4 * V THEN 1260
  Origs: 1050:auto
  Dests: 1070:auto, 1260:ifthen
(0 3) 1070 LET S(V, N) = B
  Origs: 1060:auto
  Dests: 1080:auto
(1 4) 1080 IF S(2 * V - 3, N) <= S(2 * V - 2, N) THEN 1260
  Origs: 1070:auto
  Dests: 1090:auto, 1260:ifthen
(0 1) 1090 NEXT V
  Origs: 1020:fornext, 1080:auto
  Dests: 1095:auto
(0 0) 1095 
  Origs: 1090:auto
  Dests: 1100:auto
(0 1) 1100 REM  CHECK FOR BAD TRANSITIONS
  Origs: 1095:auto
  Dests: 1102:auto
(1 4) 1102 IF C1 = C2 THEN 1200
  Origs: 1100:auto
  Dests: 1105:auto, 1200:ifthen
(1 3) 1105 FOR V1 = 1 TO 4
  Origs: 1102:auto
  Dests: 1110:fornext, 1165:fornext
(1 4) 1110 FOR V2 = V1 + 1 TO 4
  Origs: 1105:fornext
  Dests: 1115:fornext, 1160:fornext
(0 4) 1115 LET D = S(V1, N + 1) - S(V2, N + 1)
  Origs: 1110:fornext
  Dests: 1120:auto
(1 6) 1120 IF FNC(D) = 0 THEN 1145
  Origs: 1115:auto
  Dests: 1130:auto, 1145:ifthen
(1 6) 1130 IF FNC(D) = 4 THEN 1145
  Origs: 1120:auto
  Dests: 1140:auto, 1145:ifthen
(0 2) 1140 GOTO 1160
  Origs: 1130:auto
  Dests: 1160:goto
(0 4) 1145 LET S1 = S(V1, N) - S(V1, N + 1)
  Origs: 1120:ifthen, 1130:ifthen
  Dests: 1150:auto
(0 4) 1150 LET S2 = S(V2, N) - S(V2, N + 1)
  Origs: 1145:auto
  Dests: 1155:auto
(1 4) 1155 IF S1 = S2 THEN 1260
  Origs: 1150:auto
  Dests: 1160:auto, 1260:ifthen
(0 1) 1160 NEXT V2
  Origs: 1110:fornext, 1140:goto, 1155:auto
  Dests: 1165:auto
(0 1) 1165 NEXT V1
  Origs: 1105:fornext, 1160:auto
  Dests: 1170:auto
(0 0) 1170 
  Origs: 1165:auto
  Dests: 1200:auto
(0 1) 1200 REM COMPUTE DISTANCE
  Origs: 1102:ifthen, 1170:auto
  Dests: 1210:auto
(1 3) 1210 FOR V = 2 TO 3
  Origs: 1200:auto
  Dests: 1220:fornext, 1230:fornext
(0 4) 1220 LET D(V) = ABS(S(V, N) - S(V, N + 1))
  Origs: 1210:fornext
  Dests: 1230:auto
(0 1) 1230 NEXT V
  Origs: 1210:fornext, 1220:auto
  Dests: 1240:auto
(0 4) 1240 LET W(0, L) = D(2) + D(3)
  Origs: 1230:auto
  Dests: 1250:auto
(0 2) 1250 GOTO 1261
  Origs: 1240:auto
  Dests: 1261:goto
(0 3) 1260 LET W(0, L) = 999
  Origs: 1040:ifthen, 1050:ifthen, 1060:ifthen, 1080:ifthen, 1155:ifthen
  Dests: 1261:auto
(0 1) 1261 NEXT L
  Origs: 1010:fornext, 1250:goto, 1260:auto
  Dests: 1262:auto
(0 0) 1262 
  Origs: 1261:auto
  Dests: 1500:auto
(0 1) 1500 REM  SELECT CHORD
  Origs: 1262:auto
  Dests: 1510:auto
(0 3) 1510 LET M = 999
  Origs: 1500:auto
  Dests: 1520:auto
(1 3) 1520 FOR L = 0 TO 6
  Origs: 1510:auto
  Dests: 1530:fornext, 1590:fornext
(0 3) 1530 LET M1 = W(0, L)
  Origs: 1520:fornext
  Dests: 1540:auto
(1 4) 1540 IF M1 > M THEN 1590
  Origs: 1530:auto
  Dests: 1550:auto, 1590:ifthen
(0 3) 1550 LET M = M1
  Origs: 1540:auto
  Dests: 1560:auto
(0 3) 1560 LET L9 = L
  Origs: 1550:auto
  Dests: 1590:auto
(0 1) 1590 NEXT L
  Origs: 1520:fornext, 1540:ifthen, 1560:auto
  Dests: 1600:auto
(1 4) 1600 IF M = 999 THEN 4000
  Origs: 1590:auto
  Dests: 1610:auto, 4000:ifthen
(0 3) 1610 LET S(2, N) = W(2, L9)
  Origs: 1600:auto
  Dests: 1620:auto
(0 3) 1620 LET S(3, N) = W(3, L9)
  Origs: 1610:auto
  Dests: 1630:auto
(0 2) 1630 GOTO 6000
  Origs: 1620:auto
  Dests: 6000:goto
(0 0) 1640 
  Origs: 
  Dests: 
(0 1) 4000 REM  REJECT CHORD
  Origs: 760:ifthen, 1600:ifthen
  Dests: 4001:auto
(0 1) 4001 NEXT I
  Origs: 510:fornext, 4000:auto
  Dests: 5000:auto
(0 1) 5000 REM  BACK UP
  Origs: 4001:auto
  Dests: 5005:auto
(0 4) 5005 LET N = N + 1
  Origs: 5000:auto
  Dests: 5010:auto
(1 4) 5010 IF N <> N9 THEN 5100
  Origs: 5005:auto
  Dests: 5020:auto, 5100:ifthen
(0 2) 5020 PRINT "STUCK"
  Origs: 5010:auto
  Dests: 5030:auto
(0 1) 5030 STOP
  Origs: 5020:auto
  Dests: :stop
(0 3) 5100 LET C2 = S(0, N)
  Origs: 5010:ifthen
  Dests: 5110:auto
(0 3) 5110 LET C1 = S(0, N + 1)
  Origs: 5100:auto
  Dests: 5120:auto
(1 3) 5120 FOR I = 1 TO 6
  Origs: 5110:auto
  Dests: 5130:fornext, 5140:fornext
(1 4) 5130 IF C2 = P(C1, I) THEN 5200
  Origs: 5120:fornext
  Dests: 5140:auto, 5200:ifthen
(0 1) 5140 NEXT I
  Origs: 5120:fornext, 5130:auto
  Dests: 5200:auto
(0 4) 5200 LET I1 = I + 1
  Origs: 5130:ifthen, 5140:auto
  Dests: 5210:auto
(0 3) 5210 GOTO 510
  Origs: 5200:auto
  Dests: 510:goto
(0 0) 5220 
  Origs: 
  Dests: 
(0 1) 6000 REM  PRINT RESULTS
  Origs: 460:ifthen, 1630:goto
  Dests: 6001:auto
(0 7) 6001 PRINT N, S(0, N), S(1, N); S(2, N); S(3, N); S(4, N)
  Origs: 6000:auto
  Dests: 6002:auto
(0 3) 6002 LET C1 = C2
  Origs: 6001:auto
  Dests: 6003:auto
(0 1) 6003 NEXT N
  Origs: 450:fornext, 6002:auto
  Dests: 6004:auto
(0 0) 6004 
  Origs: 6003:auto
  Dests: 9999:auto
(0 1) 9999 END
  Origs: 6004:auto
  Dests: :stop

Unreachable code:

All executable lines are reachable.

