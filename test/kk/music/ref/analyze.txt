Statistics:

Number of lines: 135
Number of valid statements: 112
Number of comments: 11
Number of executable statements: 104

Complexity:

Comment density: 0.098
Comprehension effort: 357
McCabe complexity: 35
Halstead complexity:
 length: 782
 volume: 3724.020
 difficulty: 48.747
 effort: 181536.176
 language: 1.567
 intelligence: 76.394
 time: 168.089

(0 4) 10 DIM S(4, 100), P(6, 6), M(100)
  Origs: 
  Dests: 20
(0 6) 20 DEF FNC(X) = X - 7 * INT(X / 7)
  Origs: 10
  Dests: 30
(0 3) 30 PRINT "NOTE NUMBER", "CHORD",
  Origs: 20
  Dests: 40
(0 2) 40 PRINT " S     A     T     B"
  Origs: 30
  Dests: 50
(0 2) 50 PRINT
  Origs: 40
  Dests: 60
(0 0) 60 
  Origs: 50
  Dests: 100
(0 1) 100 REM  INITIALIZE.
  Origs: 60
  Dests: 105
(0 2) 105 OPTION BASE 1
  Origs: 100
  Dests: 110
(1 2) 110 MAT READ P
  Origs: 105
  Dests: 111
(0 2) 111 DATA 5, 4, 1, 6, 2, 3, 6, 4, 2, 1, 5, 3, 6, 4, 3, 1, 2, 5
  Origs: 110
  Dests: 112
(0 2) 112 DATA 1, 5, 4, 6, 3, 2, 2, 6, 5, 4, 1, 3, 1, 5, 3, 6, 2, 4
  Origs: 111
  Dests: 120
(1 2) 120 READ N9
  Origs: 112
  Dests: 130
(1 2) 130 MAT READ M(N9)
  Origs: 120
  Dests: 140
(0 2) 140 DATA 28
  Origs: 130
  Dests: 150
(0 2) 150 DATA 2, 1, 0, 2, 1, 0, 7, 5, 7, 4, 2, 0, 1
  Origs: 140
  Dests: 160
(0 2) 160 DATA 2, 1, 0, 2, 1, 0, 7, 5, 7, 4, 2, 0, 1, 1, 0
  Origs: 150
  Dests: 170
(0 2) 170 OPTION BASE 0
  Origs: 160
  Dests: 190
(1 3) 190 FOR V = 0 TO 4
  Origs: 170
  Dests: 200
(1 2) 200 READ S(V, N9)
  Origs: 190
  Dests: 210
(0 1) 210 NEXT V
  Origs: 200
  Dests: 220
(0 5) 220 DATA 1, 0, -3, -5, -7
  Origs: 210
  Dests: 240
(0 3) 240 LET C2 = 1
  Origs: 220
  Dests: 250
(0 0) 250 
  Origs: 240
  Dests: 450
(1 5) 450 FOR N = N9 TO 1 STEP -1
  Origs: 250
  Dests: 460
(1 4) 460 IF N = N9 THEN 6000
  Origs: 450
  Dests: 500, 6000
(0 1) 500 REM  TEST CHORDS.
  Origs: 460
  Dests: 505
(0 3) 505 LET I1 = 1
  Origs: 500
  Dests: 510
(1 3) 510 FOR I = I1 TO 6
  Origs: 505, 5210
  Dests: 520
(0 3) 520 LET C2 = P(C1, I)
  Origs: 510
  Dests: 525
(0 3) 525 LET S(0, N) = C2
  Origs: 520
  Dests: 530
(0 3) 530 LET S = M(N)
  Origs: 525
  Dests: 540
(0 3) 540 LET S(1, N) = S
  Origs: 530
  Dests: 542
(0 0) 542 
  Origs: 540
  Dests: 545
(0 1) 545 REM  FIX ROOT
  Origs: 542
  Dests: 550
(0 4) 550 LET D(1) = C2 - 8
  Origs: 545
  Dests: 560
(0 4) 560 LET D(2) = C2 - 15
  Origs: 550
  Dests: 565
(0 3) 565 LET D = S(4, N + 1)
  Origs: 560
  Dests: 570
(1 3) 570 FOR J = 1 TO 2
  Origs: 565
  Dests: 580
(1 5) 580 IF ABS(D(J) - D) <= 5 THEN 610
  Origs: 570
  Dests: 590, 610
(0 3) 590 LET R = D(3 - J)
  Origs: 580
  Dests: 600
(0 2) 600 GOTO 660
  Origs: 590
  Dests: 660
(0 1) 610 NEXT J
  Origs: 580
  Dests: 620
(1 4) 620 IF S > S(1, N + 1) THEN 650
  Origs: 610
  Dests: 630, 650
(0 3) 630 LET R = D(1)
  Origs: 620
  Dests: 640
(0 2) 640 GOTO 660
  Origs: 630
  Dests: 660
(0 3) 650 LET R = D(2)
  Origs: 620
  Dests: 660
(0 3) 660 LET S(4, N) = R
  Origs: 600, 640, 650
  Dests: 670
(0 0) 670 
  Origs: 660
  Dests: 700
(0 1) 700 REM  FIND OTHER NOTES
  Origs: 670
  Dests: 705
(0 3) 705 LET J = 1
  Origs: 700
  Dests: 710
(1 4) 710 FOR K = 0 TO 4 STEP 2
  Origs: 705
  Dests: 720
(1 6) 720 IF FNC(S - (R + K)) = 0 THEN 750
  Origs: 710
  Dests: 730, 750
(0 4) 730 LET B(J) = R + K
  Origs: 720
  Dests: 740
(0 4) 740 LET J = J + 1
  Origs: 730
  Dests: 750
(0 1) 750 NEXT K
  Origs: 720, 740
  Dests: 760
(1 4) 760 IF J > 3 THEN 4000
  Origs: 750
  Dests: 770, 4000
(0 0) 770 
  Origs: 760
  Dests: 800
(1 3) 800 FOR L = 0 TO 6
  Origs: 770
  Dests: 810
(0 3) 810 LET A = B(1)
  Origs: 800
  Dests: 820
(0 3) 820 LET B = B(2)
  Origs: 810
  Dests: 830
(0 3) 830 LET W(0, L) = 0
  Origs: 820
  Dests: 840
(0 3) 840 LET W(2, L) = B
  Origs: 830
  Dests: 850
(0 3) 850 LET W(3, L) = A
  Origs: 840
  Dests: 860
(0 3) 860 LET B(1) = B
  Origs: 850
  Dests: 870
(0 4) 870 LET B(2) = A + 7
  Origs: 860
  Dests: 880
(0 1) 880 NEXT L
  Origs: 870
  Dests: 899
(0 0) 899 
  Origs: 880
  Dests: 1000
(0 1) 1000 REM  TEST CASES IN W-TABLE
  Origs: 899
  Dests: 1010
(1 3) 1010 FOR L = 0 TO 6
  Origs: 1000
  Dests: 1020
(1 3) 1020 FOR V = 2 TO 3
  Origs: 1010
  Dests: 1030
(0 3) 1030 LET B = W(V, L)
  Origs: 1020
  Dests: 1040
(1 5) 1040 IF ABS(B - S(V, N + 1)) > 5 THEN 1260
  Origs: 1030
  Dests: 1050, 1260
(1 8) 1050 IF B > 17 - 4 * V THEN 1260
  Origs: 1040
  Dests: 1060, 1260
(1 8) 1060 IF B < 5 - 4 * V THEN 1260
  Origs: 1050
  Dests: 1070, 1260
(0 3) 1070 LET S(V, N) = B
  Origs: 1060
  Dests: 1080
(1 4) 1080 IF S(2 * V - 3, N) <= S(2 * V - 2, N) THEN 1260
  Origs: 1070
  Dests: 1090, 1260
(0 1) 1090 NEXT V
  Origs: 1080
  Dests: 1095
(0 0) 1095 
  Origs: 1090
  Dests: 1100
(0 1) 1100 REM  CHECK FOR BAD TRANSITIONS
  Origs: 1095
  Dests: 1102
(1 4) 1102 IF C1 = C2 THEN 1200
  Origs: 1100
  Dests: 1105, 1200
(1 3) 1105 FOR V1 = 1 TO 4
  Origs: 1102
  Dests: 1110
(1 4) 1110 FOR V2 = V1 + 1 TO 4
  Origs: 1105
  Dests: 1115
(0 4) 1115 LET D = S(V1, N + 1) - S(V2, N + 1)
  Origs: 1110
  Dests: 1120
(1 6) 1120 IF FNC(D) = 0 THEN 1145
  Origs: 1115
  Dests: 1130, 1145
(1 6) 1130 IF FNC(D) = 4 THEN 1145
  Origs: 1120
  Dests: 1140, 1145
(0 2) 1140 GOTO 1160
  Origs: 1130
  Dests: 1160
(0 4) 1145 LET S1 = S(V1, N) - S(V1, N + 1)
  Origs: 1120, 1130
  Dests: 1150
(0 4) 1150 LET S2 = S(V2, N) - S(V2, N + 1)
  Origs: 1145
  Dests: 1155
(1 4) 1155 IF S1 = S2 THEN 1260
  Origs: 1150
  Dests: 1160, 1260
(0 1) 1160 NEXT V2
  Origs: 1140, 1155
  Dests: 1165
(0 1) 1165 NEXT V1
  Origs: 1160
  Dests: 1170
(0 0) 1170 
  Origs: 1165
  Dests: 1200
(0 1) 1200 REM COMPUTE DISTANCE
  Origs: 1102, 1170
  Dests: 1210
(1 3) 1210 FOR V = 2 TO 3
  Origs: 1200
  Dests: 1220
(0 4) 1220 LET D(V) = ABS(S(V, N) - S(V, N + 1))
  Origs: 1210
  Dests: 1230
(0 1) 1230 NEXT V
  Origs: 1220
  Dests: 1240
(0 4) 1240 LET W(0, L) = D(2) + D(3)
  Origs: 1230
  Dests: 1250
(0 2) 1250 GOTO 1261
  Origs: 1240
  Dests: 1261
(0 3) 1260 LET W(0, L) = 999
  Origs: 1040, 1050, 1060, 1080, 1155
  Dests: 1261
(0 1) 1261 NEXT L
  Origs: 1250, 1260
  Dests: 1262
(0 0) 1262 
  Origs: 1261
  Dests: 1500
(0 1) 1500 REM  SELECT CHORD
  Origs: 1262
  Dests: 1510
(0 3) 1510 LET M = 999
  Origs: 1500
  Dests: 1520
(1 3) 1520 FOR L = 0 TO 6
  Origs: 1510
  Dests: 1530
(0 3) 1530 LET M1 = W(0, L)
  Origs: 1520
  Dests: 1540
(1 4) 1540 IF M1 > M THEN 1590
  Origs: 1530
  Dests: 1550, 1590
(0 3) 1550 LET M = M1
  Origs: 1540
  Dests: 1560
(0 3) 1560 LET L9 = L
  Origs: 1550
  Dests: 1590
(0 1) 1590 NEXT L
  Origs: 1540, 1560
  Dests: 1600
(1 4) 1600 IF M = 999 THEN 4000
  Origs: 1590
  Dests: 1610, 4000
(0 3) 1610 LET S(2, N) = W(2, L9)
  Origs: 1600
  Dests: 1620
(0 3) 1620 LET S(3, N) = W(3, L9)
  Origs: 1610
  Dests: 1630
(0 2) 1630 GOTO 6000
  Origs: 1620
  Dests: 6000
(0 0) 1640 
  Origs: 
  Dests: 4000
(0 1) 4000 REM  REJECT CHORD
  Origs: 760, 1600, 1640
  Dests: 4001
(0 1) 4001 NEXT I
  Origs: 4000
  Dests: 5000
(0 1) 5000 REM  BACK UP
  Origs: 4001
  Dests: 5005
(0 4) 5005 LET N = N + 1
  Origs: 5000
  Dests: 5010
(1 4) 5010 IF N <> N9 THEN 5100
  Origs: 5005
  Dests: 5020, 5100
(0 2) 5020 PRINT "STUCK"
  Origs: 5010
  Dests: 5030
(0 1) 5030 STOP
  Origs: 5020
  Dests: 
(0 3) 5100 LET C2 = S(0, N)
  Origs: 5010
  Dests: 5110
(0 3) 5110 LET C1 = S(0, N + 1)
  Origs: 5100
  Dests: 5120
(1 3) 5120 FOR I = 1 TO 6
  Origs: 5110
  Dests: 5130
(1 4) 5130 IF C2 = P(C1, I) THEN 5200
  Origs: 5120
  Dests: 5140, 5200
(0 1) 5140 NEXT I
  Origs: 5130
  Dests: 5200
(0 4) 5200 LET I1 = I + 1
  Origs: 5130, 5140
  Dests: 5210
(0 3) 5210 GOTO 510
  Origs: 5200
  Dests: 510
(0 0) 5220 
  Origs: 
  Dests: 6000
(0 1) 6000 REM  PRINT RESULTS
  Origs: 460, 1630, 5220
  Dests: 6001
(0 7) 6001 PRINT N, S(0, N), S(1, N); S(2, N); S(3, N); S(4, N)
  Origs: 6000
  Dests: 6002
(0 3) 6002 LET C1 = C2
  Origs: 6001
  Dests: 6003
(0 1) 6003 NEXT N
  Origs: 6002
  Dests: 6004
(0 0) 6004 
  Origs: 6003
  Dests: 9999
(0 1) 9999 END
  Origs: 6004
  Dests: 

Unreachable code:

All executable lines are reachable.

