110 READ M,N
 Variable:M -> _
 Variable:N -> _
120 FOR I = 1 TO M
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _"]
130    LET S = 0
 Variable:S -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
140    FOR J = 1 TO N
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
150       READ O(I,J)
 Variable:I -> _
 Variable:J -> _
 Variable:O(_,_) -> _
160       LET S = S + O(I,J)
 Variable:S -> _
 Variable:S -> _
 Variable:I -> _
 Variable:J -> _
 Variable:O(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
170    NEXT J
 Variable:J -> _
180    LET R(I) = S
 Variable:I -> _
 Variable:R(_) -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
190 NEXT I
 Variable:I -> _
200
210 LET S1 = 0
 Variable:S1 -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
220 FOR J = 1 TO N
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
230    LET S = 0
 Variable:S -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
240    FOR I = 1 TO M
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _"]
250       LET S = S + O(I,J)
 Variable:S -> _
 Variable:S -> _
 Variable:I -> _
 Variable:J -> _
 Variable:O(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
260    NEXT I
 Variable:I -> _
270    LET C(J) = S
 Variable:J -> _
 Variable:C(_) -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
280    LET S1 = S1 + S
 Variable:S1 -> _
 Variable:S1 -> _
 Variable:S -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
290 NEXT J
 Variable:J -> _
300
310 PRINT
 CarriageControl:NL
320 LET C = 0
 Variable:C -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
330 FOR I = 1 TO M
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _"]
340    FOR J = 1 TO N
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
350       LET E = R(I)*C(J)/S1
 Variable:E -> _
 Variable:I -> _
 Variable:R(_) -> _
 Variable:J -> _
 Variable:C(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:S1 -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
360       LET C = C + (O(I,J) - E)^2/E
 Variable:C -> _
 Variable:C -> _
 Variable:I -> _
 Variable:J -> _
 Variable:O(_,_) -> _
 Variable:E -> _
 BinaryOperatorMinus:-(_,_) -> _
 NumericConstant:2
 BinaryOperatorPower:^(_,_) -> _
 Variable:E -> _
 BinaryOperatorDivide:/(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
370       PRINT O(I,J),
 Variable:I -> _
 Variable:J -> _
 Variable:O(_,_) -> _
 CarriageControl:,
380    NEXT J
 Variable:J -> _
390    PRINT
 CarriageControl:NL
400 NEXT I
 Variable:I -> _
410 PRINT
 CarriageControl:NL
420 PRINT "CHI-SQUARE EQUALS";C;"ON";(M-1)*(N-1);"DEGREES OF FREEDOM"
 TextConstant:"CHI-SQUARE EQUALS"
 CarriageControl:;
 Variable:C -> _
 CarriageControl:;
 TextConstant:"ON"
 CarriageControl:;
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 Variable:N -> _
 NumericConstant:1
 BinaryOperatorMinus:-(_,_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 CarriageControl:;
 TextConstant:"DEGREES OF FREEDOM"
 CarriageControl:NL
430
900 DATA 3,2
 NumericConstant:3
 NumericConstant:2
910 DATA 17,42,50,50,114,61
 NumericConstant:17
 NumericConstant:42
 NumericConstant:50
 NumericConstant:50
 NumericConstant:114
 NumericConstant:61
999 END
 

