100 PRINT "NUMBER TO BE FACTORED:";
 TextValue:"NUMBER TO BE FACTORED:"
 CarriageControl:;
110 INPUT N
 Variable:N -> .
120 PRINT
 CarriageControl:NL
130 IF N = 0 THEN 999
 Variable:N -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:999
140 IF N = 2 THEN 250
 Variable:N -> .
 NumericValue:2
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:250
150 LET Z = 0
 Variable:Z -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
160
170 LET F = 2
 Variable:F -> .
 NumericValue:2
 AssignmentOperator:= =. -> .
180 GOSUB 300
 LineNumber:300
190 FOR F = 3 TO SQR(N)+1 STEP 2
 control: Variable:F -> .
 start:   ["NumericValue:3"]
 end:     ["Variable:N -> .", "FunctionSqr:SQR(.) -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 step:    ["NumericValue:2"]
200 GOSUB 300
 LineNumber:300
210 NEXT F
 Variable:F -> .
220 IF Z = 0 THEN 250
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:250
230 PRINT N;
 Variable:N -> .
 CarriageControl:;
240 GOTO 500
 LineNumber:500
250 PRINT N; "IS PRIME."
 Variable:N -> .
 CarriageControl:;
 TextValue:"IS PRIME."
 CarriageControl:NL
260 GOTO 500
 LineNumber:500
270 
300 REM TESTS F AS A FACTOR
 Remark:TESTS F AS A FACTOR
310 IF N/F <> INT(N/F) THEN 410
 WARNING: Inconsistent GOSUB origins
 Variable:N -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:N -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 FunctionInt:INT(.) -> .
 BinaryOperatorNotEqual:<>(.,.) -> ?
 LineNumber:410
330 IF Z > 0 THEN 370
 Variable:Z -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:370
340 PRINT N; "HAS THE FACTORS:"
 Variable:N -> .
 CarriageControl:;
 TextValue:"HAS THE FACTORS:"
 CarriageControl:NL
350 PRINT "     ";
 TextValue:"     "
 CarriageControl:;
360 LET Z = 1
 Variable:Z -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
370 PRINT F;
 Variable:F -> .
 CarriageControl:;
380 LET N = N/F
 Variable:N -> .
 Variable:N -> .
 Variable:F -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
390 IF N = 1 THEN 500
 Variable:N -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:500
400 GOTO 310
 LineNumber:310
410 RETURN
 
420
500 REM ALL DONE
 Remark:ALL DONE
510 PRINT
 CarriageControl:NL
520 PRINT
 CarriageControl:NL
530 PRINT
 CarriageControl:NL
540 GOTO 100
 WARNING: Branch to line before GOSUB start
 LineNumber:100
999 END
 WARNING: Terminating statement in GOSUB
 

