70   REM THIS IS PROGRAM TIC-2
 Remark:THIS IS PROGRAM TIC-2
80
90   REM INITIALIZER
 Remark:INITIALIZER
100  FOR P = 1 TO 8
 control: Variable:P -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
110     FOR I = 1 TO 3
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:3"]
120        READ T(P,I)
 Variable:P -> _
 Variable:I -> _
 Variable:T(_,_) -> _
130     NEXT I
 Variable:I -> _
140  NEXT P
 Variable:P -> _
150  DATA 1,2,3,8,9,4,7,6,5,1,8,7,2,9,6,3,4,5,1,9,5,7,9,3
 WARNING: Line exceeds PRETTY width limit 72
 NumericConstant:1
 NumericConstant:2
 NumericConstant:3
 NumericConstant:8
 NumericConstant:9
 NumericConstant:4
 NumericConstant:7
 NumericConstant:6
 NumericConstant:5
 NumericConstant:1
 NumericConstant:8
 NumericConstant:7
 NumericConstant:2
 NumericConstant:9
 NumericConstant:6
 NumericConstant:3
 NumericConstant:4
 NumericConstant:5
 NumericConstant:1
 NumericConstant:9
 NumericConstant:5
 NumericConstant:7
 NumericConstant:9
 NumericConstant:3
200  FOR S = 1 TO 9
 control: Variable:S -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:9"]
210     FOR J = 1 TO 4
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:4"]
220        READ U(S,J)
 Variable:S -> _
 Variable:J -> _
 Variable:U(_,_) -> _
230     NEXT J
 Variable:J -> _
240  NEXT S
 Variable:S -> _
250  DATA 1,4,7,0,1,5,0,0,1,6,8,0,2,6,0,0,3,6,7,0
 NumericConstant:1
 NumericConstant:4
 NumericConstant:7
 NumericConstant:0
 NumericConstant:1
 NumericConstant:5
 NumericConstant:0
 NumericConstant:0
 NumericConstant:1
 NumericConstant:6
 NumericConstant:8
 NumericConstant:0
 NumericConstant:2
 NumericConstant:6
 NumericConstant:0
 NumericConstant:0
 NumericConstant:3
 NumericConstant:6
 NumericConstant:7
 NumericConstant:0
260  DATA 3,5,0,0,3,4,8,0,2,4,0,0,2,5,7,8
 NumericConstant:3
 NumericConstant:5
 NumericConstant:0
 NumericConstant:0
 NumericConstant:3
 NumericConstant:4
 NumericConstant:8
 NumericConstant:0
 NumericConstant:2
 NumericConstant:4
 NumericConstant:0
 NumericConstant:0
 NumericConstant:2
 NumericConstant:5
 NumericConstant:7
 NumericConstant:8
265  LET N = 0
 Variable:N -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
270  FOR S = 1 TO 9
 control: Variable:S -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:9"]
275     LET C(S) = 0
 Variable:S -> _
 Variable:C(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
280     LET B(S) = 0
 Variable:S -> _
 Variable:B(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
285  NEXT S
 Variable:S -> _
290
300  REM WHO STARTS?
 Remark:WHO STARTS?
310  IF RND(Z) < 1/2 THEN 350
 Variable:Z -> _
 FunctionRnd:RND(_) -> _
 NumericConstant:1
 NumericConstant:2
 BinaryOperatorDivide:/(_,_) -> =_
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:350
320  PRINT "YOU WILL MOVE FIRST."
 TextConstant:"YOU WILL MOVE FIRST."
 CarriageControl:NL
330  PRINT
 CarriageControl:NL
340  GOTO 400
 LineNumber:400
350  PRINT "THE COMPUTER WILL MOVE FIRST."
 TextConstant:"THE COMPUTER WILL MOVE FIRST."
 CarriageControl:NL
360  PRINT
 CarriageControl:NL
370  GOTO 600
 LineNumber:600
380
390  REM PLAYER'S MOVE.
 Remark:PLAYER'S MOVE.
400  PRINT "YOUR MOVE";
 TextConstant:"YOUR MOVE"
 CarriageControl:;
410  INPUT M
 Variable:M -> _
415  LET F = -1
 Variable:F -> _
 NumericConstant:1
 UnaryOperatorMinus:-(_) -> =_
 AssignmentOperator:= =_ -> _
420  IF M <> INT(M) THEN 550
 Variable:M -> _
 Variable:M -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:550
430  IF M < 1 THEN 500
 Variable:M -> _
 NumericConstant:1
 BinaryOperatorLess:<(_,_) -> ?
 LineNumber:500
440  IF M > 9 THEN 550
 Variable:M -> _
 NumericConstant:9
 BinaryOperatorGreater:>(_,_) -> ?
 LineNumber:550
450  IF B(M) <> 0 THEN 500
 Variable:M -> _
 Variable:B(_) -> _
 NumericConstant:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:500
460  LET B(M) = F
 Variable:M -> _
 Variable:B(_) -> _
 Variable:F -> _
 AssignmentOperator:= _ -> _
470  FOR J = 1 TO 4
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:4"]
480     LET P = U(M,J)
 Variable:P -> _
 Variable:M -> _
 Variable:J -> _
 Variable:U(_,_) -> _
 AssignmentOperator:= _ -> _
490     IF P = 0 THEN 530
 Variable:P -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:530
500     LET C(P) = C(P) + F
 Variable:P -> _
 Variable:C(_) -> _
 Variable:P -> _
 Variable:C(_) -> _
 Variable:F -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
510     IF C(P) = -3 THEN 860
 Variable:P -> _
 Variable:C(_) -> _
 NumericConstant:3
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:860
520     IF C(P) = 3 THEN 800
 Variable:P -> _
 Variable:C(_) -> _
 NumericConstant:3
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:800
530  NEXT J
 Variable:J -> _
535  LET N = N+1
 Variable:N -> _
 Variable:N -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
536  IF N = 9 THEN 880
 Variable:N -> _
 NumericConstant:9
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:880
537  IF F = 1 THEN 400
 Variable:F -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:400
538  GOTO 600
 LineNumber:600
540  GOTO 600
 LineNumber:600
550  PRINT "ILLEGAL MOVE. TRY AGAIN."
 TextConstant:"ILLEGAL MOVE. TRY AGAIN."
 CarriageControl:NL
560  GOTO 400
 LineNumber:400
595
600  REM MACHINE'S MOVE
 Remark:MACHINE'S MOVE
610  GOSUB 1000
 LineNumber:1000
620  PRINT "THE COMPUTER MOVES" M
 TextConstant:"THE COMPUTER MOVES"
 CarriageControl:
 Variable:M -> _
 CarriageControl:NL
630  LET F = 1
 Variable:F -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
640  GOTO 460
 LineNumber:460
800  REM THE GAME IS OVER
 Remark:THE GAME IS OVER
810  PRINT "AND THE COMPUTER WINS."
 TextConstant:"AND THE COMPUTER WINS."
 CarriageControl:NL
820  PRINT
 CarriageControl:NL
830  PRINT
 CarriageControl:NL
840  PRINT "NEW GAME."
 TextConstant:"NEW GAME."
 CarriageControl:NL
850  GO TO 265
 LineNumber:265
860  PRINT "CONGRATULATIONS, YOU BEAT THE COMPUTER."
 TextConstant:"CONGRATULATIONS, YOU BEAT THE COMPUTER."
 CarriageControl:NL
870  GOTO 820
 LineNumber:820
880  PRINT "THE GAME IS A DRAW."
 TextConstant:"THE GAME IS A DRAW."
 CarriageControl:NL
890  GOTO 820
 LineNumber:820
895
1000 REM SELECT A MOVE
 Remark:SELECT A MOVE
1010 FOR P = 1 TO 8
 control: Variable:P -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
1020 IF C(P) = 2 THEN 1100
 Variable:P -> _
 Variable:C(_) -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1100
1030 NEXT P
 Variable:P -> _
1040 FOR P = 1 TO 8
 control: Variable:P -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:8"]
1050 IF C(P) = -2 THEN 1100
 Variable:P -> _
 Variable:C(_) -> _
 NumericConstant:2
 UnaryOperatorMinus:-(_) -> =_
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1100
1060 NEXT P
 Variable:P -> _
1070 GOTO 1200
 LineNumber:1200
1100 FOR I = 1 TO 3
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:3"]
1110    LET M = T(P,I)
 Variable:M -> _
 Variable:P -> _
 Variable:I -> _
 Variable:T(_,_) -> _
 AssignmentOperator:= _ -> _
1120    IF B(M) = 0 THEN 1999
 Variable:M -> _
 Variable:B(_) -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1999
1130 NEXT I
 Variable:I -> _
1140
1200 FOR S = 1 TO 9
 control: Variable:S -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:9"]
1210    LET V(S) = 0
 Variable:S -> _
 Variable:V(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1215    IF B(S) <> 0 THEN 1270
 Variable:S -> _
 Variable:B(_) -> _
 NumericConstant:0
 BinaryOperatorNotEqual:<>(_,_) -> ?
 LineNumber:1270
1220    FOR J = 1 TO 4
 WARNING: FOR/NEXT nesting exceeds limit 3
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:4"]
1230       LET P = U(S,J)
 Variable:P -> _
 Variable:S -> _
 Variable:J -> _
 Variable:U(_,_) -> _
 AssignmentOperator:= _ -> _
1240       IF P = 0 THEN 1260
 Variable:P -> _
 NumericConstant:0
 BinaryOperatorEqual:=(_,_) -> ?
 LineNumber:1260
1250       LET V(S) = V(S) + 1 + ABS(C(P))
 Variable:S -> _
 Variable:V(_) -> _
 Variable:S -> _
 Variable:V(_) -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 Variable:P -> _
 Variable:C(_) -> _
 FunctionAbs:ABS(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
1260    NEXT J
 Variable:J -> _
1270 NEXT S
 Variable:S -> _
1300 LET V = 0
 Variable:V -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
1310 FOR S = 1 TO 9
 control: Variable:S -> _
 start:   ["NumericConstant:1"]
 end:     ["NumericConstant:9"]
1320    IF V(S) <= V THEN 1350
 Variable:S -> _
 Variable:V(_) -> _
 Variable:V -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
 LineNumber:1350
1330    LET V = V(S)
 Variable:V -> _
 Variable:S -> _
 Variable:V(_) -> _
 AssignmentOperator:= _ -> _
1340    LET M = S
 Variable:M -> _
 Variable:S -> _
 AssignmentOperator:= _ -> _
1350 NEXT S
 Variable:S -> _
1999 RETURN
 
9999 END
 

