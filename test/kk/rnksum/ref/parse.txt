100 DIM X(100), Y(100), Z(200), T(200)
 NumericValue:100
 Declaration:X() -> .()
 NumericValue:100
 Declaration:Y() -> .()
 NumericValue:200
 Declaration:Z() -> .()
 NumericValue:200
 Declaration:T() -> .()
110
140 READ M, N
 Variable:M -> .
 Variable:N -> .
150 FOR I = 1 TO M
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> ."]
160    READ X(I)
 Variable:I -> .
 Variable:X(.) -> .
170 NEXT I
 Variable:I -> .
180 FOR J = 1 TO N
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
190    READ Y(J)
 Variable:J -> .
 Variable:Y(.) -> .
200 NEXT J
 Variable:J -> .
210
250 FOR K = 1 TO M
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> ."]
260    LET Z(K) = X(K)
 Variable:K -> .
 Variable:Z(.) -> .
 Variable:K -> .
 Variable:X(.) -> .
 AssignmentOperator:= . -> .
270    LET T(K) = +1
 Variable:K -> .
 Variable:T(.) -> .
 NumericValue:1
 UnaryOperatorPlus:+(.) -> =.
 AssignmentOperator:= =. -> .
280 NEXT K
 Variable:K -> .
290 FOR K = 1 TO N
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
300    LET Z(M+K) = Y(K)
 Variable:M -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:Z(.) -> .
 Variable:K -> .
 Variable:Y(.) -> .
 AssignmentOperator:= . -> .
310    LET T(M+K) = 0
 Variable:M -> .
 Variable:K -> .
 BinaryOperatorPlus:+(.,.) -> .
 Variable:T(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
320 NEXT K
 Variable:K -> .
330
360 FOR K = 1 TO M+N-1
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> .", "Variable:N -> .", "BinaryOperatorPlus:+(.,.) -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
370    FOR L = K+1 TO M+N
 control: Variable:L -> .
 start:   ["Variable:K -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> ."]
 end:     ["Variable:M -> .", "Variable:N -> .", "BinaryOperatorPlus:+(.,.) -> ."]
380       IF Z(K) <= Z(L) THEN 450
 Variable:K -> .
 Variable:Z(.) -> .
 Variable:L -> .
 Variable:Z(.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:450
390       LET T = Z(K)
 Variable:T -> .
 Variable:K -> .
 Variable:Z(.) -> .
 AssignmentOperator:= . -> .
400       LET Z(K) = Z(L)
 Variable:K -> .
 Variable:Z(.) -> .
 Variable:L -> .
 Variable:Z(.) -> .
 AssignmentOperator:= . -> .
410       LET Z(L) = T
 Variable:L -> .
 Variable:Z(.) -> .
 Variable:T -> .
 AssignmentOperator:= . -> .
420       LET T = T(K)
 Variable:T -> .
 Variable:K -> .
 Variable:T(.) -> .
 AssignmentOperator:= . -> .
430       LET T(K) = T(L)
 Variable:K -> .
 Variable:T(.) -> .
 Variable:L -> .
 Variable:T(.) -> .
 AssignmentOperator:= . -> .
440       LET T(L) = T
 Variable:L -> .
 Variable:T(.) -> .
 Variable:T -> .
 AssignmentOperator:= . -> .
450    NEXT L
 Variable:L -> .
460 NEXT K
 Variable:K -> .
470
500 LET J = 1
 Variable:J -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
510 LET K = 1
 Variable:K -> .
 NumericValue:1
 AssignmentOperator:= =. -> .
520 LET B = J
 Variable:B -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
530 LET T = J
 Variable:T -> .
 Variable:J -> .
 AssignmentOperator:= . -> .
540 LET J = J+1
 Variable:J -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
550 IF J > M+N THEN 600
 Variable:J -> .
 Variable:M -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:600
560 IF Z(J) > Z(B) THEN 600
 Variable:J -> .
 Variable:Z(.) -> .
 Variable:B -> .
 Variable:Z(.) -> .
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:600
570 LET T = T+J
 Variable:T -> .
 Variable:T -> .
 Variable:J -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
580 LET K = K+1
 Variable:K -> .
 Variable:K -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
590 GO TO 540
 LineNumber:540
600 FOR L = B TO J-1
 control: Variable:L -> .
 start:   ["Variable:B -> ."]
 end:     ["Variable:J -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
610    LET Z(L) = T/K
 Variable:L -> .
 Variable:Z(.) -> .
 Variable:T -> .
 Variable:K -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
620 NEXT L
 Variable:L -> .
630 IF J <= M+N THEN 510
 Variable:J -> .
 Variable:M -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:510
640
740 LET S(0) = 0
 NumericValue:0
 Variable:S(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
750 LET S(1) = 0
 NumericValue:1
 Variable:S(.) -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
760 FOR K = 1 TO M+N
 control: Variable:K -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:M -> .", "Variable:N -> .", "BinaryOperatorPlus:+(.,.) -> ."]
770    LET S(T(K)) = S(T(K)) + Z(K)
 Variable:K -> .
 Variable:T(.) -> .
 Variable:S(.) -> .
 Variable:K -> .
 Variable:T(.) -> .
 Variable:S(.) -> .
 Variable:K -> .
 Variable:Z(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
790 NEXT K
 Variable:K -> .
800 PRINT "RANK SUM FOR X IS"; S(1), "FOR Y IS"; S(0)
 TextValue:"RANK SUM FOR X IS"
 CarriageControl:;
 NumericValue:1
 Variable:S(.) -> .
 CarriageControl:,
 TextValue:"FOR Y IS"
 CarriageControl:;
 NumericValue:0
 Variable:S(.) -> .
 CarriageControl:NL
810
900 DATA 6, 4
 NumericValue:6
 NumericValue:4
910 DATA 117, 145, 147, 120, 150, 120
 NumericValue:117
 NumericValue:145
 NumericValue:147
 NumericValue:120
 NumericValue:150
 NumericValue:120
920 DATA 160, 160, 140, 190
 NumericValue:160
 NumericValue:160
 NumericValue:140
 NumericValue:190
999 END
 

