100 DIM X(100), Y(100), Z(200), T(200)
 NumericConstant:100
 Declaration:X() -> _()
 NumericConstant:100
 Declaration:Y() -> _()
 NumericConstant:200
 Declaration:Z() -> _()
 NumericConstant:200
 Declaration:T() -> _()
110
140 READ M, N
 Variable:M -> _
 Variable:N -> _
150 FOR I = 1 TO M
 control: Variable:I -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _"]
160    READ X(I)
 Variable:I -> _
 Variable:X(_) -> _
170 NEXT I
 Variable:I -> _
180 FOR J = 1 TO N
 control: Variable:J -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
190    READ Y(J)
 Variable:J -> _
 Variable:Y(_) -> _
200 NEXT J
 Variable:J -> _
210
250 FOR K = 1 TO M
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _"]
260    LET Z(K) = X(K)
 Variable:K -> _
 Variable:Z(_) -> _
 Variable:K -> _
 Variable:X(_) -> _
 AssignmentOperator:= _ -> _
270    LET T(K) = +1
 Variable:K -> _
 Variable:T(_) -> _
 NumericConstant:1
 UnaryOperatorPlus:+(_) -> =_
 AssignmentOperator:= =_ -> _
280 NEXT K
 Variable:K -> _
290 FOR K = 1 TO N
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:N -> _"]
300    LET Z(M+K) = Y(K)
 Variable:M -> _
 Variable:K -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:Z(_) -> _
 Variable:K -> _
 Variable:Y(_) -> _
 AssignmentOperator:= _ -> _
310    LET T(M+K) = 0
 Variable:M -> _
 Variable:K -> _
 BinaryOperatorPlus:+(_,_) -> _
 Variable:T(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
320 NEXT K
 Variable:K -> _
330
360 FOR K = 1 TO M+N-1
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _", "Variable:N -> _", "BinaryOperatorPlus:+(_,_) -> _", "NumericConstant:1", "BinaryOperatorMinus:-(_,_) -> _"]
370    FOR L = K+1 TO M+N
 control: Variable:L -> _
 start:   ["Variable:K -> _", "NumericConstant:1", "BinaryOperatorPlus:+(_,_) -> _"]
 end:     ["Variable:M -> _", "Variable:N -> _", "BinaryOperatorPlus:+(_,_) -> _"]
380       IF Z(K) <= Z(L) THEN 450
 Variable:K -> _
 Variable:Z(_) -> _
 Variable:L -> _
 Variable:Z(_) -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
390       LET T = Z(K)
 Variable:T -> _
 Variable:K -> _
 Variable:Z(_) -> _
 AssignmentOperator:= _ -> _
400       LET Z(K) = Z(L)
 Variable:K -> _
 Variable:Z(_) -> _
 Variable:L -> _
 Variable:Z(_) -> _
 AssignmentOperator:= _ -> _
410       LET Z(L) = T
 Variable:L -> _
 Variable:Z(_) -> _
 Variable:T -> _
 AssignmentOperator:= _ -> _
420       LET T = T(K)
 Variable:T -> _
 Variable:K -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
430       LET T(K) = T(L)
 Variable:K -> _
 Variable:T(_) -> _
 Variable:L -> _
 Variable:T(_) -> _
 AssignmentOperator:= _ -> _
440       LET T(L) = T
 Variable:L -> _
 Variable:T(_) -> _
 Variable:T -> _
 AssignmentOperator:= _ -> _
450    NEXT L
 Variable:L -> _
460 NEXT K
 Variable:K -> _
470
500 LET J = 1
 Variable:J -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
510 LET K = 1
 Variable:K -> _
 NumericConstant:1
 AssignmentOperator:= =_ -> _
520 LET B = J
 Variable:B -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
530 LET T = J
 Variable:T -> _
 Variable:J -> _
 AssignmentOperator:= _ -> _
540 LET J = J+1
 Variable:J -> _
 Variable:J -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
550 IF J > M+N THEN 600
 Variable:J -> _
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
560 IF Z(J) > Z(B) THEN 600
 Variable:J -> _
 Variable:Z(_) -> _
 Variable:B -> _
 Variable:Z(_) -> _
 BinaryOperatorGreater:>(_,_) -> ?
570 LET T = T+J
 Variable:T -> _
 Variable:T -> _
 Variable:J -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
580 LET K = K+1
 Variable:K -> _
 Variable:K -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
590 GO TO 540
 LineNumber:540
600 FOR L = B TO J-1
 control: Variable:L -> _
 start:   ["Variable:B -> _"]
 end:     ["Variable:J -> _", "NumericConstant:1", "BinaryOperatorMinus:-(_,_) -> _"]
610    LET Z(L) = T/K
 Variable:L -> _
 Variable:Z(_) -> _
 Variable:T -> _
 Variable:K -> _
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:= _ -> _
620 NEXT L
 Variable:L -> _
630 IF J <= M+N THEN 510
 Variable:J -> _
 Variable:M -> _
 Variable:N -> _
 BinaryOperatorPlus:+(_,_) -> _
 BinaryOperatorLessEqual:<=(_,_) -> ?
640
740 LET S(0) = 0
 NumericConstant:0
 Variable:S(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
750 LET S(1) = 0
 NumericConstant:1
 Variable:S(_) -> _
 NumericConstant:0
 AssignmentOperator:= =_ -> _
760 FOR K = 1 TO M+N
 control: Variable:K -> _
 start:   ["NumericConstant:1"]
 end:     ["Variable:M -> _", "Variable:N -> _", "BinaryOperatorPlus:+(_,_) -> _"]
770    LET S(T(K)) = S(T(K)) + Z(K)
 Variable:K -> _
 Variable:T(_) -> _
 Variable:S(_) -> _
 Variable:K -> _
 Variable:T(_) -> _
 Variable:S(_) -> _
 Variable:K -> _
 Variable:Z(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
790 NEXT K
 Variable:K -> _
800 PRINT "RANK SUM FOR X IS"; S(1), "FOR Y IS"; S(0)
 TextConstant:"RANK SUM FOR X IS"
 CarriageControl:;
 NumericConstant:1
 Variable:S(_) -> _
 CarriageControl:,
 TextConstant:"FOR Y IS"
 CarriageControl:;
 NumericConstant:0
 Variable:S(_) -> _
 CarriageControl:NL
810
900 DATA 6, 4
 NumericConstant:6
 NumericConstant:4
910 DATA 117, 145, 147, 120, 150, 120
 NumericConstant:117
 NumericConstant:145
 NumericConstant:147
 NumericConstant:120
 NumericConstant:150
 NumericConstant:120
920 DATA 160, 160, 140, 190
 NumericConstant:160
 NumericConstant:160
 NumericConstant:140
 NumericConstant:190
999 END
 

