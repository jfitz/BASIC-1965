10 DIM T(100,10), V(100)
 NumericValue:100
 NumericValue:10
 Declaration:T(,) -> .(,)
 NumericValue:100
 Declaration:V() -> .()
20 FOR I = 0 TO 100
 control: Variable:I -> .
 start:   ["NumericValue:0"]
 end:     ["NumericValue:100"]
30    READ K
 Variable:K -> .
40    IF K = 999 THEN 100
 WARNING: Transfer in/out of FOR/NEXT 100
 Variable:K -> .
 NumericValue:999
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:100
50    LET T(I,0) = K
 Variable:I -> .
 NumericValue:0
 Variable:T(.,.) -> .
 Variable:K -> .
 AssignmentOperator:= . -> .
60    LET K1 = ABS(K)
 Variable:K1 -> .
 Variable:K -> .
 FunctionAbs:ABS(.) -> .
 AssignmentOperator:= . -> .
70    FOR J = 1 TO 2*K1 + 1 - SGN(K1)
 control: Variable:J -> .
 start:   ["NumericValue:1"]
 end:     ["NumericValue:2", "Variable:K1 -> .", "BinaryOperatorMultiply:*(.,.) -> .", "NumericValue:1", "BinaryOperatorPlus:+(.,.) -> .", "Variable:K1 -> .", "FunctionSgn:SGN(.) -> .", "BinaryOperatorMinus:-(.,.) -> ."]
80       READ T(I,J)
 Variable:I -> .
 Variable:J -> .
 Variable:T(.,.) -> .
90    NEXT J
 Variable:J -> .
95 NEXT I
 Variable:I -> .
99
100 PRINT "SELECTED ACTS: ";
 TextValue:"SELECTED ACTS: "
 CarriageControl:;
105 FOR I = I-1 TO 0 STEP -1
 control: Variable:I -> .
 start:   ["Variable:I -> .", "NumericValue:1", "BinaryOperatorMinus:-(.,.) -> ."]
 end:     ["NumericValue:0"]
 step:    ["NumericValue:1", "UnaryOperatorMinus:-(.) -> =."]
110    LET K = T(I,0)
 Variable:K -> .
 Variable:I -> .
 NumericValue:0
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
120    IF K > 0 THEN 200
 Variable:K -> .
 NumericValue:0
 BinaryOperatorGreater:>(.,.) -> ?
 LineNumber:200
130    IF K < 0 THEN 300
 Variable:K -> .
 NumericValue:0
 BinaryOperatorLess:<(.,.) -> ?
 LineNumber:300
140    LET V(I) = T(I,1)
 Variable:I -> .
 Variable:V(.) -> .
 Variable:I -> .
 NumericValue:1
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
150    GOTO 399
 LineNumber:399
200    LET S = 0
 Variable:S -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
210    FOR J = 2 TO 2*K STEP 2
 control: Variable:J -> .
 start:   ["NumericValue:2"]
 end:     ["NumericValue:2", "Variable:K -> .", "BinaryOperatorMultiply:*(.,.) -> ."]
 step:    ["NumericValue:2"]
220       LET B = T(I,J)
 Variable:B -> .
 Variable:I -> .
 Variable:J -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
230       LET S = S + T(I,J-1)*V(B)
 Variable:S -> .
 Variable:S -> .
 Variable:I -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T(.,.) -> .
 Variable:B -> .
 Variable:V(.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
240    NEXT J
 Variable:J -> .
250    LET V(I) = S
 Variable:I -> .
 Variable:V(.) -> .
 Variable:S -> .
 AssignmentOperator:= . -> .
260    GOTO 399
 LineNumber:399
300    LET M = -999999999
 Variable:M -> .
 NumericValue:999999999
 UnaryOperatorMinus:-(.) -> =.
 AssignmentOperator:= =. -> .
310    FOR J = 2 TO 2*ABS(K) STEP 2
 control: Variable:J -> .
 start:   ["NumericValue:2"]
 end:     ["NumericValue:2", "Variable:K -> .", "FunctionAbs:ABS(.) -> .", "BinaryOperatorMultiply:*(.,.) -> ."]
 step:    ["NumericValue:2"]
320       LET V = V(T(I,J))
 Variable:V -> .
 Variable:I -> .
 Variable:J -> .
 Variable:T(.,.) -> .
 Variable:V(.) -> .
 AssignmentOperator:= . -> .
330       IF V <= M THEN 360
 Variable:V -> .
 Variable:M -> .
 BinaryOperatorLessEqual:<=(.,.) -> ?
 LineNumber:360
340       LET M = V
 Variable:M -> .
 Variable:V -> .
 AssignmentOperator:= . -> .
350       LET A = T(I,J-1)
 Variable:A -> .
 Variable:I -> .
 Variable:J -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 Variable:T(.,.) -> .
 AssignmentOperator:= . -> .
360    NEXT J
 Variable:J -> .
370    PRINT A;
 Variable:A -> .
 CarriageControl:;
380    LET V(I) = M
 Variable:I -> .
 Variable:V(.) -> .
 Variable:M -> .
 AssignmentOperator:= . -> .
399 NEXT I
 Variable:I -> .
400 PRINT
 CarriageControl:NL
410 PRINT
 CarriageControl:NL
420 PRINT "EXPECTED GAIN = $" V(0)
 TextValue:"EXPECTED GAIN = $"
 CarriageControl:
 NumericValue:0
 Variable:V(.) -> .
 CarriageControl:NL
430
900 DATA -3,1,1,2,2,3,3
 NumericValue:3
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:1
 NumericValue:1
 NumericValue:2
 NumericValue:2
 NumericValue:3
 NumericValue:3
901 DATA 2,.5,4,0.5,5
 NumericValue:2
 NumericValue:.5
 NumericValue:4
 NumericValue:0.5
 NumericValue:5
902 DATA 0,0
 NumericValue:0
 NumericValue:0
903 DATA 3,0.333,6,0.167,7,0.5,8
 NumericValue:3
 NumericValue:0.333
 NumericValue:6
 NumericValue:0.167
 NumericValue:7
 NumericValue:0.5
 NumericValue:8
904 DATA 0,100
 NumericValue:0
 NumericValue:100
905 DATA -2,4,9,5,10
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:4
 NumericValue:9
 NumericValue:5
 NumericValue:10
906 DATA 2,0.5,11,0.5,12
 NumericValue:2
 NumericValue:0.5
 NumericValue:11
 NumericValue:0.5
 NumericValue:12
907 DATA 0,-10
 NumericValue:0
 NumericValue:10
 UnaryOperatorMinus:-(.) -> =.
908 DATA 2,0.75,13,0.25,14
 NumericValue:2
 NumericValue:0.75
 NumericValue:13
 NumericValue:0.25
 NumericValue:14
909 DATA 3,0.167,15,0.333,16,0.5,17
 NumericValue:3
 NumericValue:0.167
 NumericValue:15
 NumericValue:0.333
 NumericValue:16
 NumericValue:0.5
 NumericValue:17
910 DATA 0,-100
 NumericValue:0
 NumericValue:100
 UnaryOperatorMinus:-(.) -> =.
911 DATA 0,90
 NumericValue:0
 NumericValue:90
912 DATA -2,6,18,7,19
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:6
 NumericValue:18
 NumericValue:7
 NumericValue:19
913 DATA 0,90
 NumericValue:0
 NumericValue:90
914 DATA -2,8,20,9,21
 NumericValue:2
 UnaryOperatorMinus:-(.) -> =.
 NumericValue:8
 NumericValue:20
 NumericValue:9
 NumericValue:21
915 DATA 0,100
 NumericValue:0
 NumericValue:100
916 DATA 0,0
 NumericValue:0
 NumericValue:0
917 DATA 0,-100
 NumericValue:0
 NumericValue:100
 UnaryOperatorMinus:-(.) -> =.
918 DATA 3,0.167,22,0.333,23,0.5,24
 NumericValue:3
 NumericValue:0.167
 NumericValue:22
 NumericValue:0.333
 NumericValue:23
 NumericValue:0.5
 NumericValue:24
919 DATA 0,-110
 NumericValue:0
 NumericValue:110
 UnaryOperatorMinus:-(.) -> =.
920 DATA 3,0.167,25,0.333,26,0.5,27
 NumericValue:3
 NumericValue:0.167
 NumericValue:25
 NumericValue:0.333
 NumericValue:26
 NumericValue:0.5
 NumericValue:27
921 DATA 0,-110
 NumericValue:0
 NumericValue:110
 UnaryOperatorMinus:-(.) -> =.
922 DATA 0,90
 NumericValue:0
 NumericValue:90
923 DATA 0,-10
 NumericValue:0
 NumericValue:10
 UnaryOperatorMinus:-(.) -> =.
924 DATA 0,-110
 NumericValue:0
 NumericValue:110
 UnaryOperatorMinus:-(.) -> =.
925 DATA 0,90
 NumericValue:0
 NumericValue:90
926 DATA 0,-10
 NumericValue:0
 NumericValue:10
 UnaryOperatorMinus:-(.) -> =.
927 DATA 0,-110
 NumericValue:0
 NumericValue:110
 UnaryOperatorMinus:-(.) -> =.
998 DATA 999
 NumericValue:999
999 END
 

