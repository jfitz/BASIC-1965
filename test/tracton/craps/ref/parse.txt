10 REM THIS PROGRAM SIMULATES THE GAME OF CRAPS
 Remark:THIS PROGRAM SIMULATES THE GAME OF CRAPS
20 RANDOMIZE
 Unknown statement 'RANDOMIZE'
 Unimplemented
30 PRINT " FOR RULES, TYPE RULES, OTHERWISE TYPE GO"
 TextConstant:" FOR RULES, TYPE RULES, OTHERWISE TYPE GO"
 CarriageControl:NL
40 INPUT R$
 Syntax error: "R$" Token 'InvalidToken:$' is not a value or operator
50 IF R$ = "RULES" THEN 90
 Token 'InvalidToken:$' is not a value or operator
60 IF R$ = "GO" THEN 140
 Token 'InvalidToken:$' is not a value or operator
70 PRINT "INVALID COMMAND"
 TextConstant:"INVALID COMMAND"
 CarriageControl:NL
80 GOTO 30
 LineNumber:30
90 PRINT "A 7 OR 11 ON THE FIRST THROW WINS"
 TextConstant:"A 7 OR 11 ON THE FIRST THROW WINS"
 CarriageControl:NL
100 PRINT "YOU CAN ALSO WIN BY THROWING A 4,5,6,8,9,10"
 TextConstant:"YOU CAN ALSO WIN BY THROWING A 4,5,6,8,9,10"
 CarriageControl:NL
110 PRINT "AND MATCHING IT BEFORE THROWING A 7. IF ON"
 TextConstant:"AND MATCHING IT BEFORE THROWING A 7. IF ON"
 CarriageControl:NL
120 PRINT "THE FIRST THROW 2,3 OR A 12 COMES UP"
 TextConstant:"THE FIRST THROW 2,3 OR A 12 COMES UP"
 CarriageControl:NL
130 PRINT "YOU LOSE AUTOMATICALLY"
 TextConstant:"YOU LOSE AUTOMATICALLY"
 CarriageControl:NL
140 LET J = 0
 Variable:J -> _
 NumericConstant:0
 AssignmentOperator:= _ -> _
150 GOSUB 460
 LineNumber:460
160 LET D1 = N
 Variable:D1 -> _
 Variable:N -> _
 AssignmentOperator:= _ -> _
170 GOSUB 460
 LineNumber:460
180 LET D2 = N
 Variable:D2 -> _
 Variable:N -> _
 AssignmentOperator:= _ -> _
190 LET D3 = D1 + D2
 Variable:D3 -> _
 Variable:D1 -> _
 Variable:D2 -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
200 LET J = J + 1
 Variable:J -> _
 Variable:J -> _
 NumericConstant:1
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
210 IF J = 1 THEN 260
 Variable:J -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
220 IF D3 = D4 THEN 420
 Variable:D3 -> _
 Variable:D4 -> _
 BinaryOperatorEqual:=(_,_) -> ?
230 IF D3 = 7 THEN 440
 Variable:D3 -> _
 NumericConstant:7
 BinaryOperatorEqual:=(_,_) -> ?
240 PRINT "YOU THROW A ";D3
 TextConstant:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> _
 CarriageControl:NL
250 GOTO 150
 LineNumber:150
260 IF D3 = 7 THEN 320
 Variable:D3 -> _
 NumericConstant:7
 BinaryOperatorEqual:=(_,_) -> ?
270 IF D3 = 2 THEN 340
 Variable:D3 -> _
 NumericConstant:2
 BinaryOperatorEqual:=(_,_) -> ?
280 IF D3 = 3 THEN 340
 Variable:D3 -> _
 NumericConstant:3
 BinaryOperatorEqual:=(_,_) -> ?
290 IF D3 = 12 THEN 340
 Variable:D3 -> _
 NumericConstant:12
 BinaryOperatorEqual:=(_,_) -> ?
300 IF D3 = 11 THEN 320
 Variable:D3 -> _
 NumericConstant:11
 BinaryOperatorEqual:=(_,_) -> ?
310 LET D4 = D3
 Variable:D4 -> _
 Variable:D3 -> _
 AssignmentOperator:= _ -> _
315 GOTO 240
 LineNumber:240
320 PRINT "YOU THROW A ";D3;" YOU WIN"
 TextConstant:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> _
 CarriageControl:;
 TextConstant:" YOU WIN"
 CarriageControl:NL
330 GOTO 350
 LineNumber:350
340 PRINT "YOU THROW A ";D3;" YOU LOSE"
 TextConstant:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> _
 CarriageControl:;
 TextConstant:" YOU LOSE"
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 PRINT "TO CONTINUE TYPE Y, IF NOT TYPE N"
 TextConstant:"TO CONTINUE TYPE Y, IF NOT TYPE N"
 CarriageControl:NL
370 INPUT L$
 Syntax error: "L$" Token 'InvalidToken:$' is not a value or operator
380 IF L$ = "Y" THEN 400
 Token 'InvalidToken:$' is not a value or operator
390 STOP
 
400 PRINT
 CarriageControl:NL
410 GOTO 30
 LineNumber:30
420 PRINT "YOU THROW A ";D3;"YOU WIN BY MATCHING"
 TextConstant:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> _
 CarriageControl:;
 TextConstant:"YOU WIN BY MATCHING"
 CarriageControl:NL
430 GOTO 350
 LineNumber:350
440 PRINT "YOU THROW A ";D3;" SORRY YOU LOSE"
 TextConstant:"YOU THROW A "
 CarriageControl:;
 Variable:D3 -> _
 CarriageControl:;
 TextConstant:" SORRY YOU LOSE"
 CarriageControl:NL
450 GOTO 350
 LineNumber:350
460 LET N = 1 + INT(6*RND)
 Variable:N -> _
 NumericConstant:1
 NumericConstant:6
 FunctionRnd:RND -> _
 BinaryOperatorMultiply:*(_,_) -> _
 FunctionInt:INT(_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:= _ -> _
470 RETURN
 
480 END
 

