Statistics:

Number of lines: 27
Number of valid statements: 25
Number of comments: 2
Number of executable statements: 24

Complexity:

Comment density: 0.080
Comprehension effort: 115
McCabe complexity: 9
Halstead complexity:
 length: 177
 volume: 712.487
 difficulty: 11.337
 effort: 8077.617
 language: 5.543
 intelligence: 62.845
 time: 7.479

(0 1) 10 REM THIS PROGRAM COMPUTES THE CENTER AND RADIUS
  Origs: 
  Dests: 20
(0 1) 20 REM OF A CIRCLE FROM 3 NON-COLINEAR POINTS
  Origs: 10
  Dests: 30
(0 2) 30 PRINT "INPUT X1,Y1";
  Origs: 20, 260
  Dests: 40
(2 3) 40 INPUT X1, Y1
  Origs: 30
  Dests: 50
(0 2) 50 PRINT "INPUT X2,Y2";
  Origs: 40
  Dests: 60
(2 3) 60 INPUT X2, Y2
  Origs: 50
  Dests: 70
(0 2) 70 PRINT "INPUT X3,Y2";
  Origs: 60
  Dests: 80
(2 3) 80 INPUT X3, Y3
  Origs: 70
  Dests: 90
(0 7) 90 LET A = (Y2 - Y1) / (X2 - X1)
  Origs: 80
  Dests: 100
(0 7) 100 LET B = (Y3 - Y1) / (X3 - X1)
  Origs: 90
  Dests: 110
(0 13) 110 LET C = ((X2 - X1) * (X2 + X1)) + ((Y2 - Y1) * (Y2 + Y1))
  Origs: 100
  Dests: 120
(0 8) 120 LET D = C / (2 * (X2 - X1))
  Origs: 110
  Dests: 130
(0 13) 130 LET E = ((X3 - X1) * (X3 + X1)) + ((Y3 - Y1) * (Y3 + Y1))
  Origs: 120
  Dests: 140
(0 8) 140 LET F = E / (2 * (X3 - X1))
  Origs: 130
  Dests: 150
(0 7) 150 LET Y0 = (F - D) / (B - A)
  Origs: 140
  Dests: 160
(0 6) 160 LET X0 = F - (B * Y0)
  Origs: 150
  Dests: 170
(0 4) 170 LET R = SQR((X3 - X0) ^ 2 + (Y3 - Y0) ^ 2)
  Origs: 160
  Dests: 180
(0 5) 180 PRINT "CENTER X0,Y0 = "; X0; ","; Y0
  Origs: 170
  Dests: 190
(0 3) 190 PRINT "RADIUS = "; R
  Origs: 180
  Dests: 200
(0 2) 200 PRINT
  Origs: 190
  Dests: 210
(0 2) 210 PRINT "TO CONTINUE TYPE 1, IF NOT TYPE 0"
  Origs: 200
  Dests: 220
(1 2) 220 INPUT L
  Origs: 210
  Dests: 230
(1 4) 230 IF L = 1 THEN 250
  Origs: 220
  Dests: 240, 250
(0 1) 240 STOP
  Origs: 230
  Dests: 
(0 2) 250 PRINT
  Origs: 230
  Dests: 260
(0 3) 260 GOTO 30
  Origs: 250
  Dests: 30
(0 1) 270 END
  Origs: 
  Dests: 

Unreachable code:

All executable lines are reachable.

