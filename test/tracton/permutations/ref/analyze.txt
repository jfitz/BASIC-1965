Statistics:

Number of lines: 41
Number of valid statements: 38
Number of comments: 3
Number of executable statements: 37

Complexity:

Comment density: 0.079
Comprehension effort: 109
McCabe complexity: 10
Halstead complexity:
 length: 95
 volume: 373.523
 difficulty: 13.333
 effort: 4980.312
 language: 2.101
 intelligence: 28.014
 time: 4.611

(0 1) 10 REM THIS PROGRAM COMPUTES PERMUTATIONS
  Origs: 
  Dests: 20
(0 1) 20 REM AND COMBINATIONS, WHERE N = NUMBER OF
  Origs: 10
  Dests: 30
(0 1) 30 REM ITEMS AND R = SIZE OF GROUP SELECTED
  Origs: 20
  Dests: 40
(0 2) 40 PRINT "ENTER N,R";
  Origs: 30, 260, 280, 300
  Dests: 50
(2 3) 50 INPUT N, R
  Origs: 40
  Dests: 60
(1 4) 60 IF N < R THEN 270
  Origs: 50
  Dests: 70, 270
(1 4) 70 IF R < 0 THEN 290
  Origs: 60
  Dests: 80, 290
(0 3) 80 LET T = N
  Origs: 70
  Dests: 90
(0 2) 90 GOSUB 310
  Origs: 80
  Dests: 100, 310
(0 3) 100 LET A = T
  Origs: 90
  Dests: 110
(0 4) 110 LET T = N - R
  Origs: 100
  Dests: 120
(0 2) 120 GOSUB 310
  Origs: 110
  Dests: 130, 310
(0 3) 130 LET B = T
  Origs: 120
  Dests: 140
(0 4) 140 LET P = A / B
  Origs: 130
  Dests: 150
(0 3) 150 LET T = R
  Origs: 140
  Dests: 160
(0 2) 160 GOSUB 310
  Origs: 150
  Dests: 170, 310
(0 6) 170 LET C = A / (T * B)
  Origs: 160
  Dests: 180
(0 3) 180 PRINT "PERMUTATIONS = "; P
  Origs: 170
  Dests: 190
(0 3) 190 PRINT "COMBINATIONS = "; C
  Origs: 180
  Dests: 200
(0 2) 200 PRINT
  Origs: 190
  Dests: 210
(0 2) 210 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
  Origs: 200
  Dests: 220
(1 2) 220 INPUT L
  Origs: 210
  Dests: 230
(1 4) 230 IF L = 1 THEN 250
  Origs: 220
  Dests: 240, 250
(0 1) 240 STOP
  Origs: 230
  Dests: 
(0 2) 250 PRINT
  Origs: 230
  Dests: 260
(0 3) 260 GOTO 40
  Origs: 250
  Dests: 40
(0 2) 270 PRINT "N < R, INVALID INPUT"
  Origs: 60
  Dests: 280
(0 3) 280 GOTO 40
  Origs: 270
  Dests: 40
(0 2) 290 PRINT "R < 0, INVALID INPUT"
  Origs: 70
  Dests: 300
(0 3) 300 GOTO 40
  Origs: 290
  Dests: 40
(1 4) 310 IF T = 0 THEN 390
  Origs: 90, 120, 160
  Dests: 320, 390
(1 4) 320 IF T = 1 THEN 390
  Origs: 310
  Dests: 330, 390
(0 3) 330 LET J = 1
  Origs: 320
  Dests: 340
(1 3) 340 FOR I = 2 TO T
  Origs: 330
  Dests: 350
(0 4) 350 LET J = J * I
  Origs: 340
  Dests: 360
(0 1) 360 NEXT I
  Origs: 350
  Dests: 370
(0 3) 370 LET T = J
  Origs: 360
  Dests: 380
(0 2) 380 GOTO 400
  Origs: 370
  Dests: 400
(0 3) 390 LET T = 1
  Origs: 310, 320
  Dests: 400
(0 1) 400 RETURN
  Origs: 380, 390
  Dests: 
(0 1) 410 END
  Origs: 
  Dests: 

Unreachable code:

All executable lines are reachable.

