Statistics:

Number of lines: 41
Number of valid statements: 38
Number of comments: 3
Number of executable statements: 38

Complexity:

Comment density: 0.079
Comprehension effort: 109
McCabe complexity: 10
Halstead complexity:
 length: 95
 volume: 373.523
 difficulty: 13.333
 effort: 4980.312
 language: 2.101
 intelligence: 28.014
 time: 4.611

10 (0 1) REM THIS PROGRAM COMPUTES PERMUTATIONS
  Origs: 
  Dests: 
20 (0 1) REM AND COMBINATIONS, WHERE N = NUMBER OF
  Origs: 
  Dests: 
30 (0 1) REM ITEMS AND R = SIZE OF GROUP SELECTED
  Origs: 
  Dests: 
40 (0 2) PRINT "ENTER N,R";
  Origs: :start, 260:goto, 280:goto, 300:goto
  Dests: 50:auto
50 (2 3) INPUT N, R
  Origs: 40:auto
  Dests: 60:auto
60 (1 4) IF N < R THEN 270
  Origs: 50:auto
  Dests: 70:auto, 270:ifthen
70 (1 4) IF R < 0 THEN 290
  Origs: 60:auto
  Dests: 80:auto, 290:ifthen
80 (0 3) LET T = N
  Origs: 70:auto
  Dests: 90:auto
90 (0 2) GOSUB 310
  Origs: 80:auto
  Dests: 100:auto, 310:gosub
100 (0 3) LET A = T
  Origs: 90:auto
  Dests: 110:auto
110 (0 4) LET T = N - R
  Origs: 100:auto
  Dests: 120:auto
120 (0 2) GOSUB 310
  Origs: 110:auto
  Dests: 130:auto, 310:gosub
130 (0 3) LET B = T
  Origs: 120:auto
  Dests: 140:auto
140 (0 4) LET P = A / B
  Origs: 130:auto
  Dests: 150:auto
150 (0 3) LET T = R
  Origs: 140:auto
  Dests: 160:auto
160 (0 2) GOSUB 310
  Origs: 150:auto
  Dests: 170:auto, 310:gosub
170 (0 6) LET C = A / (T * B)
  Origs: 160:auto
  Dests: 180:auto
180 (0 3) PRINT "PERMUTATIONS = "; P
  Origs: 170:auto
  Dests: 190:auto
190 (0 3) PRINT "COMBINATIONS = "; C
  Origs: 180:auto
  Dests: 200:auto
200 (0 2) PRINT
  Origs: 190:auto
  Dests: 210:auto
210 (0 2) PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
  Origs: 200:auto
  Dests: 220:auto
220 (1 2) INPUT L
  Origs: 210:auto
  Dests: 230:auto
230 (1 4) IF L = 1 THEN 250
  Origs: 220:auto
  Dests: 240:auto, 250:ifthen
240 (0 1) STOP
  Origs: 230:auto
  Dests: :stop
250 (0 2) PRINT
  Origs: 230:ifthen
  Dests: 260:auto
260 (0 3) GOTO 40
  Origs: 250:auto
  Dests: 40:goto
270 (0 2) PRINT "N < R, INVALID INPUT"
  Origs: 60:ifthen
  Dests: 280:auto
280 (0 3) GOTO 40
  Origs: 270:auto
  Dests: 40:goto
290 (0 2) PRINT "R < 0, INVALID INPUT"
  Origs: 70:ifthen
  Dests: 300:auto
300 (0 3) GOTO 40
  Origs: 290:auto
  Dests: 40:goto
310 G(310) (1 4) IF T = 0 THEN 390
  Origs: 90:gosub, 120:gosub, 160:gosub
  Dests: 320:auto, 390:ifthen
320 G(310) (1 4) IF T = 1 THEN 390
  Origs: 310:auto
  Dests: 330:auto, 390:ifthen
330 G(310) (0 3) LET J = 1
  Origs: 320:auto
  Dests: 340:auto
340 G(310) F(I) (1 3) FOR I = 2 TO T
  Origs: 330:auto
  Dests: 350:fornext, 360:fornext
350 G(310) F(I) (0 4) LET J = J * I
  Origs: 340:fornext
  Dests: 360:auto
360 G(310) F(I) (0 1) NEXT I
  Origs: 340:fornext, 350:auto
  Dests: 370:auto
370 G(310) (0 3) LET T = J
  Origs: 360:auto
  Dests: 380:auto
380 G(310) (0 2) GOTO 400
  Origs: 370:auto
  Dests: 400:goto
390 G(310) (0 3) LET T = 1
  Origs: 310:ifthen, 320:ifthen
  Dests: 400:auto
400 G(310) (0 1) RETURN
  Origs: 380:goto, 390:auto
  Dests: 
410 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

410: END

