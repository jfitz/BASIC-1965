10 REM THIS PROGRAM COMPUTES THE VALUES OF THE
 Remark:THIS PROGRAM COMPUTES THE VALUES OF THE
20 REM FIRST 4 MOMENTS, SKEWNESS AND KURTOSIS
 Remark:FIRST 4 MOMENTS, SKEWNESS AND KURTOSIS
30 LET A = 0
 Variable:A -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
40 LET B = 0
 Variable:B -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
50 LET C = 0
 Variable:C -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
60 LET D = 0
 Variable:D -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
70 PRINT "NUMBER OF SAMPLES = "
 TextValue:"NUMBER OF SAMPLES = "
 CarriageControl:NL
80 INPUT N
 Variable:N -> .
90 FOR I = 1 TO N
 control: Variable:I -> .
 start:   ["NumericValue:1"]
 end:     ["Variable:N -> ."]
100 PRINT "SAMPLE = "
 TextValue:"SAMPLE = "
 CarriageControl:NL
110 INPUT X
 Variable:X -> .
120 LET A = A + X
 Variable:A -> .
 Variable:A -> .
 Variable:X -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
130 LET B = B + (X^2)
 Variable:B -> .
 Variable:B -> .
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
140 LET C = C + (X^3)
 Variable:C -> .
 Variable:C -> .
 Variable:X -> .
 NumericValue:3
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
150 LET D = D + (X^4)
 Variable:D -> .
 Variable:D -> .
 Variable:X -> .
 NumericValue:4
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
160 NEXT I
 Variable:I -> .
170 LET J = A/N
 Variable:J -> .
 Variable:A -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
180 LET E = (B/N) - (J^2)
 Variable:E -> .
 Variable:B -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:J -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
190 LET F = (C/N) - ((3*J*B)/N) + (2*(J^3))
 Variable:F -> .
 Variable:C -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:3
 Variable:J -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 NumericValue:2
 Variable:J -> .
 NumericValue:3
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
200 LET G = (D/N) - ((4*J*C)/N)
 Variable:G -> .
 Variable:D -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:4
 Variable:J -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:C -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
210 LET H = G + ((6*(J^2)*B)/N) - (3*(J^4))
 Variable:H -> .
 Variable:G -> .
 NumericValue:6
 Variable:J -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:N -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:3
 Variable:J -> .
 NumericValue:4
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
220 LET K = F/(E^(3/2))
 Variable:K -> .
 Variable:F -> .
 Variable:E -> .
 NumericValue:3
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> =.
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
230 LET L = H/(E^2)
 Variable:L -> .
 Variable:H -> .
 Variable:E -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
240 PRINT "1ST MOMENT = ";J
 TextValue:"1ST MOMENT = "
 CarriageControl:;
 Variable:J -> .
 CarriageControl:NL
250 PRINT "2ND MOMENT = ";E
 TextValue:"2ND MOMENT = "
 CarriageControl:;
 Variable:E -> .
 CarriageControl:NL
260 PRINT "3RD MOMENT = ";F
 TextValue:"3RD MOMENT = "
 CarriageControl:;
 Variable:F -> .
 CarriageControl:NL
270 PRINT "4TH MOMENT = ";H
 TextValue:"4TH MOMENT = "
 CarriageControl:;
 Variable:H -> .
 CarriageControl:NL
280 PRINT "MOMENT COEFFICIENTS"
 TextValue:"MOMENT COEFFICIENTS"
 CarriageControl:NL
290 PRINT "SKEWNESS = ";K,"KURTOSIS = ";L
 TextValue:"SKEWNESS = "
 CarriageControl:;
 Variable:K -> .
 CarriageControl:,
 TextValue:"KURTOSIS = "
 CarriageControl:;
 Variable:L -> .
 CarriageControl:NL
300 PRINT "**********************"
 TextValue:"**********************"
 CarriageControl:NL
310 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
 TextValue:"TYPE 1 TO CONTINUE, 0 TO STOP"
 CarriageControl:NL
320 INPUT Z
 Variable:Z -> .
330 IF Z = 1 THEN 350
 Variable:Z -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:350
340 STOP
 
350 PRINT
 CarriageControl:NL
360 GOTO 30
 LineNumber:30
370 END
 

