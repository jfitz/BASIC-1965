Statistics:

Number of lines: 80
Number of valid statements: 76
Number of comments: 2
Number of executable statements: 75

Complexity:

Comment density: 0.026
Comprehension effort: 169
McCabe complexity: 12
Halstead complexity:
 length: 129
 volume: 530.303
 difficulty: 9.796
 effort: 5194.802
 language: 5.526
 intelligence: 54.135
 time: 4.810

(0 1) 10 REM THIS PROGRAM SIMULATES THEN MECHANICAL
  Origs: 
  Dests: 20:auto
(0 1) 20 REM THREE WHEEL ONE-ARM BANDIT
  Origs: 10:auto
  Dests: 30:auto
(0 2) 30 PRINT "ARE INSTRUCTIONS REQUIRED"
  Origs: 20:auto, 90:goto
  Dests: 40:auto
(0 2) 40 PRINT "TYPE EITHER YES OR NO"
  Origs: 30:auto
  Dests: 50:auto
(0 1) 50 INPUT L $
  Origs: 40:auto
  Dests: 60:auto
(1 2) 60 IF L $ ="YES" THEN 100
  Origs: 50:auto
  Dests: 70:auto, 100:ifthen
(1 2) 70 IF L $ ="NO" THEN 170
  Origs: 60:auto
  Dests: 80:auto, 170:ifthen
(0 2) 80 PRINT "INVALID COMMAND"
  Origs: 70:auto
  Dests: 90:auto
(0 3) 90 GOTO 30
  Origs: 80:auto
  Dests: 30:goto
(0 2) 100 PRINT "SCORING IS SIMPLE; 3 ORANGES, LEMONS OR"
  Origs: 60:ifthen
  Dests: 110:auto
(0 2) 110 PRINT "BANANAS EARN $10. 3 CHERRIES EARN $90."
  Origs: 100:auto
  Dests: 120:auto
(0 2) 120 PRINT "IF THE FIRST FRUIT IS AN APPLE YOU EARN #$2"
  Origs: 110:auto
  Dests: 130:auto
(0 2) 130 PRINT "IF THE 1ST AND 2ND ARE APPLES YOU EARN $3"
  Origs: 120:auto
  Dests: 140:auto
(0 2) 140 PRINT "IF THE LAST FRUIT IS A CHERRY AND THE"
  Origs: 130:auto
  Dests: 150:auto
(0 2) 150 PRINT "OTHER TWO ARE THE SAME BUT NOT APPLES YOU"
  Origs: 140:auto
  Dests: 160:auto
(0 2) 160 PRINT "EARN $10. EACH TURN COSTS $1. GOOD-LUCK"
  Origs: 150:auto
  Dests: 170:auto
(0 3) 170 LET J = 0
  Origs: 70:ifthen, 160:auto
  Dests: 180:auto
(0 2) 180 PRINT
  Origs: 170:auto
  Dests: 190:auto
(0 2) 190 GOSUB 590
  Origs: 180:auto, 790:goto
  Dests: 200:auto, 590:gosub
(0 3) 200 LET S1 = S
  Origs: 190:auto
  Dests: 210:auto
(0 2) 210 GOSUB 590
  Origs: 200:auto
  Dests: 220:auto, 590:gosub
(0 3) 220 LET S2 = S
  Origs: 210:auto
  Dests: 230:auto
(0 2) 230 GOSUB 590
  Origs: 220:auto
  Dests: 240:auto, 590:gosub
(0 3) 240 LET S3 = S
  Origs: 230:auto
  Dests: 250:auto
(0 3) 250 LET S = S1
  Origs: 240:auto
  Dests: 260:auto
(0 2) 260 GOSUB 610
  Origs: 250:auto
  Dests: 270:auto, 610:gosub
(0 1) 270 LET S1 $ =S $
  Origs: 260:auto
  Dests: 280:auto
(0 3) 280 LET S = S2
  Origs: 270:auto
  Dests: 290:auto
(0 2) 290 GOSUB 610
  Origs: 280:auto
  Dests: 300:auto, 610:gosub
(0 1) 300 LET S2 $ =S $
  Origs: 290:auto
  Dests: 310:auto
(0 3) 310 LET S = S3
  Origs: 300:auto
  Dests: 320:auto
(0 2) 320 GOSUB 610
  Origs: 310:auto
  Dests: 330:auto, 610:gosub
(0 1) 330 LET S3 $ =S $
  Origs: 320:auto
  Dests: 340:auto
(1 2) 340 IF S1 $ ="CHERRY" THEN 380
  Origs: 330:auto
  Dests: 350:auto, 380:ifthen
(1 2) 350 IF S1 $ ="APPLE" THEN 420
  Origs: 340:auto
  Dests: 360:auto, 420:ifthen
(1 2) 360 IF S1 $ =S2 $ THEN 440
  Origs: 350:auto
  Dests: 370:auto, 440:ifthen
(0 2) 370 GOTO 460
  Origs: 360:auto
  Dests: 460:goto
(1 2) 380 IF S1 $ =S2 $ THEN 400
  Origs: 340:ifthen
  Dests: 390:auto, 400:ifthen
(0 2) 390 GOTO 460
  Origs: 380:auto
  Dests: 460:goto
(1 2) 400 IF S2 $ =S3 $ THEN 480
  Origs: 380:ifthen
  Dests: 410:auto, 480:ifthen
(0 2) 410 GOTO 460
  Origs: 400:auto
  Dests: 460:goto
(1 2) 420 IF S1 $ =S2 $ THEN 500
  Origs: 350:ifthen
  Dests: 430:auto, 500:ifthen
(0 2) 430 GOTO 520
  Origs: 420:auto
  Dests: 520:goto
(1 2) 440 IF S2 $ =S3 $ THEN 540
  Origs: 360:ifthen
  Dests: 450:auto, 540:ifthen
(1 2) 450 IF S3 $ ="CHERRY" THEN 540
  Origs: 440:auto
  Dests: 460:auto, 540:ifthen
(0 4) 460 LET J = J - 1
  Origs: 370:goto, 390:goto, 410:goto, 450:auto
  Dests: 470:auto
(0 2) 470 GOTO 550
  Origs: 460:auto
  Dests: 550:goto
(0 4) 480 LET J = J + 89
  Origs: 400:ifthen
  Dests: 490:auto
(0 2) 490 GOTO 550
  Origs: 480:auto
  Dests: 550:goto
(0 4) 500 LET J = J + 2
  Origs: 420:ifthen
  Dests: 510:auto
(0 2) 510 GOTO 550
  Origs: 500:auto
  Dests: 550:goto
(0 4) 520 LET J = J + 1
  Origs: 430:goto
  Dests: 530:auto
(0 2) 530 GOTO 550
  Origs: 520:auto
  Dests: 550:goto
(0 4) 540 LET J = J + 9
  Origs: 440:ifthen, 450:ifthen
  Dests: 550:auto
(0 2) 550 PRINT
  Origs: 470:goto, 490:goto, 510:goto, 530:goto, 540:auto
  Dests: 560:auto
(0 5) 560 PRINT S1 $; " "; S2 $; " "; S3 $
  Origs: 550:auto
  Dests: 570:auto
(0 3) 570 PRINT "YOUR EARNINGS ARE NOW $"; J
  Origs: 560:auto
  Dests: 580:auto
(0 2) 580 GOTO 720
  Origs: 570:auto
  Dests: 720:goto
(0 5) 590 LET S = 1 + INT(5 * RND)
  Origs: 190:gosub, 210:gosub, 230:gosub
  Dests: 600:auto
(0 1) 600 
  Origs: 590:auto
  Dests: 610:auto
(0 1) 610 
  Origs: 260:gosub, 290:gosub, 320:gosub, 600:auto
  Dests: 620:auto
(0 1) 620 LET S $ ="CHERRY"
  Origs: 610:auto
  Dests: 630:auto
(0 2) 630 GOTO 710
  Origs: 620:auto
  Dests: 710:goto
(0 1) 640 LET S $ ="APPLE"
  Origs: 
  Dests: 650:auto
(0 2) 650 GOTO 710
  Origs: 640:auto
  Dests: 710:goto
(0 1) 660 LET S $ ="LEMON"
  Origs: 
  Dests: 670:auto
(0 2) 670 GOTO 710
  Origs: 660:auto
  Dests: 710:goto
(0 1) 680 LET S $ ="ORANGE"
  Origs: 
  Dests: 690:auto
(0 2) 690 GOTO 710
  Origs: 680:auto
  Dests: 710:goto
(0 1) 700 LET S $ ="BANANA"
  Origs: 
  Dests: 710:auto
(0 1) 710 RETURN
  Origs: 630:goto, 650:goto, 670:goto, 690:goto, 700:auto
  Dests: 
(0 2) 720 PRINT
  Origs: 580:goto
  Dests: 730:auto
(0 2) 730 PRINT "TO CONTINUE TYPE Y, IF NOT TYPE N"
  Origs: 720:auto
  Dests: 740:auto
(0 1) 740 INPUT Z $
  Origs: 730:auto
  Dests: 750:auto
(1 2) 750 IF Z $ ="Y" THEN 780
  Origs: 740:auto
  Dests: 760:auto, 780:ifthen
(0 2) 760 PRINT "ONE-ARM BANDIT SAYS GOOD-BYE"
  Origs: 750:auto
  Dests: 770:auto
(0 1) 770 STOP
  Origs: 760:auto
  Dests: 
(0 2) 780 PRINT
  Origs: 750:ifthen
  Dests: 790:auto
(0 3) 790 GOTO 190
  Origs: 780:auto
  Dests: 190:goto
(0 1) 800 END
  Origs: 
  Dests: 

Unreachable code:

640: LET S $ ="APPLE"
650: GOTO 710
660: LET S $ ="LEMON"
670: GOTO 710
680: LET S $ ="ORANGE"
690: GOTO 710
700: LET S $ ="BANANA"

