10 REM THIS PROGRAM IS A BUBBLE SORT, WHICH PLACES THE
 Remark:THIS PROGRAM IS A BUBBLE SORT, WHICH PLACES THE
20 REM VALUES IN AN ARRAY IN ASCENDING SEQUENCE
 Remark:VALUES IN AN ARRAY IN ASCENDING SEQUENCE
30 REM IT IS INTENDED TO BE AN EXAMPLE AND NOT A
 Remark:IT IS INTENDED TO BE AN EXAMPLE AND NOT A
40 REM SPECIFIC CASE
 Remark:SPECIFIC CASE
50 REM THIS PROGRAM MAY BE CONVERTED INTO A SUBROUTINE
 Remark:THIS PROGRAM MAY BE CONVERTED INTO A SUBROUTINE
60 REM FOR USE IN A LARGER PROGRAM
 Remark:FOR USE IN A LARGER PROGRAM
70 REM THE ARRAY IS Z OF LENGTH N
 Remark:THE ARRAY IS Z OF LENGTH N
80 REM Z IS ASSUMED TO HAVE BEEN DECLARED IN A DIM
 Remark:Z IS ASSUMED TO HAVE BEEN DECLARED IN A DIM
90 REM STATEMENT AND N SET AHEAD OF TIME
 Remark:STATEMENT AND N SET AHEAD OF TIME
100 LET I = N - 1
 Variable:I
 Variable:N
 NumericConstant:1
 BinaryOperatorMinus:-
 AssignmentOperator:=
110 FOR J = 1 TO I
 control: Variable:J
 start:   ["NumericConstant:1"]
 end:     ["Variable:I"]
120 LET K = J + 1
 Variable:K
 Variable:J
 NumericConstant:1
 BinaryOperatorPlus:+
 AssignmentOperator:=
130 FOR L = N TO K STEP -1
 control: Variable:L
 start:   ["Variable:N"]
 end:     ["Variable:K"]
 step:    ["NumericConstant:1", "UnaryOperatorMinus:-"]
140 IF Z(L) > Z(J) THEN 210
 Variable:L
 Variable:Z
 Variable:J
 Variable:Z
 BinaryOperatorGreater:>
150 REM SAVE FIRST VALUE
 Remark:SAVE FIRST VALUE
160 LET T = Z(L)
 Variable:T
 Variable:L
 Variable:Z
 AssignmentOperator:=
170 LET Z(L) =Z(J)
 Variable:L
 Variable:Z
 Variable:J
 Variable:Z
 AssignmentOperator:=
180 LET Z(J) = T
 Variable:J
 Variable:Z
 Variable:T
 AssignmentOperator:=
190 REM IF Z IS THE KEY FOR SORTING MULTIPLE
 Remark:IF Z IS THE KEY FOR SORTING MULTIPLE
200 REM ARRAYS AND EXTRA CODE HERE
 Remark:ARRAYS AND EXTRA CODE HERE
210 NEXT L
 Variable:L
220 NEXT J
 Variable:J
230 RETURN
 

