10 REM THIS PROGRAM COMPUTES THE COMPONENTS
 Remark:THIS PROGRAM COMPUTES THE COMPONENTS
20 REM REQUIRED FOR A PI OR T TYPE
 Remark:REQUIRED FOR A PI OR T TYPE
30 REM RESISTIVE ATTENUATOR
 Remark:RESISTIVE ATTENUATOR
40 PRINT "INPUT RESISTANCE R(IN) = ";
 TextConstant:"INPUT RESISTANCE R(IN) = "
 CarriageControl:;
50 INPUT R1
 Variable:R1 scalar
60 PRINT "OUTPUT RESISTANCE R(OUT) = ";
 TextConstant:"OUTPUT RESISTANCE R(OUT) = "
 CarriageControl:;
70 INPUT R9
 Variable:R9 scalar
80 LET Z = R1/R9
 Variable:Z scalar
 Variable:R1 scalar
 Variable:R9 scalar
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
90 LET Q = (SQR(Z) + SQR(Z - 1))^2
 Variable:Q scalar
 Variable:Z scalar
 FunctionSqr scalar
 Variable:Z scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 FunctionSqr scalar
 BinaryOperatorPlus:+ numeric scalar
 NumericConstant:2
 BinaryOperatorPower:^ numeric scalar
 AssignmentOperator:=
100 LET M = 10*(LOG(Q)/LOG(10))
 Variable:M scalar
 NumericConstant:10
 Variable:Q scalar
 FunctionLog scalar
 NumericConstant:10
 FunctionLog scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 AssignmentOperator:=
110 PRINT "MINIMUM SYSTEM LOSS IN DECIBELS = ";M
 TextConstant:"MINIMUM SYSTEM LOSS IN DECIBELS = "
 CarriageControl:;
 Variable:M scalar
 CarriageControl:NL
120 PRINT "ENTERED DESIRED LOSS IN DECIBELS";
 TextConstant:"ENTERED DESIRED LOSS IN DECIBELS"
 CarriageControl:;
130 INPUT N
 Variable:N scalar
135 LET N = INT(N)
 Variable:N scalar
 Variable:N scalar
 FunctionInt scalar
 AssignmentOperator:=
140 REM COMPUTE T NETWORK
 Remark:COMPUTE T NETWORK
150 LET T3 = 2*(SQR(N*R1*R9))/(N-1)
 Variable:T3 scalar
 NumericConstant:2
 Variable:N scalar
 Variable:R1 scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:R9 scalar
 BinaryOperatorMultiply:* numeric scalar
 FunctionSqr scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
160 LET T1 = R1*((N+1)/(N-1)) - T3
 Variable:T1 scalar
 Variable:R1 scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:T3 scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
170 LET T2 = R9*((N+1)/(N-1)) - T3
 Variable:T2 scalar
 Variable:R9 scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:T3 scalar
 BinaryOperatorMinus:- numeric scalar
 AssignmentOperator:=
180 REM COMPUTE PI NETWORK
 Remark:COMPUTE PI NETWORK
190 LET P3 = 0.5*(N-1)*SQR((R1*R9)/N)
 Variable:P3 scalar
 NumericConstant:0.5
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:R1 scalar
 Variable:R9 scalar
 BinaryOperatorMultiply:* numeric scalar
 Variable:N scalar
 BinaryOperatorDivide:/ numeric scalar
 FunctionSqr scalar
 BinaryOperatorMultiply:* numeric scalar
 AssignmentOperator:=
200 LET P1 = 1/(1/R1*((N+1)/(N-1)) - (1/P3))
 Variable:P1 scalar
 NumericConstant:1
 NumericConstant:1
 Variable:R1 scalar
 BinaryOperatorDivide:/ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 NumericConstant:1
 Variable:P3 scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
210 LET P2 = 1/(1/R9*((N+1)/(N-1)) - (1/P3))
 Variable:P2 scalar
 NumericConstant:1
 NumericConstant:1
 Variable:R9 scalar
 BinaryOperatorDivide:/ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorPlus:+ numeric scalar
 Variable:N scalar
 NumericConstant:1
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMultiply:* numeric scalar
 NumericConstant:1
 Variable:P3 scalar
 BinaryOperatorDivide:/ numeric scalar
 BinaryOperatorMinus:- numeric scalar
 BinaryOperatorDivide:/ numeric scalar
 AssignmentOperator:=
220 REM REPORT
 Remark:REPORT
230 PRINT "R(IN) = ";R1,"R(OUT) = ";R9
 TextConstant:"R(IN) = "
 CarriageControl:;
 Variable:R1 scalar
 CarriageControl:,
 TextConstant:"R(OUT) = "
 CarriageControl:;
 Variable:R9 scalar
 CarriageControl:NL
240 PRINT "DESIRED LOSS = ";N
 TextConstant:"DESIRED LOSS = "
 CarriageControl:;
 Variable:N scalar
 CarriageControl:NL
250 PRINT
 CarriageControl:NL
260 PRINT "T ATTENUATOR"
 TextConstant:"T ATTENUATOR"
 CarriageControl:NL
270 PRINT "RESISTOR 1 = ";T1
 TextConstant:"RESISTOR 1 = "
 CarriageControl:;
 Variable:T1 scalar
 CarriageControl:NL
280 PRINT "RESISTOR 2 = ";T2
 TextConstant:"RESISTOR 2 = "
 CarriageControl:;
 Variable:T2 scalar
 CarriageControl:NL
290 PRINT "RESISTOR 3 = ";T3
 TextConstant:"RESISTOR 3 = "
 CarriageControl:;
 Variable:T3 scalar
 CarriageControl:NL
300 PRINT
 CarriageControl:NL
310 PRINT "PI ATTENUATOR"
 TextConstant:"PI ATTENUATOR"
 CarriageControl:NL
320 PRINT "RESISTOR 1 = ";P1
 TextConstant:"RESISTOR 1 = "
 CarriageControl:;
 Variable:P1 scalar
 CarriageControl:NL
330 PRINT "RESISTOR 2 = ";P2
 TextConstant:"RESISTOR 2 = "
 CarriageControl:;
 Variable:P2 scalar
 CarriageControl:NL
340 PRINT "RESISTOR 3 = ";P3
 TextConstant:"RESISTOR 3 = "
 CarriageControl:;
 Variable:P3 scalar
 CarriageControl:NL
350 PRINT
 CarriageControl:NL
360 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
 TextConstant:"TYPE 1 TO CONTINUE, 0 TO STOP"
 CarriageControl:NL
370 INPUT Q
 Variable:Q scalar
380 IF Q = 1 THEN 400
 Variable:Q scalar
 NumericConstant:1
 BinaryOperatorEqual:= boolean scalar
390 STOP
 
400 PRINT
 CarriageControl:NL
410 GOTO 40
 LineNumber:40
420 END
 

