Statistics:

Number of lines: 20
Number of valid statements: 18
Number of comments: 2
Number of executable statements: 18

Complexity:

Comment density: 0.111
Comprehension effort: 57
McCabe complexity: 5
Halstead complexity:
 length: 50
 volume: 168.365
 difficulty: 7.200
 effort: 1212.226
 language: 3.248
 intelligence: 23.384
 time: 1.122

10 (0 1) REM THIS PROGRAM COMPUTES THE HARMONIC MEAN
  Origs: 
  Dests: 
20 (0 1) REM OF SAMPLES ENTERED BY THE USER
  Origs: 
  Dests: 
30 (0 3) LET Z = 0
  Origs: :start, 190:goto
  Dests: 40:auto
40 (0 3) LET N = 0
  Origs: 30:auto
  Dests: 50:auto
50 (0 2) PRINT "SAMPLE = ";
  Origs: 40:auto, 120:goto
  Dests: 60:auto
60 (1 2) INPUT X
  Origs: 50:auto
  Dests: 70:auto
70 (1 4) IF X = 0 THEN 130
  Origs: 60:auto
  Dests: 80:auto, 130:ifthen
80 (0 4) LET N = N + 1
  Origs: 70:auto
  Dests: 90:auto
90 (0 6) LET Z = Z + (1 / X)
  Origs: 80:auto
  Dests: 100:auto
100 (0 4) LET H = N / Z
  Origs: 90:auto
  Dests: 110:auto
110 (0 7) PRINT "N = "; N, "SAMPLE = "; X, "CURRENT MEAN = "; H
  Origs: 100:auto
  Dests: 120:auto
120 (0 3) GOTO 50
  Origs: 110:auto
  Dests: 50:goto
130 (0 2) PRINT
  Origs: 70:ifthen
  Dests: 140:auto
140 (0 2) PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
  Origs: 130:auto
  Dests: 150:auto
150 (1 2) INPUT L
  Origs: 140:auto
  Dests: 160:auto
160 (1 4) IF L = 1 THEN 180
  Origs: 150:auto
  Dests: 170:auto, 180:ifthen
170 (0 1) STOP
  Origs: 160:auto
  Dests: :stop
180 (0 2) PRINT
  Origs: 160:ifthen
  Dests: 190:auto
190 (0 3) GOTO 30
  Origs: 180:auto
  Dests: 30:goto
200 (0 1) END
  Origs: 
  Dests: :stop

Unreachable code:

200: END

