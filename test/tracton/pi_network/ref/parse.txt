10 REM THIS PROGRAM COMPUTES THE COMPONENTS
 Remark:THIS PROGRAM COMPUTES THE COMPONENTS
20 REM OF A PI-NETWORK. TO MATCH TWO
 Remark:OF A PI-NETWORK. TO MATCH TWO
30 REM IMPEDANCES
 Remark:IMPEDANCES
40 PRINT "ENTER 1ST IMPEDANCE"
 TextValue:"ENTER 1ST IMPEDANCE"
 CarriageControl:NL
50 INPUT Z1
 Variable:Z1 -> .
60 PRINT "ENTER 2ND IMPEDANCE"
 TextValue:"ENTER 2ND IMPEDANCE"
 CarriageControl:NL
70 INPUT Z2
 Variable:Z2 -> .
80 PRINT "ENTER DESIRED SYSTEM Q"
 TextValue:"ENTER DESIRED SYSTEM Q"
 CarriageControl:NL
90 INPUT Q
 Variable:Q -> .
100 PRINT "ENTER OPERATING FREQUENCY"
 TextValue:"ENTER OPERATING FREQUENCY"
 CarriageControl:NL
110 INPUT F
 Variable:F -> .
120 LET A = Z1/Q
 Variable:A -> .
 Variable:Z1 -> .
 Variable:Q -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
130 LET C = ((Z2/Z1)*((Q^2) + 1)) - 1
 Variable:C -> .
 Variable:Z2 -> .
 Variable:Z1 -> .
 BinaryOperatorDivide:/(.,.) -> .
 Variable:Q -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:1
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
140 LET B = Z2/SQR(C)
 Variable:B -> .
 Variable:Z2 -> .
 Variable:C -> .
 FunctionSqr:SQR(.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
150 LET E = (Z2/(Q*B)) + 1
 Variable:E -> .
 Variable:Z2 -> .
 Variable:Q -> .
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
160 LET D = E*((Q*Z1)/((Q^2) + 1))
 Variable:D -> .
 Variable:E -> .
 Variable:Q -> .
 Variable:Z1 -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Q -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 NumericValue:1
 BinaryOperatorPlus:+(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
170 LET P = 6.28319
 Variable:P -> .
 NumericValue:6.28319
 AssignmentOperator:= =. -> .
180 LET C1 = 1/(P*F*A)
 Variable:C1 -> .
 NumericValue:1
 Variable:P -> .
 Variable:F -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:A -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
190 LET C2 = 1/(P*F*B)
 Variable:C2 -> .
 NumericValue:1
 Variable:P -> .
 Variable:F -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:B -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
200 LET L = D/(P*F)
 Variable:L -> .
 Variable:D -> .
 Variable:P -> .
 Variable:F -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
210 PRINT "COMPONENTS OF PI-NETWORK"
 TextValue:"COMPONENTS OF PI-NETWORK"
 CarriageControl:NL
220 PRINT "CAPACITOR 1 = ";C1
 TextValue:"CAPACITOR 1 = "
 CarriageControl:;
 Variable:C1 -> .
 CarriageControl:NL
230 PRINT "CAPACITOR 2 = ";C2
 TextValue:"CAPACITOR 2 = "
 CarriageControl:;
 Variable:C2 -> .
 CarriageControl:NL
240 PRINT "INDUCTOR = ";L
 TextValue:"INDUCTOR = "
 CarriageControl:;
 Variable:L -> .
 CarriageControl:NL
250 PRINT
 CarriageControl:NL
260 PRINT "TO CONTINUE TYPE 1, IF NOT 0"
 TextValue:"TO CONTINUE TYPE 1, IF NOT 0"
 CarriageControl:NL
270 INPUT X
 Variable:X -> .
280 IF X = 1 THEN 300
 Variable:X -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:300
290 STOP
 
300 PRINT
 CarriageControl:NL
310 GOTO 40
 LineNumber:40
320 END
 

