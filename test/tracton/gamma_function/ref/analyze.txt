Statistics:

Number of lines: 62
Number of valid statements: 59
Number of comments: 3
Number of executable statements: 58

Complexity:

Comment density: 0.051
Comprehension effort: 200
McCabe complexity: 11
Halstead complexity:
 length: 213
 volume: 936.018
 difficulty: 13.068
 effort: 12232.049
 language: 5.481
 intelligence: 71.626
 time: 11.326

(0 1) 10 REM THIS PROGRAM GENERATES VIA POLYNOMIAL
  Origs: 
  Dests: 
(0 1) 20 REM APPROXIMATION THE GAMMA FUNCTION
  Origs: 
  Dests: 
(0 1) 30 REM AND THE GENERALIZED FACTORIALS
  Origs: 
  Dests: 
(0 3) 40 LET A = 0.57717
  Origs: :start
  Dests: 50:auto
(0 3) 50 LET B = 0.98821
  Origs: 40:auto
  Dests: 60:auto
(0 3) 60 LET C = 0.89706
  Origs: 50:auto
  Dests: 70:auto
(0 3) 70 LET D = 0.91821
  Origs: 60:auto
  Dests: 80:auto
(0 3) 80 LET E = 0.7567
  Origs: 70:auto
  Dests: 90:auto
(0 3) 90 LET F = 0.4822
  Origs: 80:auto
  Dests: 100:auto
(0 3) 100 LET G = 0.19353
  Origs: 90:auto
  Dests: 110:auto
(0 3) 110 LET H = 0.03587
  Origs: 100:auto
  Dests: 120:auto
(0 2) 120 PRINT "TYPE G FOR GAMMA FUNCTION OR"
  Origs: 110:auto, 180:goto, 480:goto
  Dests: 130:auto
(0 2) 130 PRINT "TYPE F FOR THE GENERALIZED FACTORIAL"
  Origs: 120:auto
  Dests: 140:auto
(0 1) 140 INPUT A $
    Syntax error: "A$" Token 'InvalidToken:$' is not a value or operator
  Origs: 130:auto
  Dests: 150:auto
(1 2) 150 IF A $ ="G" THEN 190
    Token 'InvalidToken:$' is not a value or operator
  Origs: 140:auto
  Dests: 160:auto, 190:ifthen
(1 2) 160 IF A $ ="F" THEN 300
    Token 'InvalidToken:$' is not a value or operator
  Origs: 150:auto
  Dests: 170:auto, 300:ifthen
(0 2) 170 PRINT "INVALID RESPONSE"
  Origs: 160:auto
  Dests: 180:auto
(0 3) 180 GOTO 120
  Origs: 170:auto
  Dests: 120:goto
(0 2) 190 PRINT "ENTER VALUE OF X"
  Origs: 150:ifthen, 250:goto
  Dests: 200:auto
(1 2) 200 INPUT X
  Origs: 190:auto
  Dests: 210:auto
(0 3) 210 LET K = X
  Origs: 200:auto
  Dests: 220:auto
(0 4) 220 LET K = K - 1
  Origs: 210:auto
  Dests: 230:auto
(1 4) 230 IF K >= 0 THEN 260
  Origs: 220:auto
  Dests: 240:auto, 260:ifthen
(0 2) 240 PRINT "X MUST BE EQUAL TO OR GREATER THAN 1"
  Origs: 230:auto
  Dests: 250:auto
(0 3) 250 GOTO 190
  Origs: 240:auto
  Dests: 190:goto
(0 2) 260 GOSUB 490
  Origs: 230:ifthen
  Dests: 270:auto, 490:gosub
(1 6) 270 IF (X - 1) - INT(X - 1) THEN 410
  Origs: 260:auto
  Dests: 280:auto, 410:ifthen
(0 2) 280 GOSUB 570
  Origs: 270:auto
  Dests: 290:auto, 570:gosub
(0 2) 290 GOTO 410
  Origs: 280:auto
  Dests: 410:goto
(0 2) 300 PRINT "ENTER VALUE OF X"
  Origs: 160:ifthen, 350:goto
  Dests: 310:auto
(1 2) 310 INPUT X
  Origs: 300:auto
  Dests: 320:auto
(0 3) 320 LET K = X
  Origs: 310:auto
  Dests: 330:auto
(1 4) 330 IF K >= 0 THEN 360
  Origs: 320:auto
  Dests: 340:auto, 360:ifthen
(0 2) 340 PRINT "X MUST BE GREATER THAN OR EQUAL TO 0"
  Origs: 330:auto
  Dests: 350:auto
(0 3) 350 GOTO 300
  Origs: 340:auto
  Dests: 300:goto
(0 2) 360 GOSUB 490
  Origs: 330:ifthen
  Dests: 370:auto, 490:gosub
(1 5) 370 IF X = INT(X) THEN 390
  Origs: 360:auto
  Dests: 380:auto, 390:ifthen
(0 2) 380 GOSUB 570
  Origs: 370:auto
  Dests: 390:auto, 570:gosub
(0 4) 390 PRINT X; "! = "; K
  Origs: 370:ifthen, 380:auto
  Dests: 400:auto
(0 2) 400 GOTO 420
  Origs: 390:auto
  Dests: 420:goto
(0 5) 410 PRINT "GAMMA ("; X; ") = "; K
  Origs: 270:ifthen, 290:goto
  Dests: 420:auto
(0 2) 420 PRINT
  Origs: 400:goto, 410:auto
  Dests: 430:auto
(0 2) 430 PRINT "TO CONTINUE TYPE Y, IF NOT TYPE N"
  Origs: 420:auto
  Dests: 440:auto
(0 1) 440 INPUT L $
    Syntax error: "L$" Token 'InvalidToken:$' is not a value or operator
  Origs: 430:auto
  Dests: 450:auto
(1 2) 450 IF L $ ="Y" THEN 470
    Token 'InvalidToken:$' is not a value or operator
  Origs: 440:auto
  Dests: 460:auto, 470:ifthen
(0 1) 460 STOP
  Origs: 450:auto
  Dests: :stop
(0 2) 470 PRINT
  Origs: 450:ifthen
  Dests: 480:auto
(0 3) 480 GOTO 120
  Origs: 470:auto
  Dests: 120:goto
(0 3) 490 LET J = 1
  Origs: 260:gosub, 360:gosub
  Dests: 500:auto
(0 4) 500 LET J = J * K
  Origs: 490:auto, 530:goto
  Dests: 510:auto
(0 4) 510 LET K = K - 1
  Origs: 500:auto
  Dests: 520:auto
(1 4) 520 IF K < 1 THEN 540
  Origs: 510:auto
  Dests: 530:auto, 540:ifthen
(0 3) 530 GOTO 500
  Origs: 520:auto
  Dests: 500:goto
(0 3) 540 LET L = K
  Origs: 520:ifthen
  Dests: 550:auto
(0 3) 550 LET K = J
  Origs: 540:auto
  Dests: 560:auto
(0 1) 560 RETURN
  Origs: 550:auto
  Dests: 
(0 16) 570 LET A1 = 1 + (A * L) + (B * (L ^ 2)) + (C * (L ^ 3))
  Origs: 280:gosub, 380:gosub
  Dests: 580:auto
(0 18) 580 LET A1 = A1 + (D * (L ^ 4)) + (E * (L ^ 5)) + (F * (L ^ 6))
  Origs: 570:auto
  Dests: 590:auto
(0 13) 590 LET A1 = A1 + (G * (L ^ 7)) + (H * (L ^ 8))
  Origs: 580:auto
  Dests: 600:auto
(0 4) 600 LET K = A1 * K
  Origs: 590:auto
  Dests: 610:auto
(0 1) 610 RETURN
  Origs: 600:auto
  Dests: 
(0 1) 620 END
  Origs: 
  Dests: :stop

Unreachable code:

All executable lines are reachable.

