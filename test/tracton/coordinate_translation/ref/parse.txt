10 REM THIS PROGRAM COMPUTES RECTANGULAR COORDINATE
 Remark:THIS PROGRAM COMPUTES RECTANGULAR COORDINATE
20 REM TRANSLATION AND/OR ROTATION
 Remark:TRANSLATION AND/OR ROTATION
30 PRINT "ANGLE OF ROTATION IN DEGREES = ";
 TextConstant:"ANGLE OF ROTATION IN DEGREES = "
 CarriageControl:;
40 INPUT A
 Variable:A -> _
50 LET B = (A*3.14159)/180
 Variable:B -> _
 Variable:A -> _
 NumericConstant:3.14159
 BinaryOperatorMultiply:*(_,_) -> _
 NumericConstant:180
 BinaryOperatorDivide:/(_,_) -> _
 AssignmentOperator:=
60 PRINT "COORDINATES OF NEW ORIGIN (X0,Y0) =";
 TextConstant:"COORDINATES OF NEW ORIGIN (X0,Y0) ="
 CarriageControl:;
70 INPUT X,Y
 Variable:X -> _
 Variable:Y -> _
80 PRINT "OLD COORDINATES OF DATA POINT (X1,Y1) =";
 TextConstant:"OLD COORDINATES OF DATA POINT (X1,Y1) ="
 CarriageControl:;
90 INPUT F,C
 Variable:F -> _
 Variable:C -> _
100 LET Z = F - X
 Variable:Z -> _
 Variable:F -> _
 Variable:X -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:=
110 LET W = C - Y
 Variable:W -> _
 Variable:C -> _
 Variable:Y -> _
 BinaryOperatorMinus:-(_,_) -> _
 AssignmentOperator:=
120 LET D = (Z*COS(B)) + (W*SIN(B))
 Variable:D -> _
 Variable:Z -> _
 Variable:B -> _
 FunctionCos:COS(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 Variable:W -> _
 Variable:B -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:=
130 LET E = - (Z*SIN(B)) + (W*COS(B))
 Variable:E -> _
 Variable:Z -> _
 Variable:B -> _
 FunctionSin:SIN(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 UnaryOperatorMinus:-(_) -> _
 Variable:W -> _
 Variable:B -> _
 FunctionCos:COS(_) -> _
 BinaryOperatorMultiply:*(_,_) -> _
 BinaryOperatorPlus:+(_,_) -> _
 AssignmentOperator:=
140 PRINT
 CarriageControl:NL
150 PRINT "SPECIFIED ROTATION =";A
 TextConstant:"SPECIFIED ROTATION ="
 CarriageControl:;
 Variable:A -> _
 CarriageControl:NL
160 PRINT "NEW COORDINATES OF DATA POINT"
 TextConstant:"NEW COORDINATES OF DATA POINT"
 CarriageControl:NL
170 PRINT "X2 = ";D
 TextConstant:"X2 = "
 CarriageControl:;
 Variable:D -> _
 CarriageControl:NL
180 PRINT "Y2 = ";E
 TextConstant:"Y2 = "
 CarriageControl:;
 Variable:E -> _
 CarriageControl:NL
190 PRINT
 CarriageControl:NL
200 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
 TextConstant:"TYPE 1 TO CONTINUE, 0 TO STOP"
 CarriageControl:NL
210 INPUT L
 Variable:L -> _
220 IF L = 1 THEN 240
 Variable:L -> _
 NumericConstant:1
 BinaryOperatorEqual:=(_,_) -> ?
230 STOP
 
240 PRINT
 CarriageControl:NL
250 GOTO 30
 LineNumber:30
260 END
 

