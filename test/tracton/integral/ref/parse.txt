10 REM THIS PROGRAM COMPUTES THE INTEGRAL BETWEEN
 Remark:THIS PROGRAM COMPUTES THE INTEGRAL BETWEEN
20 REM THE LIMITS A AND B OF F(X)
 Remark:THE LIMITS A AND B OF F(X)
30 LET C1 = .238619
 Variable:C1 -> .
 NumericValue:.238619
 AssignmentOperator:= =. -> .
40 LET C2 = C1
 Variable:C2 -> .
 Variable:C1 -> .
 AssignmentOperator:= . -> .
50 LET C3 = .661209
 Variable:C3 -> .
 NumericValue:.661209
 AssignmentOperator:= =. -> .
60 LET C4 = C3
 Variable:C4 -> .
 Variable:C3 -> .
 AssignmentOperator:= . -> .
70 LET C5 = .932470
 Variable:C5 -> .
 NumericValue:.932470
 AssignmentOperator:= =. -> .
80 LET C6 = C5
 Variable:C6 -> .
 Variable:C5 -> .
 AssignmentOperator:= . -> .
90 LET D1 = .467914
 Variable:D1 -> .
 NumericValue:.467914
 AssignmentOperator:= =. -> .
100 LET D2 = .360762
 Variable:D2 -> .
 NumericValue:.360762
 AssignmentOperator:= =. -> .
110 LET D3 = .171324
 Variable:D3 -> .
 NumericValue:.171324
 AssignmentOperator:= =. -> .
120 LET J = 0
 Variable:J -> .
 NumericValue:0
 AssignmentOperator:= =. -> .
130 PRINT "ENTER ENDPOINTS A,B"
 TextValue:"ENTER ENDPOINTS A,B"
 CarriageControl:NL
140 INPUT A,B
 Variable:A -> .
 Variable:B -> .
150 LET Y = B - A
 Variable:Y -> .
 Variable:B -> .
 Variable:A -> .
 BinaryOperatorMinus:-(.,.) -> .
 AssignmentOperator:= . -> .
160 LET Z = B + A
 Variable:Z -> .
 Variable:B -> .
 Variable:A -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
170 LET X = ((C1*Y) +Z)/2
 Variable:X -> .
 Variable:C1 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
180 GOSUB 500
 LineNumber:500
190 LET N = D1*Q
 Variable:N -> .
 Variable:D1 -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
200 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
210 LET X = ((C2*Y) + Z)/2
 Variable:X -> .
 Variable:C2 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
220 GOSUB 500
 LineNumber:500
230 LET N = D1*Q
 Variable:N -> .
 Variable:D1 -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
240 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
250 LET X = ((C3*Y) + Z)/2
 Variable:X -> .
 Variable:C3 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
260 GOSUB 500
 LineNumber:500
270 LET N = D2*Q
 Variable:N -> .
 Variable:D2 -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
280 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
290 LET X = ((C4*Y) + Z)/2
 Variable:X -> .
 Variable:C4 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
300 GOSUB 500
 LineNumber:500
310 LET N = D2*Q
 Variable:N -> .
 Variable:D2 -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
320 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
330 LET X = ((C5*Y) + Z)/2
 Variable:X -> .
 Variable:C5 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
340 GOSUB 500
 LineNumber:500
350 LET N = D3*Q
 Variable:N -> .
 Variable:D3 -> .
 Variable:Q -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
360 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
370 LET X = ((C6*Y) + Z)/2
 Variable:X -> .
 Variable:C6 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 Variable:Z -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 AssignmentOperator:= . -> .
380 GOSUB 500
 LineNumber:500
390 LET N = D3*Y
 Variable:N -> .
 Variable:D3 -> .
 Variable:Y -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
400 LET J = J + N
 Variable:J -> .
 Variable:J -> .
 Variable:N -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
410 LET G = (Y/2)*J
 Variable:G -> .
 Variable:Y -> .
 NumericValue:2
 BinaryOperatorDivide:/(.,.) -> .
 Variable:J -> .
 BinaryOperatorMultiply:*(.,.) -> .
 AssignmentOperator:= . -> .
420 PRINT "INTEGRAL = ";G
 TextValue:"INTEGRAL = "
 CarriageControl:;
 Variable:G -> .
 CarriageControl:NL
430 PRINT
 CarriageControl:NL
440 PRINT "TYPE 1 TO CONTINUE, 0 TO STOP"
 TextValue:"TYPE 1 TO CONTINUE, 0 TO STOP"
 CarriageControl:NL
450 INPUT L
 Variable:L -> .
460 IF L = 1 THEN 480
 Variable:L -> .
 NumericValue:1
 BinaryOperatorEqual:=(.,.) -> ?
 LineNumber:480
470 STOP
 
480 PRINT
 CarriageControl:NL
490 GOTO 120
 LineNumber:120
500 LET Q = 13*X^2 - 6*X^2 + SIN(X) + 1/X
 Variable:Q -> .
 NumericValue:13
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 NumericValue:6
 Variable:X -> .
 NumericValue:2
 BinaryOperatorPower:^(.,.) -> .
 BinaryOperatorMultiply:*(.,.) -> .
 BinaryOperatorMinus:-(.,.) -> .
 Variable:X -> .
 FunctionSin:SIN(.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 NumericValue:1
 Variable:X -> .
 BinaryOperatorDivide:/(.,.) -> .
 BinaryOperatorPlus:+(.,.) -> .
 AssignmentOperator:= . -> .
510 RETURN
 
520 END
 

