BASIC-1965

This is an interpreter for the oldest form of BASIC, Dartmouth BASIC. Created in 1964 by Kemeny and Kurtz, BASIC was an interactive language that could take advantage of timesharing systems.

This version is a primitive form of BASIC, less powerful than Microsoft BASIC.

Features of the language:
- Numeric variables only; no string variables
- Functions ABS, EXP, FIX, FRAC, INT, LOG, LOG10, LOG2, MOD, RND, ROUND, SGN, SQR
- Trigonometric functions ARCCOS, ARCSIN, ARCTAN, ATN, COS, COT, CSC, SEC, SIN, TAN
- Matrix functions CON, DET, IDN, INV, MAXM, MINM, NCOL, NROW, TRN, ZER
- Array functions AVG, MAXA, MINA, NELEM, PROD, SUM
- User-defined functions in form FNx(X)
- Statements DATA, DIM, DEF FN, END, FOR, GOSUB, GOTO, IF, INPUT, LET, NEXT, OPTION, PRINT, READ, REMARK, RETURN, STOP, WRITE
- The LET statement must include the LET keyword
- Matrix statements MAT LET, MAT INPUT, MAT PRINT, MAT READ, MAT WRITE
- Array statements ARR LET, ARR INPUT, ARR PLOT, ARR PRINT, ARR READ, ARR WRITE
- Only one statement on each line
- Comments with single quote (') character
- File operations with the FILES statement (not OPEN and CLOSE statements)
- IF/THEN, but no IF/THEN/ELSE

Features of the interpreter:
- Interactive mode and command-line mode
- Option for slow output to simulate Teletype
- Trace ability to print lines as they are executed
- Provenence for trace output to indicate the lines in which variables were assigned
- Profile information with execution time and counts for each line
- Cross-reference listing
- Rudimentary debugger
- Rudimentary checks for infinite loop
- McCabe and Halstead complexity measurements
- Options for numeric precision
- Option to forget variable after FOR/NEXT loop
- Option to lock variable during FOR/NEXT loop
